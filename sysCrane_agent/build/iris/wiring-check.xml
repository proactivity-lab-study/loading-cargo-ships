<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:shipmainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fef8de5f020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fef8e072c10"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fef8e072c10"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fef8e06ddc0"/></to>
    </wire>
    <wire loc="19:shipmainC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fef8de5f660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fef8de8ea80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fef8de8ea80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fef8de8b400"/></to>
    </wire>
    <wire loc="20:shipmainC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fef8de5c140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fef8de076a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fef8de076a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fef8dd8a610"/></to>
    </wire>
    <wire loc="21:shipmainC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fef8de5cd50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fef8d1c0970"/></to>
    </wire>
    <wire loc="25:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fef8d1c0970"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fef8d131920"/></to>
    </wire>
    <wire loc="27:shipmainC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8cde6bd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8cdf6dc0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8cdf6dc0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8c55d5a0"/></to>
    </wire>
    <wire loc="28:shipmainC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8cde2930"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8cdf61b0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8cdf61b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8c55e960"/></to>
    </wire>
    <wire loc="29:shipmainC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8cde1620"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8cdeacc0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8cdeacc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8dddd390"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:shipmainC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8cdbd610"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8cdca280"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8cdca280"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8c4fe400"/></to>
    </wire>
    <wire loc="36:shipmainC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8cdbc2f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8cdcb650"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8cdcb650"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8c4ff770"/></to>
    </wire>
    <wire loc="37:shipmainC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8cdbb020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8cdc4140"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8cdc4140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8dddd390"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:shipmainC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fef8cdc1e50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fef8de8ea80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7fef8cfc63f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7fef8cfbe510"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8d033440"/></to>
    </wire>
    <wire loc="24:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8d1312d0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8c621660"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8d58f600"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8d7c6b50"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8d88b6e0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8c779760"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8c7a8b60"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8c86d460"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8c8fe080"/></to>
    </wire>
    <wire loc="45:shipmainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8cd6b4e0"/></to>
    </wire>
    <wire loc="46:shipmainC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7fef8cd796d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8cce1450"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8cce1450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fef8d6052e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:shipmainC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fef8cd729f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fef8de8ea80"/></to>
    </wire>
    <wire loc="48:shipmainC.nc">
      <from><interface-ref name="SysLink2" scoped="" ref="0x7fef8cdba080"/></from>
      <to><interface-ref name="SysLink2" scoped="" ref="0x7fef8cd6bb50"/></to>
    </wire>
    <wire loc="49:shipmainC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fef8cd70160"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fef8d890160"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fef8d890160"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fef8d889100"/></to>
    </wire>
    <wire loc="50:shipmainC.nc">
      <from><interface-ref name="Seed" scoped="" ref="0x7fef8cd70b80"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fef8d891060"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fef8d891060"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fef8d88a020"/></to>
    </wire>
    <wire loc="51:shipmainC.nc">
      <from><interface-ref name="SerialLink" scoped="" ref="0x7fef8cd6e020"/></from>
      <to><interface-ref name="FlushUint8t" scoped="" ref="0x7fef8d1cee50"/></to>
    </wire>
    <wire loc="31:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="FlushUint8t" scoped="" ref="0x7fef8d1cee50"/></from>
      <to><interface-ref name="FlushUint8t" scoped="" ref="0x7fef8d1b19e0"/></to>
    </wire>
    <wire loc="52:shipmainC.nc">
      <from><interface-ref name="StartGame" scoped="" ref="0x7fef8de54bb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fef8cd69650"/></to>
    </wire>
    <wire loc="57:shipmainC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fef8ccd47a0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fef8d890160"/></to>
    </wire>
    <wire loc="58:shipmainC.nc">
      <from><interface-ref name="Seed" scoped="" ref="0x7fef8ccd3210"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fef8d891060"/></to>
    </wire>
    <wire loc="59:shipmainC.nc">
      <from><interface-ref name="CraneLink" scoped="" ref="0x7fef8ccd9aa0"/></from>
      <to><interface-ref name="CraneLink" scoped="" ref="0x7fef8cddcdf0"/></to>
    </wire>
    <wire loc="60:shipmainC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fef8ccd5020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fef8de8ea80"/></to>
    </wire>
    <wire loc="61:shipmainC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8ccd1490"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8cc80b00"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8cc80b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fef8d6052e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:shipmainC.nc">
      <from><interface-ref name="KnowledgeLink" scoped="" ref="0x7fef8ccd6340"/></from>
      <to><interface-ref name="KnowledgeLink" scoped="" ref="0x7fef8cd63960"/></to>
    </wire>
    <wire loc="63:shipmainC.nc">
      <from><interface-ref name="CraneStart" scoped="" ref="0x7fef8de54300"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fef8ccc8150"/></to>
    </wire>
    <wire loc="64:shipmainC.nc">
      <from><interface-ref name="SerialLink" scoped="" ref="0x7fef8ccccb50"/></from>
      <to><interface-ref name="FlushUint8t_2" scoped="" ref="0x7fef8d1ca5e0"/></to>
    </wire>
    <wire loc="32:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="FlushUint8t_2" scoped="" ref="0x7fef8d1ca5e0"/></from>
      <to><interface-ref name="FlushUint8t_2" scoped="" ref="0x7fef8d1ac150"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fef8dea9470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fef8e191510"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fef8e191510"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fef8e0c3e40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fef8dea8020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fef8d481680"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fef8dea8020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fef8d591a60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fef8dea8020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8e06ca70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fef8e06ca70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8e069cf0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8dea8720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fef8e06a9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8cea7c60"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fef8e06a9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8d2d8b50"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fef8e066bb0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fef8dec8690"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fef8e062b00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8dec8020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fef8e062400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8de67920"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fef8e062400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fef8e0644a0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fef8e0644a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fef8e0570e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fef8e064b70"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fef8e06a9d0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fef8e050620"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fef8e046cb0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fef8e046cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fef8dfbada0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fef8e056820"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fef8e064b70"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fef8e00fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8df20160"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fef8e02b350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fef8df8e2b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fef8df8e2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cae7e20"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fef8e01f350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fef8df7d8f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fef8df7d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca753f0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fef8e015cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fef8df6ec10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fef8df6ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca0a3f0"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fef8e008060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8df056d0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fef8e043350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fef8dfb72b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fef8dfb72b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cc1a0a0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fef8e017670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fef8df708f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fef8df708f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca11e20"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fef8e041990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fef8dfafa20"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fef8dfafa20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cbc2060"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fef8e034990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fef8df9c020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fef8df9c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cb500a0"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fef8e028cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fef8df8b760"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fef8df8b760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cadd6d0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fef8e01ccb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fef8df7ada0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fef8df7ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca6ce20"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fef8e049350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fef8dfbd8f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fef8dfbd8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cc2a0a0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fef8e03d350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fef8dfab020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fef8dfab020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cbb99b0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fef8e030350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fef8df995d0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fef8df995d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cb479b0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fef8e024670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fef8df88c10"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fef8df88c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cad30a0"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fef8e011670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fef8df692b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fef8df692b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca01e20"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fef8e00bb20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8df10160"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fef8e022cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fef8df7f5d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fef8df7f5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca7ce20"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fef8dfbada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cc219b0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fef8e03acb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fef8dfa75d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fef8dfa75d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cbaf3f0"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fef8e00d4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8df1bc90"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fef8e037350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fef8dfa0d30"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fef8dfa0d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cb57a60"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fef8e02a670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fef8df8d440"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fef8df8d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cae30a0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fef8e01e670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fef8df7ca80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fef8df7ca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca726d0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fef8e013020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fef8df6cda0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fef8df6cda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca076d0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fef8e042670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fef8dfb6440"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fef8dfb6440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cc173f0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fef8e040cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fef8dfaec10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fef8dfaec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cbbf3f0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fef8e033cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fef8df9b2b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fef8df9b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cb4d3f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fef8e026020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fef8df8a8f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fef8df8a8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cada9b0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fef8e019020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fef8df77020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fef8df77020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca680a0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fef8e048670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fef8dfbca80"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fef8dfbca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cc273f0"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fef8e03c670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fef8dfaa2b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fef8dfaa2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cbb6e20"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fef8e02f670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fef8df98760"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fef8df98760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cb44e20"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fef8e010990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fef8df68440"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fef8df68440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8c9fd0a0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fef8e02dcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fef8df8f020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fef8df8f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8caeac90"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fef8e020020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fef8df7e760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fef8df7e760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca780a0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fef8e016990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fef8df6fa80"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fef8df6fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca0d0a0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fef8e00ae40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8df0bc90"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fef8e044020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fef8dfb8020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fef8dfb8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cc1ee20"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fef8e038020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fef8dfa6760"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fef8dfa6760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cbac6d0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fef8e018350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fef8df717a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fef8df717a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca15c90"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fef8e035670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fef8df9fe60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fef8df9fe60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cb54e20"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fef8e029990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fef8df8c5d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fef8df8c5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cae03f0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fef8e01d990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fef8df7bc10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fef8df7bc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca6f9b0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fef8e012350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fef8df6a020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fef8df6a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca049b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fef8e04a020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fef8dfbe6b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fef8dfbe6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cc2ee20"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fef8e03e020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fef8dfadda0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fef8dfadda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cbbc6d0"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fef8e031020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fef8df9a440"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fef8df9a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cb4a6d0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fef8e025350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fef8df89a80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fef8df89a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cad7e20"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fef8e00c800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8df156d0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fef8e023990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fef8df803f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fef8df803f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8ca7fc90"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fef8e02e990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fef8df978f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fef8df978f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cb400a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fef8e047990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fef8dfbbc10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fef8dfbbc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cc246d0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fef8e03b990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fef8dfa8440"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fef8dfa8440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fef8cbb20a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e0c2d30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fef8e0bd2c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fef8e0d93b0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fef8e09e330"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fef8d703a70"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fef8de67920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8de97dc0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fef8de8ab90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fef8de6a020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fef8de6a020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fef8e048670"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fef8de89e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fef8de69380"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fef8de69380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fef8e049350"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fef8de87020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fef8de686a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fef8de686a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fef8e04a020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fef8dd8a610"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fef8dd5f270"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fef8ddca6d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fef8dd83020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fef8dd83020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fef8dd5cd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8ddc1180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8dd83630"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8dd83630"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fef8dd5aba0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8ddd3630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8dd87640"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8dd87640"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8dd5e2c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fef8ddd2020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fef8dd85430"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fef8dd85430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fef8dd5c1d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8dda5dd0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8dd804b0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8dd804b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8dd3f4b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8dddd390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8dd86810"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8dd86810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8dd5d4d0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dda84c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dd81990"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dd81990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dd48a10"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fef8dda9020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fef8dd7f020"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fef8dd7f020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fef8dd3e020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8ddb11e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8dd822d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8dd822d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8dd5b430"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fef8dd99d40"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fef8dd7fcb0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fef8dd7fcb0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fef8dd3ecb0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7fef8dd95d70"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8dd6dac0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8dd6dac0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8dd31550"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8dd8fe60"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8dd67c70"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8dd67c70"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8dd2d660"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fef8dd5f270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fef8d961880"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8dd74c40"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8dd363b0"/></to>
    </wire>
    <wire loc="345:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8dd363b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8d5ae3b0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fef8dd5cd60"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fef8db483a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fef8dd5aba0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8db4b720"/></to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8dd5e2c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8db4a530"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fef8dd5c1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fef8db49b00"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8dd76660"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8dd3be80"/></to>
    </wire>
    <wire loc="343:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8dd3be80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8d5b2e80"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8dd3f4b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8d94a270"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8dd5d4d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8db493a0"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8dd31550"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8d5f8020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8dd6a5d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8dd32020"/></to>
    </wire>
    <wire loc="347:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8dd32020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d5a5a40"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8dd7d110"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8dd3d8e0"/></to>
    </wire>
    <wire loc="344:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8dd3d8e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8d5a9e70"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dd48a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8d848b60"/></to>
    </wire>
    <wire loc="226:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fef8dd3e020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fef8d96cd60"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8dd5b430"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8db4c020"/></to>
    </wire>
    <wire loc="264:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fef8dd3ecb0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fef8d8d45f0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8dd6c800"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8dd34710"/></to>
    </wire>
    <wire loc="346:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8dd34710"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8d5a51e0"/></to>
    </wire>
    <wire loc="310:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8dd2d660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8d5fc020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fef8d961880"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fef8d94ad90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8d5ae3b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8d589a40"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7fef8dd57020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fef8da96d30"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7fef8dd4f5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fef8dacb390"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fef8dacb390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fef8c86a9d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fef8db483a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fef8c8bf420"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8d5fc020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8c6ed2a0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8db4a530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8c8c16c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fef8db49b00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fef8c8c0c90"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7fef8dd41760"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fef8d9b7dd0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7fef8d9b7dd0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fef8c7fd2e0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7fef8dd49bb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8dac6e00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8d94a270"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8c781640"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8d5b2e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8d58b550"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8db493a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8c8c0530"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8db4b720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8c8c28b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8d5f8020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8c6e91c0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d5a5a40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d485020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8d5a9e70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8d581560"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7fef8dd51a60"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7fef8da98a50"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fef8d96cd60"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7fef8d967100"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8db4c020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8c8c3270"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7fef8dd58840"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7fef8da96760"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fef8d8d45f0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fef8c777d00"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8d5a51e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8d57f8b0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8dc91470"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8d9bae00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8d9bae00"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8c800020"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8dc8a400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8dbf5020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fef8dc8eab0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8d5f8020"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7fef8dc84960"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5b3d90"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5b3d90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d58c470"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fef8dbf4b60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fef8d5a4dd0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fef8d5a4dd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fef8d48aac0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fef8dbf5cb0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fef8dd283c0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8db458c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7fef8dcad890"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8db468f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fef8db3f880"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8db452b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7fef8da54020"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8db48a30"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7fef8da54630"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fef8db3ec00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fef8dacb390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8db3e310"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7fef8da555d0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8da95390"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8d9bae00"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8da912b0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7fef8da897c0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8da91be0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7fef8da56120"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fef8da92470"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fef8da56730"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8da534a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fef8d981840"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fef8d981840"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fef8c7a99b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8da53dd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8d9b5e60"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8d9b5e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8c7fb440"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8da52410"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d9b5080"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d9b5080"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8c7fc590"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8d9b4500"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d96ba10"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d96ba10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fef8d9698c0"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8d9b3440"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8d96c790"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8d96c790"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fef8d9692b0"/></to>
    </wire>
    <wire loc="217:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8d97ebe0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7fef8dcc2480"/></to>
    </wire>
    <wire loc="218:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8d980a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fef8d977e40"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fef8d977e40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fef8d96a950"/></to>
    </wire>
    <wire loc="219:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fef8d97d720"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fef8dcdbcb0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fef8dcdbcb0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fef8c8fe650"/></to>
    </wire>
    <wire loc="220:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8d97c400"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8dcdaaa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8d968720"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8d848b60"/></to>
    </wire>
    <wire loc="232:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8d96a950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fef8d94c440"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fef8d94c440"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fef8d9488c0"/></to>
    </wire>
    <wire loc="233:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8d9692b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8d94cd70"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8d94cd70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fef8d9472b0"/></to>
    </wire>
    <wire loc="234:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8d9698c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d94b3d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d94b3d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fef8d9478c0"/></to>
    </wire>
    <wire loc="250:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fef8d94ad90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fef8d8d6a10"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fef8d8d6a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fef8c77abf0"/></to>
    </wire>
    <wire loc="251:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8d9488c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fef8d8d55d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fef8d8d55d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fef8c779d70"/></to>
    </wire>
    <wire loc="252:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8d9472b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8d8d4020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fef8d8d4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fef8c777730"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8d9478c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5f5c20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5f5c20"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8c6e7d90"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fef8d8d28b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fef8d87b740"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fef8d87b740"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fef8c73b660"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d8d1270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d980270"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d980270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8c7a8400"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fef8d8d3aa0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fef8d5c7b60"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fef8d5c7b60"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7fef8d5c0410"/></to>
    </wire>
    <wire loc="263:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fef8d8d3020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fef8dd283c0"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8d97e440"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d87a060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d87a060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8c739020"/></to>
    </wire>
    <wire loc="277:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8d878760"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7fef8dcbac80"/></to>
    </wire>
    <wire loc="278:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8d87a860"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fef8d873ac0"/></to>
    </wire>
    <wire loc="279:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8d8792b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d848400"/></to>
    </wire>
    <wire loc="280:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d879a10"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8dbf5020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7fef8d8435d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fef8d5ed9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="287:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d846780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8dbf5020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8d845440"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7fef8dcc6190"/></to>
    </wire>
    <wire loc="293:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8d847630"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fef8d828a40"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fef8d828a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fef8d821440"/></to>
    </wire>
    <wire loc="294:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8d846020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d827400"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d827400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fef8d821d70"/></to>
    </wire>
    <wire loc="299:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8d81fb40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7fef8dcaa560"/></to>
    </wire>
    <wire loc="300:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8d821440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fef8d5c6a40"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fef8d5c6a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fef8d5bf440"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8d821d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d5c5400"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d5c5400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fef8d5bfd70"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7fef8d8205a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7fef8d5b35c0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fef8d5b35c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7fef8d58dc40"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d5f4c00"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d5a5a40"/></to>
    </wire>
    <wire loc="308:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8d5f3cd0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5ec590"/></to>
    </wire>
    <wire loc="311:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7fef8d5f2b00"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fef8d5ed9b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8d5cb4a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5b3d90"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8d5bdb40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7fef8dcaa560"/></to>
    </wire>
    <wire loc="327:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8d5bf440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fef8d5b5460"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fef8d5b5460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fef8d58eaa0"/></to>
    </wire>
    <wire loc="328:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8d5bfd70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d5b5dd0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d5b5dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d58d480"/></to>
    </wire>
    <wire loc="329:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7fef8d5c0410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fef8d5b8610"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fef8d5b8610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fef8d58fc40"/></to>
    </wire>
    <wire loc="341:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8d59e1f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7fef8dcd5020"/></to>
    </wire>
    <wire loc="342:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fef8d59d2e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8d5f8020"/></to>
    </wire>
    <wire loc="349:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fef8d599110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fef8d5ed9b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7fef8d599ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fef8d5ed9b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="351:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fef8d5988d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fef8d5ed9b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="352:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d597470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8dbf5020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="353:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fef8d596110"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fef8dd283c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8dcdaaa0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8c8fd3b0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8dbf5020"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8c8df300"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fef8c8de260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fef8dbf4b60"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fef8c8db410"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fef8dbf5cb0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fef8c8bb8b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fef8db65260"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8c8bfab0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fef8db48a30"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8c8be8f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fef8db468f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8c8bd2b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fef8db452b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8c8bd8c0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fef8db458c0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fef8daca150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fef8c869850"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fef8daca8d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fef8c868020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8c868910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8dac91f0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fef8c867120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fef8c86da70"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fef8c867c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fef8c7fba70"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fef8db65260"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8c7fa5d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fef8d9b4500"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8c7f9440"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fef8d9b3440"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fef8c7a5e80"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fef8d97d720"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8c7a4ab0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8d97c400"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8c7a6310"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fef8d980a70"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8c7a6c40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fef8d97e440"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7fef8c7a5400"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fef8d97ebe0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7fef8d967d90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8d968720"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fef8c775590"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fef8d8d3020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fef8c776670"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fef8d8d3aa0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fef8c774060"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fef8d8d28b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fef8c774950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d8d1270"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7fef8c773940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7fef8c772160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7fef8c773160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fef8c739820"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fef8d87a860"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8c736020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fef8d878760"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fef8c7382b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fef8d8792b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8c738a10"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d879a10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fef8c737720"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fef8d890160"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7fef8c736b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fef8d892230"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8d88b6e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fef8d82a1d0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fef8d824920"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fef8d827b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7fef8d8205a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fef8d829b60"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7fef8d822410"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d825400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fef8d820d40"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fef8d8242b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fef8d81fb40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fef8d829590"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7fef8d823d70"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fef8d82ac50"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7fef8d823440"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fef8c6e2ae0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fef8d5f3cd0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8c6e4880"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d5f4c00"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fef8c6e3a50"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fef8d7c7080"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fef8d7c7080"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fef8d7b47d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7fef8c6e5c40"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7fef8d5f2b00"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fef8d7b47d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fef8d618790"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fef8d7c23f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8d627150"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fef8d7c6b50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8d7ae020"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fef8d7ae020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8d6a5080"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fef8d621640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8d676cf0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fef8d6701d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fef8d7aea10"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fef8d7aea10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fef8d6a5890"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fef8d617a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fef8d7a9020"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fef8d7a9020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8d6a1bc0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fef8d6a1bc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8c6bb390"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fef8d6a5080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8c6c0720"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fef8d6a5890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fef8c6bf020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8c6b9640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8d71fc70"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8d71fc70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8d70d020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8c6b4960"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8d717020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8d717020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8d7082b0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fef8c6b2bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fef8d716520"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fef8d716520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fef8d7076b0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fef8c6afe80"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fef8d713a40"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fef8d713a40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fef8d702230"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fef8d66c490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fef8d61ca00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fef8d6052e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fef8d7c23f0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fef8d5c80e0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fef8d5c2920"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fef8d5c5b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7fef8d5be5a0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5c4400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fef8d5bed40"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fef8d5c22b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fef8d5bdb40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fef8d5c7590"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7fef8d5c1d70"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fef8d5c8b60"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7fef8d5c1440"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fef8d48aac0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fef8d28e6e0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fef8d5ac940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fef8d584020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d485020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fef8d2863a0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fef8d56bb50"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fef8d59e1f0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fef8d56aa10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fef8d599110"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7fef8d5696a0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7fef8d599ca0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fef8d5683a0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fef8d5988d0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fef8d567200"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fef8d59d2e0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fef8d5739d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d485020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d563b70"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d597470"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7fef8d57d020"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7fef8d493940"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7fef8d493940"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fef8e041990"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fef8d57c380"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7fef8d490b50"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fef8d490b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fef8d462a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d576270"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d48e920"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d48e920"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d463020"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7fef8d576dd0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7fef8d48d4e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7fef8d48d4e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7fef8e038020"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fef8d579020"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fef8d48c7f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fef8d48c7f0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7fef8e043350"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7fef8d570b30"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7fef8d48bb10"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7fef8d48bb10"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7fef8d4849c0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fef8d563080"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fef8d596110"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fef8d56c4d0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fef8d2339a0"/></to>
    </wire>
    <wire loc="856:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7fef8d4d2e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fef8d28e6e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fef8c5e0e10"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d463020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d455480"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fef8d2863a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fef8d23eb60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7fef8d4753d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7fef8e025350"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7fef8d474680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7fef8e028cb0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fef8d4787f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fef8d386850"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fef8d386850"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fef8d36c9e0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fef8d459c80"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fef8d454020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fef8d461840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fef8d456e00"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fef8d4641f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fef8d4567e0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fef8d462a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fef8d39b900"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fef8d39b900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fef8c61fb90"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8d398730"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8d454d70"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7fef8d438800"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7fef8d3f7710"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7fef8d3f7710"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7fef8d3ef6b0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fef8d436620"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fef8e0a1be0"/></to>
    </wire>
    <wire loc="294:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7fef8d416de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7fef8d3e5060"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fef8e0a1be0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fef8d3eb6c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fef8e041990"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fef8d3ea970"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7fef8e040cb0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7fef8d3e8b20"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7fef8e03e020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7fef8d3e7e30"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7fef8e03d350"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fef8d39a6c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fef8c61d9e0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fef8d39ae40"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fef8c61c270"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8c61cb60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8d398730"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fef8c61b440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fef8c621c70"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fef8c61a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8d387020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8d36d2c0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8d391bf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8d372020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fef8d37bad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7fef8d3675a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fef8d37bad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7fef8d363ba0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fef8d37bad0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7fef8d35e120"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fef8c5db140"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8d391bf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fef8c5d6570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fef8d37bad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8d2cb410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8d391bf0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fef8d23de40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8d25fcf0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fef8d2420f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8d281200"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fef8d281200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8d27b020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8d268280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8d391bf0"/></to>
    </wire>
    <wire loc="33:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="FlushUint16t" scoped="" ref="0x7fef8d1c7d20"/></from>
      <to><interface-ref name="FlushUint16t" scoped="" ref="0x7fef8d1a9830"/></to>
    </wire>
    <wire loc="34:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="FlushUint32t" scoped="" ref="0x7fef8d1c3470"/></from>
      <to><interface-ref name="FlushUint32t" scoped="" ref="0x7fef8d1a5020"/></to>
    </wire>
    <wire loc="30:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="FlushFloat" scoped="" ref="0x7fef8d1cf750"/></from>
      <to><interface-ref name="FlushFloat" scoped="" ref="0x7fef8d1b9210"/></to>
    </wire>
    <wire loc="21:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fef8d127410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fef8d06e430"/></to>
    </wire>
    <wire loc="22:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fef8d12cb80"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fef8d044460"/></to>
    </wire>
    <wire loc="48:./SpecialSerialP/PlatformSerial2C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fef8d044460"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fef8d03a1e0"/></to>
    </wire>
    <wire loc="23:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fef8d05e3d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fef8d044c70"/></to>
    </wire>
    <wire loc="49:./SpecialSerialP/PlatformSerial2C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fef8d044c70"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fef8d039320"/></to>
    </wire>
    <wire loc="27:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fef8d1b24a0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fef8d130490"/></to>
    </wire>
    <wire loc="28:./SpecialSerialP/FlushBufferToSerialC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fef8d1b77b0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fef8d12e020"/></to>
    </wire>
    <wire loc="34:./SpecialSerialP/FlushBufferToSerialP.nc">
      <from><interface-ref name="startS" scoped="" ref="0x7fef8d1a0e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:./SpecialSerialP/FlushBufferToSerialP.nc">
      <from><interface-ref name="doneF" scoped="" ref="0x7fef8d177800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:./SpecialSerialP/FlushBufferToSerialP.nc">
      <from><interface-ref name="doneS" scoped="" ref="0x7fef8d179a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="334:./SpecialSerialP/Serial2P.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fef8d0d26e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="193:./SpecialSerialP/Serial2P.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fef8d109660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="324:./SpecialSerialP/Serial2P.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fef8d0d5c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="343:./SpecialSerialP/Serial2P.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fef8d0cea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:./SpecialSerialP/HdlcTranslate2C.nc">
      <from><interface-ref name="delimiterDummy" scoped="" ref="0x7fef8d054380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:./SpecialSerialP/PlatformSerial2C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fef8d040020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fef8d03a9e0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fef8d03a9e0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fef8cff02b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fef8d039320"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fef8cff0a50"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fef8d03a1e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fef8d033a50"/></to>
    </wire>
    <wire loc="53:./SpecialSerialP/PlatformSerial2C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fef8d0385f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8cf586e0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fef8cf586e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8ce93cd0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fef8cfec1d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8d0385f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7fef8cfefac0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7fef8cfceaa0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7fef8cfceaa0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7fef8cfc6b40"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7fef8cfee2f0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7fef8cfcd3b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7fef8cfcd3b0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7fef8cfc0580"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7fef8cfeead0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7fef8cfcdc40"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7fef8cfcdc40"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7fef8cfc0e50"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7fef8cfca3a0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7fef8cfbde50"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7fef8cfcb200"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7fef8cfbec60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7fef8cfcbaa0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7fef8cfbd580"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fef8cfba4e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fef8e066bb0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fef8cfb9340"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fef8e0a1be0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fef8ce8f0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8cf53780"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fef8cf53780"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fef8ce9e3c0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8ce9b660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8cf4c650"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8cf4c650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8cf39620"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8cf47a90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8cf34a90"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fef8cf451f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fef8cf311f0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fef8cf40210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7fef8cf2dca0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fef8cf40210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7fef8cf28240"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fef8cf40210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7fef8cf25750"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fef8cea6410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fef8cf4c650"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8c55e960"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8c550830"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8c55d5a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8ddc1180"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8cdf5a10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8c55b270"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8c55b270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8ddb11e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fef8cdf3120"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fef8c55a8f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fef8c55a8f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dda84c0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fef8c54f5f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fef8ce562c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8c54e270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8ddb11e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fef8ce562c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fef8ce0cb00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8ce0ba40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8ddd3630"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8ce0a720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8ddb11e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8ce09d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8ddc1180"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fef8ce08a90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fef8ce072f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8cde92f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8ddc1180"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8cde8020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8ddb11e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fef8c4ff770"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fef8c4f2690"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8c4fe400"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8ddc1180"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8cdc8020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8c4fd060"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8c4fd060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8ddb11e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fef8cdc7760"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fef8c4fc760"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fef8c4fc760"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dda84c0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fef8c4f1460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fef8ce562c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8c4f00e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8ddb11e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fef8cdc4710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fef8ddc1180"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fef8cdc3400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fef8ddb11e0"/></to>
    </wire>
    <wire loc="31:SystemCommunicationP.nc">
      <from><interface-ref name="sendResponse" scoped="" ref="0x7fef8cdad380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:ShipStateP.nc">
      <from><interface-ref name="retrySerial" scoped="" ref="0x7fef8cd549c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:ShipStateP.nc">
      <from><interface-ref name="sendSerialGlobalTime" scoped="" ref="0x7fef8cd569f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:ShipStateP.nc">
      <from><interface-ref name="sendSerialCargoLoaded" scoped="" ref="0x7fef8cd55a40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:CraneStateP.nc">
      <from><interface-ref name="sendSerial" scoped="" ref="0x7fef8ccc1710"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:CraneStateP.nc">
      <from><interface-ref name="sendLocation" scoped="" ref="0x7fef8ccc2820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="80:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="65:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="shipmainP" loc="1:shipmainP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <documentation loc="106:/opt/tinyos-main/tos/platforms/iris/chips/rf230/RadioConfig.h">
        <short>&#10; The base two logarithm of the number of radio alarm ticks per one millisecond&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC.TaskletC" loc="42(RF230RadioC.TaskletC):/opt/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <instance number="0">
        <component-ref qname="TaskletC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.NeighborhoodC" loc="35(RF230RadioC.NeighborhoodC):/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.NeighborhoodC.NeighborhoodP" loc="37(RF230RadioC.NeighborhoodC.NeighborhoodP):/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="50(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="37(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fef8d7a0070"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fef8e0c89a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fef8e0c89a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="FlushBufferToSerialC" loc="8:./SpecialSerialP/FlushBufferToSerialC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FlushBufferToSerialP" loc="7:./SpecialSerialP/FlushBufferToSerialP.nc">
      <documentation loc="1:./SpecialSerialP/FlushBufferToSerialP.nc">
        <short>&#10; Count value is 16bit at the moment.</short>
        <long>&#10; Count value is 16bit at the moment. This means that for float and uin32_t buffers&#10; the max buffer length is 16383 elements. This should not be a problem presently&#10; but in the future with bigger ROM and RAM, who knows.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Serial2P" loc="64:./SpecialSerialP/Serial2P.nc">
      <module/>
    </component>
    <component qname="HdlcTranslate2C" loc="47:./SpecialSerialP/HdlcTranslate2C.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerial2C" loc="38:./SpecialSerialP/PlatformSerial2C.nc">
      <documentation loc="32:./SpecialSerialP/PlatformSerial2C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TThree" ref="0x7fef8e0c8d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TThree" ref="0x7fef8e0c8d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7fef8e0c6670"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="shipmainC.CSenderC" loc="47(shipmainC.CSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.CSenderC.SenderC" loc="47(shipmainC.CSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.CSenderC.SenderC.AMQueueEntryP" loc="43(shipmainC.CSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="shipmainC.CReceiverC" loc="43(shipmainC.CReceiverC):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CraneCommunicationP" loc="4:CraneCommunicationP.nc">
      <module/>
    </component>
    <component qname="shipmainC.SSenderC" loc="47(shipmainC.SSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.SSenderC.SenderC" loc="47(shipmainC.SSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.SSenderC.SenderC.AMQueueEntryP" loc="43(shipmainC.SSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="shipmainC.SReceiverC" loc="43(shipmainC.SReceiverC):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemCommunicationP" loc="4:SystemCommunicationP.nc">
      <module/>
    </component>
    <component qname="ShipStateP" loc="11:ShipStateP.nc">
      <module/>
    </component>
    <component qname="shipmainC.Timer1" loc="44(shipmainC.Timer1):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CraneStateP" loc="1:CraneStateP.nc">
      <module/>
    </component>
    <component qname="shipmainC.Timer2" loc="44(shipmainC.Timer2):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fef8e0045a0" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fef8e004910" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fef8e004c80" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fef8dff79f0" loc="41:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fef8dff7d80" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fef8dff4170" loc="43:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fef8dff44c0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fef8df600d0" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fef8df60460" loc="43:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fef8df607f0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fef8df60b40" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TaskletC" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7fef8dd14020" loc="35:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
          <component-ref qname="NeighborhoodC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7fef8dd09810" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
          <component-ref qname="NeighborhoodP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fef8db29590" loc="83:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fef8db1b060" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
        <constant name="neigborhoodSize" ref="0x7fef8d9af830" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <component-ref qname="UniqueLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
        <constant name="neigborhoodSize" ref="0x7fef8d9a3020" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
          <component-ref qname="UniqueLayerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fef8d7a0070" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fef8d7a0070"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fef8d7a0380" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fef8d797d20" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fef8d797d20"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fef8d794060" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fef8d69a430" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fef8d69a430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fef8d66a880" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fef8d66a880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fef8d66abb0" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fef8d61ade0" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fef8d61ade0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fef8d2d7290" loc="44:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fef8d2d7290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7fef8d2d7600" loc="44:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fef8d2dbd60" loc="51:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fef8d2dbd60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fef8d2c2580" loc="52:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fef8d2c2580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7fef8d2c28a0" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fef8d27d910" loc="42:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fef8d27d910"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fef8d27a120" loc="43:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fef8d27a120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fef8d25e600" loc="55:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fef8d25e600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fef8d25edd0" loc="56:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fef8d25edd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fef8d25d220" loc="57:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fef8d25d220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fef8d25da00" loc="58:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fef8d25da00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fef8d25ddd0" loc="59:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fef8d25c630" loc="60:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fef8d25c630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fef8ce85c30" loc="47:/opt/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fef8ce7e820" loc="47:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fef8ce742e0" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fef8ce53630" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fef8cdf1470" loc="43:/opt/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fef8e06f160" loc="58:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8e06f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e06f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fef8e072c10" loc="57:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fef8e072c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fef8e071020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fef8e06a9d0" loc="52:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fef8e06a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e06ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8e06ca70" loc="46:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8e06ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e06cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fef8e066bb0" loc="50:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fef8e066bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fef8e06a020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fef8e06a1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fef8e06a340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fef8e06a4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fef8e06a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fef8e062400" loc="45:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fef8e062400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e062780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8e069cf0" loc="44:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8e069cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e0620a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fef8e062b00" loc="46:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fef8e062b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e062e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fef8e064b70" loc="41:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fef8e064b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e05b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fef8e0644a0" loc="40:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fef8e0644a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e064820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fef8e056820" loc="45:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fef8e056820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e056ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fef8e050620" loc="44:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fef8e050620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0509a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e050b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e050cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e050e50"/>
        <function-ref name="get" scoped="" ref="0x7fef8e056020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e0561b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8e056340"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e0564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fef8e0570e0" loc="43:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fef8e0570e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e057460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fef8e00fcb0" loc="98:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fef8e00fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e00e610"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e00e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e00e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e00eac0"/>
        <function-ref name="get" scoped="" ref="0x7fef8e00ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e00ede0"/>
        <function-ref name="set" scoped="" ref="0x7fef8e00d020"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e00d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fef8e02b350" loc="72:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fef8e02b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e02b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e02b860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e02b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e02bb80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e02bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e02a020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e02a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e02a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fef8e01f350" loc="83:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fef8e01f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e01f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e01f860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e01f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e01fb80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e01fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e01e020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e01e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e01e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fef8e015cb0" loc="92:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fef8e015cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0140a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e014230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0143c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e014550"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0146e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e014870"/>
        <function-ref name="set" scoped="" ref="0x7fef8e014a00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e014b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fef8e008060" loc="103:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fef8e008060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0083e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e008570"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e008700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e008890"/>
        <function-ref name="get" scoped="" ref="0x7fef8e008a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e008bb0"/>
        <function-ref name="set" scoped="" ref="0x7fef8e008d40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e007020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fef8e043350" loc="50:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fef8e043350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0436d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e043860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0439f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e043b80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e043d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e042020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0421b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e042340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fef8e017670" loc="90:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fef8e017670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0179f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e017b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e017d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e016020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0161b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e016340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0164d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e016660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fef8e041990" loc="53:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fef8e041990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e041d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e040020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0401b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e040340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e040660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0407f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e040980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fef8e034990" loc="64:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fef8e034990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e034d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e033020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e033340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e033660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0337f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e033980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fef8e028cb0" loc="75:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fef8e028cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0270a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e027230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0273c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e027550"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0276e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e027870"/>
        <function-ref name="set" scoped="" ref="0x7fef8e027a00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e027b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fef8e01ccb0" loc="86:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fef8e01ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e01b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e01b230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e01b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e01b550"/>
        <function-ref name="get" scoped="" ref="0x7fef8e01b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e01b870"/>
        <function-ref name="set" scoped="" ref="0x7fef8e01ba00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e01bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fef8e049350" loc="45:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fef8e049350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0496d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e049860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0499f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e049b80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e049d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e048020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0481b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e048340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fef8e03d350" loc="56:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fef8e03d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e03d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e03d860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e03d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e03db80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e03dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e03c020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e03c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e03c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fef8e030350" loc="67:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fef8e030350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0306d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e030860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0309f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e030b80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e030d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e02f020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e02f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e02f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fef8e024670" loc="78:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fef8e024670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0249f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e024b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e024d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e023020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e023340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0234d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e023660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fef8e011670" loc="95:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fef8e011670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0119f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e011b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e011d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e010020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e010340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0104d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e010660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fef8e00bb20" loc="101:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fef8e00bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e00a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e00a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e00a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e00a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8e00a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e00a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8e00a980"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e00ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fef8e022cb0" loc="81:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fef8e022cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0210a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e021230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0213c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e021550"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0216e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e021870"/>
        <function-ref name="set" scoped="" ref="0x7fef8e021a00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e021b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fef8e046cb0" loc="48:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fef8e046cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0450a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e045230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0453c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e045550"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0456e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e045870"/>
        <function-ref name="set" scoped="" ref="0x7fef8e045a00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e045b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fef8e03acb0" loc="59:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fef8e03acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0390a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e039230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0393c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e039550"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0396e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e039870"/>
        <function-ref name="set" scoped="" ref="0x7fef8e039a00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e039b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fef8e00d4e0" loc="99:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fef8e00d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e00d860"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e00d9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e00db80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e00dd10"/>
        <function-ref name="get" scoped="" ref="0x7fef8e00c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e00c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8e00c340"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e00c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fef8e037350" loc="62:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fef8e037350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0376d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e037860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0379f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e037b80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e037d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e035020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0351b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e035340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fef8e02a670" loc="73:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fef8e02a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e02a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e02ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e02ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e029020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e029340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0294d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e029660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fef8e01e670" loc="84:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fef8e01e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e01e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e01eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e01ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e01d020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e01d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e01d340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e01d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e01d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fef8e013020" loc="93:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fef8e013020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0133a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e013530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0136c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e013850"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0139e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e013b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8e013d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e012020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fef8e042670" loc="51:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fef8e042670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0429f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e042b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e042d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e041020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0411b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e041340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0414d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e041660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fef8e040cb0" loc="54:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fef8e040cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e03f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e03f230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e03f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e03f550"/>
        <function-ref name="get" scoped="" ref="0x7fef8e03f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e03f870"/>
        <function-ref name="set" scoped="" ref="0x7fef8e03fa00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e03fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fef8e033cb0" loc="65:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fef8e033cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0320a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e032230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0323c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e032550"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0326e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e032870"/>
        <function-ref name="set" scoped="" ref="0x7fef8e032a00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e032b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fef8e026020" loc="76:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fef8e026020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0263a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e026530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0266c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e026850"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0269e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e026b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8e026d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e025020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fef8e019020" loc="87:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fef8e019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e019530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0196c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e019850"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0199e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e019b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8e019d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e018020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fef8e048670" loc="46:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fef8e048670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0489f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e048b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e048d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e047020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e047340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0474d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e047660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fef8e03c670" loc="57:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fef8e03c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e03caf0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e03cc80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e03ce10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e03b020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e03b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e03b340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e03b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e03b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fef8e02f670" loc="68:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fef8e02f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e02f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e02fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e02fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e02e020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e02e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e02e340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e02e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e02e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fef8e010990" loc="96:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fef8e010990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e010d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e00f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e00f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e00f340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e00f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e00f660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e00f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e00f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fef8e02dcb0" loc="71:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fef8e02dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e02c410"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e02c5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e02c730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e02c8c0"/>
        <function-ref name="get" scoped="" ref="0x7fef8e02ca50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e02cbe0"/>
        <function-ref name="set" scoped="" ref="0x7fef8e02cd70"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e02b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fef8e020020" loc="82:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fef8e020020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0203a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e020530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0206c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e020850"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0209e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e020b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8e020d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e01f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fef8e016990" loc="91:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fef8e016990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e016d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e015020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0151b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e015340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0154d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e015660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0157f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e015980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fef8e00ae40" loc="102:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fef8e00ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0091e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e009370"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e009500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e009690"/>
        <function-ref name="get" scoped="" ref="0x7fef8e009820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e0099b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8e009b40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e009cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fef8e044020" loc="49:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fef8e044020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0443a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e044530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0446c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e044850"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0449e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e044b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8e044d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e043020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fef8e038020" loc="60:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fef8e038020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e038530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e038850"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e038b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8e038d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e037020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fef8e018350" loc="89:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fef8e018350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0186d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e018860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0189f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e018b80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e018d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e017020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0171b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e017340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fef8e035670" loc="63:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fef8e035670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0359f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e035b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e035d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e034020"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e034340"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0344d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e034660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fef8e029990" loc="74:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fef8e029990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e029d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e028020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e028340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e028660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0287f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e028980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fef8e01d990" loc="85:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fef8e01d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e01dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e01c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e01c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e01c340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e01c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e01c660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e01c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e01c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fef8e012350" loc="94:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fef8e012350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0126d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e012860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0129f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e012b80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e012d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e011020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0111b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e011340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fef8e04a020" loc="44:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fef8e04a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e04a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e04a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e04a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e04a850"/>
        <function-ref name="get" scoped="" ref="0x7fef8e04a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e04ab70"/>
        <function-ref name="set" scoped="" ref="0x7fef8e04ad00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e049020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fef8e03e020" loc="55:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fef8e03e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e03e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e03e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e03e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e03e850"/>
        <function-ref name="get" scoped="" ref="0x7fef8e03e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e03eb70"/>
        <function-ref name="set" scoped="" ref="0x7fef8e03ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e03d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fef8e031020" loc="66:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fef8e031020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e031530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0316c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e031850"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0319e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e031b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8e031d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e030020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fef8e025350" loc="77:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fef8e025350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e0256d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e025860"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0259f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e025b80"/>
        <function-ref name="get" scoped="" ref="0x7fef8e025d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e024020"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0241b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e024340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fef8e00c800" loc="100:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fef8e00c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e00cb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e00cd10"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e00b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e00b1b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8e00b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e00b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8e00b660"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e00b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fef8e023990" loc="80:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fef8e023990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e023d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e022020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e022340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e022660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0227f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e022980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fef8e02e990" loc="69:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fef8e02e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e02ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e02d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e02d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e02d340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e02d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e02d660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e02d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e02d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fef8e047990" loc="47:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fef8e047990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e047d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e046020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e0461b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e046340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e0464d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e046660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e0467f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e046980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fef8e03b990" loc="58:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fef8e03b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8e03bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8e03a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8e03a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8e03a340"/>
        <function-ref name="get" scoped="" ref="0x7fef8e03a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8e03a660"/>
        <function-ref name="set" scoped="" ref="0x7fef8e03a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8e03a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fef8dfbca80" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fef8dfbca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfbce00"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfbb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfbb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfbb340"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfbb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfbb660"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfbb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfbb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fef8dfb8020" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fef8dfb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfb83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfb8530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfb86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfb8850"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfb89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfb8b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfb8d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfb7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fef8dfbe6b0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fef8dfbe6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfbea30"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfbebc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfbed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfbd020"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfbd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfbd340"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfbd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfbd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fef8dfbbc10" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fef8dfbbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfba020"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfba4d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfba7f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfba980"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfbab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fef8dfb72b0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fef8dfb72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfb7630"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfb77c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfb7950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfb7ae0"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfb7c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfb7e00"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfb6020"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfb61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fef8dfbd8f0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fef8dfbd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfbdc70"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfbde00"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfbc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfbc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfbc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfbc4d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfbc660"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfbc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fef8dfbada0" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fef8dfbada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfb9180"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfb9310"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfb94a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfb9630"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfb97c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfb9950"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfb9ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfb9c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fef8dfb6440" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fef8dfb6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfb67c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfb6950"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfb6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfb6c70"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfb6e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfb4020"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfb41b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfb4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cc2ee20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cc2ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cc2d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cc2d350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cc2d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cc2d670"/>
        <function-ref name="get" scoped="" ref="0x7fef8cc2d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cc2d990"/>
        <function-ref name="set" scoped="" ref="0x7fef8cc2db20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cc2dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cc2a0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cc2a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cc2a420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cc2a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cc2a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cc2a8d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cc2aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cc2abf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cc2ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cc29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cc273f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cc273f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cc27770"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cc27900"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cc27a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cc27c20"/>
        <function-ref name="get" scoped="" ref="0x7fef8cc27db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cc26020"/>
        <function-ref name="set" scoped="" ref="0x7fef8cc261b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cc26340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cc246d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cc246d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cc24a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cc24be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cc24d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cc23020"/>
        <function-ref name="get" scoped="" ref="0x7fef8cc231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cc23340"/>
        <function-ref name="set" scoped="" ref="0x7fef8cc234d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cc23660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cc219b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cc219b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cc21d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cc20020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cc201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cc20340"/>
        <function-ref name="get" scoped="" ref="0x7fef8cc204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cc20660"/>
        <function-ref name="set" scoped="" ref="0x7fef8cc207f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cc20980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cc1ee20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cc1ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cc1d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cc1d350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cc1d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cc1d670"/>
        <function-ref name="get" scoped="" ref="0x7fef8cc1d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cc1d990"/>
        <function-ref name="set" scoped="" ref="0x7fef8cc1db20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cc1dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cc1a0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cc1a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cc1a420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cc1a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cc1a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cc1a8d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cc1aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cc1abf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cc1ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cc19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cc173f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cc173f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cc17770"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cc17900"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cc17a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cc17c20"/>
        <function-ref name="get" scoped="" ref="0x7fef8cc17db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cc16020"/>
        <function-ref name="set" scoped="" ref="0x7fef8cc161b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cc16340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fef8dfadda0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fef8dfadda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfac180"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfac310"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfac4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfac630"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfac7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfac950"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfacae0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfacc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fef8dfa8440" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fef8dfa8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfa87c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfa8950"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfa8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfa8c70"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfa8e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfa7020"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfa71b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfa7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fef8dfafa20" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fef8dfafa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfafda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfae020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfae340"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfae660"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfae7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fef8dfab020" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fef8dfab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfab530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfab6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfab850"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfab9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfabb70"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfabd00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fef8dfa75d0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fef8dfa75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfa7950"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfa7ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfa7c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfa7e00"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfa6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfa61b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfa6340"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfa64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fef8dfaec10" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fef8dfaec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfad020"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfad1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfad340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfad4d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfad660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfad7f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfad980"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfadb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fef8dfaa2b0" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fef8dfaa2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfaa630"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfaa7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfaa950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfaaae0"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfaac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfaae00"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfa8020"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfa81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fef8dfa6760" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fef8dfa6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8dfa6ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8dfa6c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8dfa6e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8dfa5020"/>
        <function-ref name="get" scoped="" ref="0x7fef8dfa51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8dfa5340"/>
        <function-ref name="set" scoped="" ref="0x7fef8dfa54d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8dfa5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cbc2060" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cbc2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cbc23e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cbc2570"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cbc2700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cbc2890"/>
        <function-ref name="get" scoped="" ref="0x7fef8cbc2a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cbc2bb0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cbc2d40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cbc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cbbf3f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cbbf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cbbf770"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cbbf900"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cbbfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cbbfc20"/>
        <function-ref name="get" scoped="" ref="0x7fef8cbbfdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cbbe020"/>
        <function-ref name="set" scoped="" ref="0x7fef8cbbe1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cbbe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cbbc6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cbbc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cbbca50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cbbcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cbbcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cbbb020"/>
        <function-ref name="get" scoped="" ref="0x7fef8cbbb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cbbb340"/>
        <function-ref name="set" scoped="" ref="0x7fef8cbbb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cbbb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cbb99b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cbb99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cbb9d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cbb8020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cbb81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cbb8340"/>
        <function-ref name="get" scoped="" ref="0x7fef8cbb84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cbb8660"/>
        <function-ref name="set" scoped="" ref="0x7fef8cbb87f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cbb8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cbb6e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cbb6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cbb51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cbb5350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cbb54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cbb5670"/>
        <function-ref name="get" scoped="" ref="0x7fef8cbb5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cbb5990"/>
        <function-ref name="set" scoped="" ref="0x7fef8cbb5b20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cbb5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cbb20a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cbb20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cbb2420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cbb25b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cbb2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cbb28d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cbb2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cbb2bf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cbb2d80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cbb1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cbaf3f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cbaf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cbaf770"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cbaf900"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cbafa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cbafc20"/>
        <function-ref name="get" scoped="" ref="0x7fef8cbafdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cbae020"/>
        <function-ref name="set" scoped="" ref="0x7fef8cbae1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cbae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cbac6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cbac6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cbaca50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cbacbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cbacd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cbab020"/>
        <function-ref name="get" scoped="" ref="0x7fef8cbab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cbab340"/>
        <function-ref name="set" scoped="" ref="0x7fef8cbab4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cbab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fef8df9c020" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fef8df9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df9c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df9c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df9c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df9c850"/>
        <function-ref name="get" scoped="" ref="0x7fef8df9c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df9cb70"/>
        <function-ref name="set" scoped="" ref="0x7fef8df9cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fef8df995d0" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fef8df995d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df99950"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df99ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df99c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df99e00"/>
        <function-ref name="get" scoped="" ref="0x7fef8df98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df981b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df98340"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fef8dfa0d30" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fef8dfa0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df9f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df9f270"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df9f400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df9f590"/>
        <function-ref name="get" scoped="" ref="0x7fef8df9f720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df9f8b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df9fa40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df9fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fef8df9b2b0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fef8df9b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df9b630"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df9b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df9b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df9bae0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df9bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df9be00"/>
        <function-ref name="set" scoped="" ref="0x7fef8df9a020"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fef8df98760" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fef8df98760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df98ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df98c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df98e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df97020"/>
        <function-ref name="get" scoped="" ref="0x7fef8df971b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df97340"/>
        <function-ref name="set" scoped="" ref="0x7fef8df974d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df97660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fef8df9fe60" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fef8df9fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df9d210"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df9d3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df9d530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df9d6c0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df9d850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df9d9e0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df9db70"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df9dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fef8df9a440" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fef8df9a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df9a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df9a950"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df9aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df9ac70"/>
        <function-ref name="get" scoped="" ref="0x7fef8df9ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df99020"/>
        <function-ref name="set" scoped="" ref="0x7fef8df991b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fef8df978f0" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fef8df978f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df97c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df97e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df96020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df961b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df96340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df964d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df96660"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cb57a60" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cb57a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cb57de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cb56020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cb561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cb56340"/>
        <function-ref name="get" scoped="" ref="0x7fef8cb564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cb56660"/>
        <function-ref name="set" scoped="" ref="0x7fef8cb567f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cb56980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cb54e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cb54e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cb531c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cb53350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cb534e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cb53670"/>
        <function-ref name="get" scoped="" ref="0x7fef8cb53800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cb53990"/>
        <function-ref name="set" scoped="" ref="0x7fef8cb53b20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cb53cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cb500a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cb500a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cb50420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cb505b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cb50740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cb508d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cb50a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cb50bf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cb50d80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cb4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cb4d3f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cb4d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cb4d770"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cb4d900"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cb4da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cb4dc20"/>
        <function-ref name="get" scoped="" ref="0x7fef8cb4ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cb4c020"/>
        <function-ref name="set" scoped="" ref="0x7fef8cb4c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cb4c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cb4a6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cb4a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cb4aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cb4abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cb4ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cb49020"/>
        <function-ref name="get" scoped="" ref="0x7fef8cb491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cb49340"/>
        <function-ref name="set" scoped="" ref="0x7fef8cb494d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cb49660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cb479b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cb479b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cb47d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cb46020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cb461b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cb46340"/>
        <function-ref name="get" scoped="" ref="0x7fef8cb464d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cb46660"/>
        <function-ref name="set" scoped="" ref="0x7fef8cb467f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cb46980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cb44e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cb44e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cb431c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cb43350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cb434e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cb43670"/>
        <function-ref name="get" scoped="" ref="0x7fef8cb43800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cb43990"/>
        <function-ref name="set" scoped="" ref="0x7fef8cb43b20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cb43cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cb400a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cb400a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cb40420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cb405b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cb40740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cb408d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cb40a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cb40bf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cb40d80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cb3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fef8df8d440" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fef8df8d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df8d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df8d950"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df8dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df8dc70"/>
        <function-ref name="get" scoped="" ref="0x7fef8df8de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df8c020"/>
        <function-ref name="set" scoped="" ref="0x7fef8df8c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fef8df8a8f0" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fef8df8a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df8ac70"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df8ae00"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df89020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df891b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df89340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df894d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df89660"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fef8df8f020" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fef8df8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df8f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df8f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df8f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df8f850"/>
        <function-ref name="get" scoped="" ref="0x7fef8df8f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df8fb70"/>
        <function-ref name="set" scoped="" ref="0x7fef8df8fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fef8df8c5d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fef8df8c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df8c950"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df8cae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df8cc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df8ce00"/>
        <function-ref name="get" scoped="" ref="0x7fef8df8b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df8b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df8b340"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df8b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fef8df89a80" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fef8df89a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df89e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df88020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df881b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df88340"/>
        <function-ref name="get" scoped="" ref="0x7fef8df884d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df88660"/>
        <function-ref name="set" scoped="" ref="0x7fef8df887f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df88980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fef8df8e2b0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fef8df8e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df8e630"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df8e7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df8e950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df8eae0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df8ec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df8ee00"/>
        <function-ref name="set" scoped="" ref="0x7fef8df8d020"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fef8df8b760" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fef8df8b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df8bae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df8bc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df8be00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df8a020"/>
        <function-ref name="get" scoped="" ref="0x7fef8df8a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df8a340"/>
        <function-ref name="set" scoped="" ref="0x7fef8df8a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fef8df88c10" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fef8df88c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df87020"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df871b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df87340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df874d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df87660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df877f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df87980"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df87b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8caeac90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8caeac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cae90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cae9230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cae93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cae9550"/>
        <function-ref name="get" scoped="" ref="0x7fef8cae96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cae9870"/>
        <function-ref name="set" scoped="" ref="0x7fef8cae9a00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cae9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cae7e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cae7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cae61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cae6350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cae64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cae6670"/>
        <function-ref name="get" scoped="" ref="0x7fef8cae6800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cae6990"/>
        <function-ref name="set" scoped="" ref="0x7fef8cae6b20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cae6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cae30a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cae30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cae3420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cae35b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cae3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cae38d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cae3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cae3bf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cae3d80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cae2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cae03f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cae03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cae0770"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cae0900"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cae0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cae0c20"/>
        <function-ref name="get" scoped="" ref="0x7fef8cae0db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cadf020"/>
        <function-ref name="set" scoped="" ref="0x7fef8cadf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cadf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cadd6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cadd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cadda50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8caddbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8caddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cadc020"/>
        <function-ref name="get" scoped="" ref="0x7fef8cadc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cadc340"/>
        <function-ref name="set" scoped="" ref="0x7fef8cadc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cadc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cada9b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cada9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cadad30"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cad9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cad91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cad9340"/>
        <function-ref name="get" scoped="" ref="0x7fef8cad94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cad9660"/>
        <function-ref name="set" scoped="" ref="0x7fef8cad97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cad9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cad7e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cad7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cad61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cad6350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cad64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cad6670"/>
        <function-ref name="get" scoped="" ref="0x7fef8cad6800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cad6990"/>
        <function-ref name="set" scoped="" ref="0x7fef8cad6b20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cad6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8cad30a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8cad30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8cad3420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8cad35b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8cad3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8cad38d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cad3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8cad3bf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cad3d80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8cad2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fef8df7e760" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fef8df7e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df7eae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df7ec70"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df7ee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df7d020"/>
        <function-ref name="get" scoped="" ref="0x7fef8df7d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df7d340"/>
        <function-ref name="set" scoped="" ref="0x7fef8df7d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df7d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fef8df7bc10" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fef8df7bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df7a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df7a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df7a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df7a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df7a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df7a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df7a980"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df7ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fef8df803f0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fef8df803f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df80770"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df80900"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df80a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df80c20"/>
        <function-ref name="get" scoped="" ref="0x7fef8df80db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df7f020"/>
        <function-ref name="set" scoped="" ref="0x7fef8df7f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df7f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fef8df7d8f0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fef8df7d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df7dc70"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df7de00"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df7c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df7c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df7c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df7c660"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df7c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fef8df7ada0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fef8df7ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df78180"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df78310"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df784a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df78630"/>
        <function-ref name="get" scoped="" ref="0x7fef8df787c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df78950"/>
        <function-ref name="set" scoped="" ref="0x7fef8df78ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df78c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fef8df7f5d0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fef8df7f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df7f950"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df7fae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df7fc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df7fe00"/>
        <function-ref name="get" scoped="" ref="0x7fef8df7e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df7e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df7e340"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df7e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fef8df7ca80" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fef8df7ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df7ce00"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df7b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df7b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df7b340"/>
        <function-ref name="get" scoped="" ref="0x7fef8df7b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df7b660"/>
        <function-ref name="set" scoped="" ref="0x7fef8df7b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df7b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fef8df77020" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fef8df77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df773a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df77530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df776c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df77850"/>
        <function-ref name="get" scoped="" ref="0x7fef8df779e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df77b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8df77d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca7fc90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca7fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca7e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca7e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca7e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca7e550"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca7e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca7e870"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca7ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca7eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca7ce20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca7ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca7b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca7b350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca7b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca7b670"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca7b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca7b990"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca7bb20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca7bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca780a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca780a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca78420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca785b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca78740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca788d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca78a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca78bf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca78d80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca753f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca753f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca75770"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca75900"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca75a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca75c20"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca75db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca74020"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca741b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca74340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca726d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca726d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca72a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca72be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca72d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca71020"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca711b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca71340"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca714d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca71660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca6f9b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca6f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca6fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca6e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca6e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca6e340"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca6e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca6e660"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca6e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca6e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca6ce20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca6ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca6b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca6b350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca6b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca6b670"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca6b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca6b990"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca6bb20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca6bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca680a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca68420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca685b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca68740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca688d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca68a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca68bf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca68d80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fef8df6fa80" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fef8df6fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df6fe00"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df6e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df6e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df6e340"/>
        <function-ref name="get" scoped="" ref="0x7fef8df6e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df6e660"/>
        <function-ref name="set" scoped="" ref="0x7fef8df6e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df6e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fef8df6a020" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fef8df6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df6a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df6a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df6a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df6a850"/>
        <function-ref name="get" scoped="" ref="0x7fef8df6a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df6ab70"/>
        <function-ref name="set" scoped="" ref="0x7fef8df6ad00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fef8df717a0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fef8df717a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df71b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df71cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df71e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df70020"/>
        <function-ref name="get" scoped="" ref="0x7fef8df701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df70340"/>
        <function-ref name="set" scoped="" ref="0x7fef8df704d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df70660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fef8df6ec10" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fef8df6ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df6c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df6c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df6c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df6c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df6c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df6c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df6c980"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df6cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fef8df692b0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fef8df692b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df69630"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df697c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df69950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df69ae0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df69c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df69e00"/>
        <function-ref name="set" scoped="" ref="0x7fef8df68020"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fef8df708f0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fef8df708f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df70c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df70e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df6f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df6f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8df6f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df6f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df6f660"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df6f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fef8df6cda0" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fef8df6cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df6b180"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df6b310"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df6b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df6b630"/>
        <function-ref name="get" scoped="" ref="0x7fef8df6b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df6b950"/>
        <function-ref name="set" scoped="" ref="0x7fef8df6bae0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df6bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fef8df68440" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fef8df68440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df687c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df68950"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df68ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df68c70"/>
        <function-ref name="get" scoped="" ref="0x7fef8df68e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df67020"/>
        <function-ref name="set" scoped="" ref="0x7fef8df671b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df67340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca15c90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca15c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca130a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca13230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca133c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca13550"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca136e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca13870"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca13a00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca13b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca11e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca11e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca101c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca10350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca104e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca10670"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca10800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca10990"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca10b20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca10cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca0d0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca0d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca0d420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca0d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca0d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca0d8d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca0da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca0dbf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca0dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca0a3f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca0a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca0a770"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca0a900"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca0aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca0ac20"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca0adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca09020"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca091b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca09340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca076d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca076d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca07a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca07be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca07d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca06020"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca06340"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca064d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca06660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca049b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca049b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca04d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca03020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca03340"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca03660"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca037f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca03980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8ca01e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8ca01e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8ca001c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8ca00350"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8ca004e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8ca00670"/>
        <function-ref name="get" scoped="" ref="0x7fef8ca00800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8ca00990"/>
        <function-ref name="set" scoped="" ref="0x7fef8ca00b20"/>
        <function-ref name="clr" scoped="" ref="0x7fef8ca00cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8c9fd0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8c9fd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8c9fd420"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8c9fd5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8c9fd740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8c9fd8d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8c9fda60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8c9fdbf0"/>
        <function-ref name="set" scoped="" ref="0x7fef8c9fdd80"/>
        <function-ref name="clr" scoped="" ref="0x7fef8c9fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df61a20" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df61a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df61da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df4a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df4a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df4a340"/>
        <function-ref name="get" scoped="" ref="0x7fef8df4a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df4a660"/>
        <function-ref name="set" scoped="" ref="0x7fef8df4a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df4a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df456d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df456d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df45a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df45be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df45d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df44020"/>
        <function-ref name="get" scoped="" ref="0x7fef8df441b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df44340"/>
        <function-ref name="set" scoped="" ref="0x7fef8df444d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df44660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df40160" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df40160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df404e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df40670"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df40800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df40990"/>
        <function-ref name="get" scoped="" ref="0x7fef8df40b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df40cb0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df40e40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df3bc90" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df3bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df3a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df3a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df3a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df3a550"/>
        <function-ref name="get" scoped="" ref="0x7fef8df3a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df3a870"/>
        <function-ref name="set" scoped="" ref="0x7fef8df3aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df3ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df356d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df35a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df35be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df35d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df34020"/>
        <function-ref name="get" scoped="" ref="0x7fef8df341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df34340"/>
        <function-ref name="set" scoped="" ref="0x7fef8df344d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df34660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df30160" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df30160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df304e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df30670"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df30800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df30990"/>
        <function-ref name="get" scoped="" ref="0x7fef8df30b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df30cb0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df30e40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df2bc90" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df2bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df2a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df2a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df2a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df2a550"/>
        <function-ref name="get" scoped="" ref="0x7fef8df2a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df2a870"/>
        <function-ref name="set" scoped="" ref="0x7fef8df2aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df2ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df256d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df256d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df25a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df25be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df25d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df24020"/>
        <function-ref name="get" scoped="" ref="0x7fef8df241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df24340"/>
        <function-ref name="set" scoped="" ref="0x7fef8df244d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df24660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df20160" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df20160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df204e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df20670"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df20800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df20990"/>
        <function-ref name="get" scoped="" ref="0x7fef8df20b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df20cb0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df20e40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df1bc90" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df1bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df1a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df1a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df1a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df1a550"/>
        <function-ref name="get" scoped="" ref="0x7fef8df1a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df1a870"/>
        <function-ref name="set" scoped="" ref="0x7fef8df1aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df1ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df156d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df156d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df15a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df15be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df15d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df14020"/>
        <function-ref name="get" scoped="" ref="0x7fef8df141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df14340"/>
        <function-ref name="set" scoped="" ref="0x7fef8df144d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df14660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df10160" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df10160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df104e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df10670"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df10800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df10990"/>
        <function-ref name="get" scoped="" ref="0x7fef8df10b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df10cb0"/>
        <function-ref name="set" scoped="" ref="0x7fef8df10e40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df0bc90" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df0bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df0a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df0a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df0a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df0a550"/>
        <function-ref name="get" scoped="" ref="0x7fef8df0a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df0a870"/>
        <function-ref name="set" scoped="" ref="0x7fef8df0aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df0ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fef8df056d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fef8df056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8df05a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8df05be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8df05d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8df04020"/>
        <function-ref name="get" scoped="" ref="0x7fef8df041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8df04340"/>
        <function-ref name="set" scoped="" ref="0x7fef8df044d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8df04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8dec8020" loc="61:/opt/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8dec8020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fef8e1ba3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fef8e1ba3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8dec83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fef8dec8690" loc="62:/opt/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fef8dec8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fef8dec8a10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fef8dec8ba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fef8dec8d30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fef8dec7020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fef8dec71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fef8dea8720" loc="60:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8dea8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8dea8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fef8e06ddc0" loc="57:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fef8e06ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fef8dea9180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fef8dea8020" loc="59:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fef8dea8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8dea83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fef8dea9470" loc="58:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fef8dea9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8dea97f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fef8dea9980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fef8dea9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fef8e188940" loc="48:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e188940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8e188cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8e188e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fef8e191510" loc="47:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fef8e191510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e191890"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fef8e191a20"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fef8e191bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fef8e0c2d30" loc="56:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fef8e0c2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8e0c10e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8e0c1270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fef8e0bd2c0" loc="57:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fef8e0bd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fef8e0bd640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fef8e0bd7d0"/>
        <function-ref name="sleep" scoped="" ref="0x7fef8e0bd960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fef8e0c3e40" loc="55:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fef8e0c3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8e0c21e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fef8e0c2370"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fef8e0c2500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fef8e09e330" loc="86:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fef8e09e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fef8e09e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fef8e0d93b0" loc="82:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fef8e0d93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fef8e0d9730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fef8e0d98c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fef8e0d9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fef8e0a1be0" loc="83:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fef8e0a1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fef8e0a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fef8de8ea80" loc="46:/opt/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fef8de8ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fef8de8ee00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fef8de98020"/>
        <function-ref name="led1On" scoped="" ref="0x7fef8de981b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fef8de98340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fef8de984d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8de98660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fef8de987f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fef8de98e30"/>
        <function-ref name="set" scoped="" ref="0x7fef8de98980"/>
        <function-ref name="led0On" scoped="" ref="0x7fef8de98b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fef8de98ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fef8de8ab90" loc="50:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fef8de8ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8de89020"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8de891b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8de89340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8de894d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8de89660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8de897f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8de89980"/>
        <function-ref name="clr" scoped="" ref="0x7fef8de89b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8de97dc0" loc="46:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8de97dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8de8b180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fef8de89e30" loc="51:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fef8de89e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8de881e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8de88370"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8de88500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8de88690"/>
        <function-ref name="get" scoped="" ref="0x7fef8de88820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8de889b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8de88b40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8de88cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fef8de8b400" loc="47:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fef8de8b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fef8de8b780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fef8de8b910"/>
        <function-ref name="led1On" scoped="" ref="0x7fef8de8baa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fef8de8bc30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fef8de8bdc0"/>
        <function-ref name="get" scoped="" ref="0x7fef8de8a020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fef8de8a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fef8de8a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8de8a340"/>
        <function-ref name="led0On" scoped="" ref="0x7fef8de8a4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fef8de8a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fef8de87020" loc="52:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fef8de87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8de873a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8de87530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8de876c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8de87850"/>
        <function-ref name="get" scoped="" ref="0x7fef8de879e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8de87b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8de87d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8de86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fef8de6a020" loc="44:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fef8de6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8de6a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8de6a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8de6a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8de6a850"/>
        <function-ref name="get" scoped="" ref="0x7fef8de6a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8de6ab70"/>
        <function-ref name="set" scoped="" ref="0x7fef8de6ad00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8de69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fef8de69380" loc="45:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fef8de69380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8de69700"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8de69890"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8de69a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8de69bb0"/>
        <function-ref name="get" scoped="" ref="0x7fef8de69d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8de68020"/>
        <function-ref name="set" scoped="" ref="0x7fef8de681b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8de68340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fef8de67920" loc="47:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8de67920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8de67ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fef8de686a0" loc="46:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fef8de686a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8de68a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8de68bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8de68d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8de67020"/>
        <function-ref name="get" scoped="" ref="0x7fef8de671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8de67340"/>
        <function-ref name="set" scoped="" ref="0x7fef8de674d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8de67660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7fef8de5c140" loc="5:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7fef8de5c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8de5c4c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8de5c650"/>
        <function-ref name="start" scoped="" ref="0x7fef8de5c7e0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8de5c970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fef8de5f020" loc="3:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fef8de5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fef8de5f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fef8de5cd50" loc="6:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7fef8de5cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8de5b100"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8de5b290"/>
        <function-ref name="start" scoped="" ref="0x7fef8de5b420"/>
        <function-ref name="stop" scoped="" ref="0x7fef8de5b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CraneStart" ref="0x7fef8de54300" loc="7:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CraneStart" scoped="" ref="0x7fef8de54300"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8de54680"/>
        <function-ref name="stop" scoped="" ref="0x7fef8de54810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartGame" ref="0x7fef8de54bb0" loc="8:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartGame" scoped="" ref="0x7fef8de54bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8de57020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8de571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fef8de5f660" loc="4:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fef8de5f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fef8de5f9e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fef8de5fb70"/>
        <function-ref name="led1On" scoped="" ref="0x7fef8de5fd00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fef8de5e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fef8de5e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8de5e340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fef8de5e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fef8de5eb10"/>
        <function-ref name="set" scoped="" ref="0x7fef8de5e660"/>
        <function-ref name="led0On" scoped="" ref="0x7fef8de5e7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fef8de5e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8de076a0" loc="41:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8de076a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8de07a20"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8de07bb0"/>
        <function-ref name="start" scoped="" ref="0x7fef8de07d40"/>
        <function-ref name="stop" scoped="" ref="0x7fef8de06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fef8ddca6d0" loc="46:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fef8ddca6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fef8ddcaa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8ddc1180" loc="48:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8ddc1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8ddc1500"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8ddc1690"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8ddc1820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8ddc19b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8ddc1b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8ddd3630" loc="43:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8ddd3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8ddd39b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8ddd3b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8ddd3cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8ddd3e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8de05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fef8ddd2020" loc="45:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fef8ddd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8ddd23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fef8dda5dd0" loc="52:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8dda5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fef8ddae180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fef8ddae310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fef8ddae4a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fef8ddae630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8dddd390" loc="44:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8dddd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8dddd710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fef8dda84c0" loc="51:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dda84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8dda8840"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8dda89d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8dda8b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fef8dda9020" loc="53:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fef8dda9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fef8dda93a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fef8dda9530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fef8dda96c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fef8dda9850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fef8dda99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8ddb11e0" loc="49:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8ddb11e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8ddb1560"/>
        <function-ref name="source" scoped="" ref="0x7fef8ddb16f0"/>
        <function-ref name="address" scoped="" ref="0x7fef8ddb1880"/>
        <function-ref name="destination" scoped="" ref="0x7fef8ddb1a10"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8ddb1ba0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8ddb1d30"/>
        <function-ref name="type" scoped="" ref="0x7fef8ddc2020"/>
        <function-ref name="setType" scoped="" ref="0x7fef8ddc21b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8ddc2340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8ddc24d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8ddc2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fef8dd99d40" loc="54:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fef8dd99d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fef8dda30e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8dda3270"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8dda3400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7fef8dd95d70" loc="56:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7fef8dd95d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8dd98330"/>
        <function-ref name="clear" scoped="" ref="0x7fef8dd98a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8dd9bba0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd8f210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fef8dd8fe60" loc="57:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8dd8fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8dd8d500"/>
        <function-ref name="clear" scoped="" ref="0x7fef8dd8dc30"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8dd8eda0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd8b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8dd8a610" loc="45:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8dd8a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8dd8a990"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8dd8ab20"/>
        <function-ref name="start" scoped="" ref="0x7fef8dd8acb0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8dd8ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fef8dd74c40" loc="62:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8dd74c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dd713c0"/>
        <function-ref name="get" scoped="" ref="0x7fef8dd72df0"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8dd728a0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd71910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fef8dd83020" loc="50:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fef8dd83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fef8dd833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8dd83630" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8dd83630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dd839b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8dd83b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8dd83cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8dd83e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8dd82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8dd87640" loc="47:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8dd87640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8dd879c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8dd87b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8dd87ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8dd87e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8dd86030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fef8dd85430" loc="49:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fef8dd85430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8dd857b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fef8dd76660" loc="61:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8dd76660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dd75e70"/>
        <function-ref name="get" scoped="" ref="0x7fef8dd75920"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8dd753d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd743f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fef8dd804b0" loc="56:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8dd804b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fef8dd80830"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fef8dd809c0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fef8dd80b50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fef8dd80ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8dd86810" loc="48:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8dd86810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8dd86b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fef8dd6dac0" loc="66:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8dd6dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8dd680d0"/>
        <function-ref name="clear" scoped="" ref="0x7fef8dd68800"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8dd69970"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fef8dd6a5d0" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8dd6a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8dd6d240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fef8dd7d110" loc="60:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8dd7d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dd7c830"/>
        <function-ref name="get" scoped="" ref="0x7fef8dd7c2e0"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8dd7dd40"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd7cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fef8dd81990" loc="55:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dd81990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8dd81d10"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8dd80020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8dd801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fef8dd7f020" loc="57:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fef8dd7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fef8dd7f3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fef8dd7f530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fef8dd7f6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fef8dd7f850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fef8dd7f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8dd822d0" loc="53:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8dd822d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8dd82650"/>
        <function-ref name="source" scoped="" ref="0x7fef8dd827e0"/>
        <function-ref name="address" scoped="" ref="0x7fef8dd82970"/>
        <function-ref name="destination" scoped="" ref="0x7fef8dd82b00"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8dd82c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8dd82e20"/>
        <function-ref name="type" scoped="" ref="0x7fef8dd81020"/>
        <function-ref name="setType" scoped="" ref="0x7fef8dd811b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8dd81340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8dd814d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8dd81660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fef8dd7fcb0" loc="58:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fef8dd7fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fef8dd7e0a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8dd7e230"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8dd7e3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fef8dd6c800" loc="63:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8dd6c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fef8dd6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fef8dd67c70" loc="67:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8dd67c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8dd64210"/>
        <function-ref name="clear" scoped="" ref="0x7fef8dd64940"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8dd65ac0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd63090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8dd5f270" loc="41:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8dd5f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8dd5f5f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8dd5f780"/>
        <function-ref name="start" scoped="" ref="0x7fef8dd5f910"/>
        <function-ref name="stop" scoped="" ref="0x7fef8dd5faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fef8dd363b0" loc="85:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8dd363b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dd35ac0"/>
        <function-ref name="get" scoped="" ref="0x7fef8dd35570"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8dd35020"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd34090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7fef8dd57020" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7fef8dd57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fef8dd573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7fef8dd4f5c0" loc="67:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7fef8dd4f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fef8dd4f940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fef8dd4fad0"/>
        <function-ref name="request" scoped="" ref="0x7fef8dd4fc60"/>
        <function-ref name="granted" scoped="" ref="0x7fef8dd4fdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fef8dd4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fef8dd5cd60" loc="57:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fef8dd5cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fef8dd5b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fef8dd2d660" loc="90:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8dd2d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8dd2cce0"/>
        <function-ref name="clear" scoped="" ref="0x7fef8dd2b460"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8dd2c5b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd2bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8dd5e2c0" loc="54:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8dd5e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8dd5e640"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8dd5e7d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8dd5e960"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8dd5eaf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8dd5ec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fef8dd5c1d0" loc="56:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fef8dd5c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8dd5c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fef8dd41760" loc="69:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fef8dd41760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fef8dd41ae0"/>
        <function-ref name="address" scoped="" ref="0x7fef8dd41c70"/>
        <function-ref name="destination" scoped="" ref="0x7fef8dd41e00"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8dd49020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8dd491b0"/>
        <function-ref name="pan" scoped="" ref="0x7fef8dd49340"/>
        <function-ref name="setPan" scoped="" ref="0x7fef8dd494d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8dd49660"/>
        <function-ref name="localPan" scoped="" ref="0x7fef8dd497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7fef8dd49bb0" loc="70:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7fef8dd49bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dd480a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8dd48230"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8dd483c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8dd48550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8dd486e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fef8dd3f4b0" loc="74:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8dd3f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fef8dd3f830"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fef8dd3f9c0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fef8dd3fb50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fef8dd3fce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fef8dd3be80" loc="84:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8dd3be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dd385e0"/>
        <function-ref name="get" scoped="" ref="0x7fef8dd38090"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8dd39ad0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd38b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8dd5d4d0" loc="55:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8dd5d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8dd5d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7fef8dd5aba0" loc="59:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fef8dd5aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dd59020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8dd591b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8dd59340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8dd594d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8dd59660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fef8dd31550" loc="89:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8dd31550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8dd30b00"/>
        <function-ref name="clear" scoped="" ref="0x7fef8dd2f2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8dd303d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd2f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fef8dd32020" loc="88:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8dd32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8dd32c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fef8dd3d8e0" loc="83:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8dd3d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dd3b090"/>
        <function-ref name="get" scoped="" ref="0x7fef8dd3caf0"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8dd3c5a0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dd3b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fef8dd48a10" loc="73:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8dd48a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8dd48d90"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8dd3f020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8dd3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fef8dd51a60" loc="63:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fef8dd51a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8dd51de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8dd58020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8dd581b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8dd58340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8dd584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fef8dd3e020" loc="75:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fef8dd3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fef8dd3e3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fef8dd3e530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fef8dd3e6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fef8dd3e850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fef8dd3e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8dd5b430" loc="58:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8dd5b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8dd5b7b0"/>
        <function-ref name="source" scoped="" ref="0x7fef8dd5b940"/>
        <function-ref name="address" scoped="" ref="0x7fef8dd5bad0"/>
        <function-ref name="destination" scoped="" ref="0x7fef8dd5bc60"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8dd5bdf0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8dd5a020"/>
        <function-ref name="type" scoped="" ref="0x7fef8dd5a1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fef8dd5a340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8dd5a4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8dd5a660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8dd5a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fef8dd58840" loc="64:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fef8dd58840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8dd58bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fef8dd3ecb0" loc="81:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fef8dd3ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fef8dd3d0a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8dd3d230"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8dd3d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fef8dd34710" loc="86:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8dd34710"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fef8dd34a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7fef8dd283c0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="RF230RadioC.TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fef8dd283c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fef8dd28740"/>
        <function-ref name="suspend" scoped="" ref="0x7fef8dd288d0"/>
        <function-ref name="resume" scoped="" ref="0x7fef8dd28a60"/>
        <function-ref name="run" scoped="" ref="0x7fef8dd28bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7fef8dcdaaa0" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8dcdaaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dcdae40"/>
        <function-ref name="clearAll" scoped="" ref="0x7fef8dcd9020"/>
        <function-ref name="get" scoped="" ref="0x7fef8dcd91b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8dcd9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7fef8dcdbcb0" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fef8dcdbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fef8dcda0a0"/>
        <function-ref name="insertNode" scoped="" ref="0x7fef8dcda230"/>
        <function-ref name="getNode" scoped="" ref="0x7fef8dcda3c0"/>
        <function-ref name="evicted" scoped="" ref="0x7fef8dcda550"/>
        <function-ref name="getIndex" scoped="" ref="0x7fef8dcda6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7fef8c8fd3b0" loc="43:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8c8fd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c8fd750"/>
        <function-ref name="clearAll" scoped="" ref="0x7fef8c8fd8e0"/>
        <function-ref name="get" scoped="" ref="0x7fef8c8fda70"/>
        <function-ref name="set" scoped="" ref="0x7fef8c8fdc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7fef8c8fe650" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fef8c8fe650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fef8c8fe9d0"/>
        <function-ref name="insertNode" scoped="" ref="0x7fef8c8feb60"/>
        <function-ref name="getNode" scoped="" ref="0x7fef8c8fecf0"/>
        <function-ref name="evicted" scoped="" ref="0x7fef8c8fee80"/>
        <function-ref name="getIndex" scoped="" ref="0x7fef8c8fd030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8c8fe080" loc="41:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8c8fe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8c8fe400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7fef8dcaa560" loc="51:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7fef8dcaa560"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fef8dcaa8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7fef8dcbe620" loc="47:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7fef8dcbe620"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7fef8dcbe9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7fef8dcad890" loc="50:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7fef8dcad890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8dcadc10"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fef8dcadda0"/>
        <function-ref name="source" scoped="" ref="0x7fef8dcb9020"/>
        <function-ref name="destination" scoped="" ref="0x7fef8dcb91b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8dcb9340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8dcb94d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8dcb9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7fef8dcb4310" loc="49:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7fef8dcb4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7fef8dcb4690"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7fef8dcb4820"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7fef8dcb49b0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7fef8dcb4b40"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7fef8dcb4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fef8dc8a400" loc="61:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8dc8a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fef8dc8a780"/>
        <function-ref name="wait" scoped="" ref="0x7fef8dc8a910"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8dc8aaa0"/>
        <function-ref name="isFree" scoped="" ref="0x7fef8dc8ac30"/>
        <function-ref name="getNow" scoped="" ref="0x7fef8dc8adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7fef8dc84960" loc="62:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7fef8dc84960"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8dc84ce0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8dc84e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8dc8e030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8dc8e1c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8dc8e350"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8dc8e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fef8dc8eab0" loc="64:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fef8dc8eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8dc82170"/>
        <function-ref name="clear" scoped="" ref="0x7fef8dc828a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8dc83a00"/>
        <function-ref name="set" scoped="" ref="0x7fef8dc81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7fef8dcd5020" loc="43:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7fef8dcd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8dcd53a0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8dcd5530"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8dcd56c0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fef8dcd5850"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fef8dcd59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7fef8dcc1020" loc="46:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7fef8dcc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7fef8dcc13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7fef8dcc6190" loc="44:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7fef8dcc6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7fef8dcc6510"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7fef8dcc66a0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fef8dcc6830"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7fef8dcc69c0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7fef8dcc6b50"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7fef8dcc6ce0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fef8dcc6e70"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fef8dcd4030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7fef8dc91470" loc="60:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8dc91470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fef8dc917f0"/>
        <function-ref name="getDSN" scoped="" ref="0x7fef8dc91980"/>
        <function-ref name="setFCF" scoped="" ref="0x7fef8dc91b10"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fef8dc91ca0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fef8dc91e30"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fef8dcac020"/>
        <function-ref name="setDSN" scoped="" ref="0x7fef8dcac1b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fef8dcac340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fef8dcac4d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fef8dcac660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fef8dcac7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fef8dcac980"/>
        <function-ref name="localAddr" scoped="" ref="0x7fef8dcacb10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fef8dcacda0"/>
        <function-ref name="localPan" scoped="" ref="0x7fef8dcab020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fef8dcab1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fef8dcab340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fef8dcab4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fef8dcab660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8dcab7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fef8dcab980"/>
        <function-ref name="getFCF" scoped="" ref="0x7fef8dcabb10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fef8dcabca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fef8dcabe30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fef8dc90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7fef8dcc2480" loc="45:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7fef8dcc2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fef8dcc2800"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fef8dcc2990"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fef8dcc2b20"/>
        <function-ref name="getSender" scoped="" ref="0x7fef8dcc2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7fef8dcbac80" loc="48:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7fef8dcbac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fef8dcc00a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fef8dcc0230"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fef8dcc03c0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fef8dcc0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7fef8dbf5020" loc="41:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8dbf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fef8dbf53c0"/>
        <function-ref name="wait" scoped="" ref="0x7fef8dbf5550"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8dbf56e0"/>
        <function-ref name="isFree" scoped="" ref="0x7fef8dbf5870"/>
        <function-ref name="getNow" scoped="" ref="0x7fef8dbf5a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fef8dbf4b60" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fef8dbf4b60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fef8e1ba3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fef8e1ba3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fef8de07180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8dbf14e0"/>
        <function-ref name="fired" scoped="" ref="0x7fef8dbf24e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8dbf2e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8dbf29a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8dbf19a0"/>
        <function-ref name="start" scoped="" ref="0x7fef8dbf39b0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8dbf2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fef8dbf5cb0" loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fef8dbf5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fef8dbf40a0"/>
        <function-ref name="suspend" scoped="" ref="0x7fef8dbf4230"/>
        <function-ref name="resume" scoped="" ref="0x7fef8dbf43c0"/>
        <function-ref name="run" scoped="" ref="0x7fef8dbf4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7fef8c8df300" loc="54:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8c8df300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fef8c8df6a0"/>
        <function-ref name="wait" scoped="" ref="0x7fef8c8df830"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c8df9c0"/>
        <function-ref name="isFree" scoped="" ref="0x7fef8c8dfb50"/>
        <function-ref name="getNow" scoped="" ref="0x7fef8c8dfce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fef8c8de260" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fef8c8de260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fef8de07180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8c8dcb30"/>
        <function-ref name="fired" scoped="" ref="0x7fef8c8dda60"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8c8dc4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8c8dc020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8c8db020"/>
        <function-ref name="start" scoped="" ref="0x7fef8c8dd090"/>
        <function-ref name="stop" scoped="" ref="0x7fef8c8dd5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fef8c8db410" loc="60:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fef8c8db410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fef8c8db790"/>
        <function-ref name="suspend" scoped="" ref="0x7fef8c8db920"/>
        <function-ref name="resume" scoped="" ref="0x7fef8c8dbab0"/>
        <function-ref name="run" scoped="" ref="0x7fef8c8dbc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8db468f0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8db468f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8db46c70"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8db46e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8db45020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8db452b0" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8db452b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8db45630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fef8db483a0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fef8db483a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fef8db48740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8db4b720" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8db4b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8db4baa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8db4bc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8db4bdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8db4a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8db4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8db4a530" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8db4a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8db4a8d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8db4aa60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8db4abf0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8db4ad80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8db49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fef8db49b00" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fef8db49b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8db48020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8db48a30" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8db48a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8db48db0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8db46020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8db461b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8db46340"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8db464d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8db46660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8db458c0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8db458c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8db45c40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fef8db45dd0"/>
        <function-ref name="source" scoped="" ref="0x7fef8db44020"/>
        <function-ref name="destination" scoped="" ref="0x7fef8db441b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8db44340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8db444d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8db44660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8db493a0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8db493a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8db49740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8db4c020" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8db4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8db4c3a0"/>
        <function-ref name="source" scoped="" ref="0x7fef8db4c530"/>
        <function-ref name="address" scoped="" ref="0x7fef8db4c6c0"/>
        <function-ref name="destination" scoped="" ref="0x7fef8db4c850"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8db4c9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8db4cb70"/>
        <function-ref name="type" scoped="" ref="0x7fef8db4cd00"/>
        <function-ref name="setType" scoped="" ref="0x7fef8db4b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8db4b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8db4b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8db4b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8c8be8f0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8c8be8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c8bec70"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c8bee00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c8bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8c8bd2b0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8c8bd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c8bd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fef8c8bf420" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fef8c8bf420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fef8c8bf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8c8c28b0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8c8c28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c8c2c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8c8c2dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c8c1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c8c11b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8c8c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8c8c4360" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8c8c4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c8c46e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8c8c4870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c8c4a00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8c8c4b90"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8c8c4d20"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8c8c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8c8c16c0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8c8c16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c8c1a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c8c1bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c8c1d80"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c8c0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c8c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fef8c8c0c90" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fef8c8c0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c8bf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8c8bfab0" loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8c8bfab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c8bfe30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8c8be020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c8be1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8c8be340"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8c8be4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8c8be660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8c8c0530" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8c8c0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c8c08d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8c8bd8c0" loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8c8bd8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8c8bdc40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fef8c8bddd0"/>
        <function-ref name="source" scoped="" ref="0x7fef8c8bb020"/>
        <function-ref name="destination" scoped="" ref="0x7fef8c8bb1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8c8bb340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8c8bb4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8c8bb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fef8c8bb8b0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fef8c8bb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fef8c8bbc30"/>
        <function-ref name="changed" scoped="" ref="0x7fef8c8bbdc0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fef8c8ba020"/>
        <function-ref name="setAddress" scoped="" ref="0x7fef8c8ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8c8c3270" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8c8c3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8c8c35f0"/>
        <function-ref name="source" scoped="" ref="0x7fef8c8c3780"/>
        <function-ref name="address" scoped="" ref="0x7fef8c8c3910"/>
        <function-ref name="destination" scoped="" ref="0x7fef8c8c3aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8c8c3c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8c8c3dc0"/>
        <function-ref name="type" scoped="" ref="0x7fef8c8c2020"/>
        <function-ref name="setType" scoped="" ref="0x7fef8c8c21b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8c8c2340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8c8c24d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8c8c2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fef8db65260" loc="54:/opt/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fef8db65260"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fef8db655e0"/>
        <function-ref name="changed" scoped="" ref="0x7fef8db65770"/>
        <function-ref name="amGroup" scoped="" ref="0x7fef8db65900"/>
        <function-ref name="setAddress" scoped="" ref="0x7fef8db65a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8db3e310" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8db3e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8db3e690"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8db3e820"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8db3e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fef8db3ec00" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fef8db3ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fef8db2e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fef8db2e1b0"/>
        <function-ref name="request" scoped="" ref="0x7fef8db2e340"/>
        <function-ref name="granted" scoped="" ref="0x7fef8db2e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fef8db2e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fef8db3f880" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fef8db3f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8db3fc00"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8db3fd90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8db3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fef8daca150" loc="86:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fef8daca150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fef8daca4f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fef8daca680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fef8dac91f0" loc="89:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8dac91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fef8dac9590"/>
        <function-ref name="configure" scoped="" ref="0x7fef8dac9720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fef8dacb390" loc="85:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fef8dacb390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fef8dacb730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fef8dacb8c0"/>
        <function-ref name="request" scoped="" ref="0x7fef8dacba50"/>
        <function-ref name="granted" scoped="" ref="0x7fef8dacbbe0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fef8dacbd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fef8daca8d0" loc="87:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fef8daca8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fef8dacac50"/>
        <function-ref name="userId" scoped="" ref="0x7fef8dacade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8c86d460" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8c86d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8c86d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fef8c86da70" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fef8c86da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fef8c86ddf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fef8c86c020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fef8c86c1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fef8c86c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fef8c869850" loc="52:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fef8c869850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fef8c869bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fef8c869d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fef8c868910" loc="56:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8c868910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fef8c868cb0"/>
        <function-ref name="configure" scoped="" ref="0x7fef8c868e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fef8c867120" loc="57:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fef8c867120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fef8c8674a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fef8c867630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fef8c8677c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fef8c867950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fef8c86a9d0" loc="51:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fef8c86a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fef8c86ad70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fef8c869020"/>
        <function-ref name="request" scoped="" ref="0x7fef8c8691b0"/>
        <function-ref name="granted" scoped="" ref="0x7fef8c869340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fef8c8694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fef8c868020" loc="53:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fef8c868020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fef8c8683a0"/>
        <function-ref name="userId" scoped="" ref="0x7fef8c868530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fef8c867c20" loc="68:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fef8c867c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8c866020"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8c8661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8da912b0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8da912b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8da91630"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8da917c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8da91950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8da91be0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8da91be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8da90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fef8da96d30" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fef8da96d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fef8da950e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8dac6e00" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8dac6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8da981c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8da98350"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8da984e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8da98670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8da98800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7fef8da92470" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8da92470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8da927f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8da92980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8da92b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8da92ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8da92e30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8da91020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7fef8da95390" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8da95390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fef8da95710"/>
        <function-ref name="getDSN" scoped="" ref="0x7fef8da958a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7fef8da95a30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fef8da95bc0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fef8da95d50"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fef8da94020"/>
        <function-ref name="setDSN" scoped="" ref="0x7fef8da941b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fef8da94340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fef8da944d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fef8da94660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fef8da947f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fef8da94980"/>
        <function-ref name="localAddr" scoped="" ref="0x7fef8da94b10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fef8da94da0"/>
        <function-ref name="localPan" scoped="" ref="0x7fef8da93020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fef8da931b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fef8da93340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fef8da934d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fef8da93660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8da937f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fef8da93980"/>
        <function-ref name="getFCF" scoped="" ref="0x7fef8da93b10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fef8da93ca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fef8da93e30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fef8da92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fef8da98a50" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fef8da98a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8da98dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8da96020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8da961b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8da96340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8da964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fef8da96760" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fef8da96760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8da96ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8da534a0" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8da534a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8da53820"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8da539b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8da53b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8da53dd0" loc="70:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8da53dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8da52180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fef8da56730" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fef8da56730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8da56ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8da56c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8da56dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8da55020"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8da551b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8da55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7fef8da54020" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7fef8da54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8da543a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8da52410" loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8da52410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8da52790"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8da52920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8da52ab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8da52c40"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8da52dd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8da50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7fef8da555d0" loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7fef8da555d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8da55950"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8da55ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8da55c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fef8da897c0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fef8da897c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8da89b40"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8da89cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8da89e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fef8da56120" loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fef8da56120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8da564a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7fef8da54630" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7fef8da54630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8da549b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8da54b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8da54cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8da54e60"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8da53020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8da531b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8d9b3440" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8d9b3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d9b37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fef8d9b7dd0" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fef8d9b7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fef8d9b6180"/>
        <function-ref name="address" scoped="" ref="0x7fef8d9b6310"/>
        <function-ref name="destination" scoped="" ref="0x7fef8d9b64a0"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8d9b6630"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8d9b67c0"/>
        <function-ref name="pan" scoped="" ref="0x7fef8d9b6950"/>
        <function-ref name="setPan" scoped="" ref="0x7fef8d9b6ae0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8d9b6c70"/>
        <function-ref name="localPan" scoped="" ref="0x7fef8d9b6e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8d9b5080" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d9b5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d9b5400"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d9b5590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d9b5720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d9b58b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d9b5a40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d9b5bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7fef8d9bae00" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8d9bae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fef8d9b91c0"/>
        <function-ref name="getDSN" scoped="" ref="0x7fef8d9b9350"/>
        <function-ref name="setFCF" scoped="" ref="0x7fef8d9b94e0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fef8d9b9670"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fef8d9b9800"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fef8d9b9990"/>
        <function-ref name="setDSN" scoped="" ref="0x7fef8d9b9b20"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fef8d9b9cb0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fef8d9b9e40"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fef8d9b8020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fef8d9b81b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fef8d9b8340"/>
        <function-ref name="localAddr" scoped="" ref="0x7fef8d9b84d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fef8d9b8760"/>
        <function-ref name="localPan" scoped="" ref="0x7fef8d9b88f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fef8d9b8a80"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fef8d9b8c10"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fef8d9b8da0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fef8d9b7020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8d9b71b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fef8d9b7340"/>
        <function-ref name="getFCF" scoped="" ref="0x7fef8d9b74d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fef8d9b7660"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fef8d9b77f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fef8d9b7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8d9b4500" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8d9b4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d9b4880"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d9b4a10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d9b4ba0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d9b4d30"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d9b3020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d9b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8d9b5e60" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8d9b5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d9b4210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8c7f9440" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8c7f9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c7f97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fef8c7fd2e0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fef8c7fd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fef8c7fd660"/>
        <function-ref name="address" scoped="" ref="0x7fef8c7fd7f0"/>
        <function-ref name="destination" scoped="" ref="0x7fef8c7fd980"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8c7fdb10"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8c7fdca0"/>
        <function-ref name="pan" scoped="" ref="0x7fef8c7fde30"/>
        <function-ref name="setPan" scoped="" ref="0x7fef8c7fc020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8c7fc1b0"/>
        <function-ref name="localPan" scoped="" ref="0x7fef8c7fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8c7fc590" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8c7fc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c7fc910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8c7fcaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c7fcc30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8c7fcdc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8c7fb020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8c7fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7fef8c800020" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fef8c800020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fef8c8003a0"/>
        <function-ref name="getDSN" scoped="" ref="0x7fef8c800530"/>
        <function-ref name="setFCF" scoped="" ref="0x7fef8c8006c0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fef8c800850"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fef8c8009e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fef8c800b70"/>
        <function-ref name="setDSN" scoped="" ref="0x7fef8c800d00"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fef8c7ff020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fef8c7ff1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fef8c7ff340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fef8c7ff4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fef8c7ff660"/>
        <function-ref name="localAddr" scoped="" ref="0x7fef8c7ff7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fef8c7ffa80"/>
        <function-ref name="localPan" scoped="" ref="0x7fef8c7ffc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fef8c7ffda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fef8c7fe020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fef8c7fe1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fef8c7fe340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8c7fe4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fef8c7fe660"/>
        <function-ref name="getFCF" scoped="" ref="0x7fef8c7fe7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fef8c7fe980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fef8c7feb10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fef8c7feca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fef8c7fba70" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fef8c7fba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fef8c7fbdf0"/>
        <function-ref name="changed" scoped="" ref="0x7fef8c7fa020"/>
        <function-ref name="amGroup" scoped="" ref="0x7fef8c7fa1b0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fef8c7fa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8c7fb440" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8c7fb440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c7fb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8c7fa5d0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8c7fa5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c7fa950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8c7faae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c7fac70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8c7fae00"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8c7f9020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8c7f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8d980a70" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8d980a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d980df0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d97e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d97e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8d97e440" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8d97e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d97e7c0"/>
        <function-ref name="header" scoped="" ref="0x7fef8d97e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7fef8d97c400" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8d97c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d97c780"/>
        <function-ref name="clearAll" scoped="" ref="0x7fef8d97c910"/>
        <function-ref name="get" scoped="" ref="0x7fef8d97caa0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d97cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fef8d981840" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8d981840"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d981bc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d981d50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d980020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8d97ebe0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8d97ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fef8d97d020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fef8d97d1b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fef8d97d340"/>
        <function-ref name="getSender" scoped="" ref="0x7fef8d97d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fef8d980270" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d980270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d9805f0"/>
        <function-ref name="header" scoped="" ref="0x7fef8d980780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7fef8d97d720" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fef8d97d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fef8d97daa0"/>
        <function-ref name="insertNode" scoped="" ref="0x7fef8d97dc30"/>
        <function-ref name="getNode" scoped="" ref="0x7fef8d97ddc0"/>
        <function-ref name="evicted" scoped="" ref="0x7fef8d97c020"/>
        <function-ref name="getIndex" scoped="" ref="0x7fef8d97c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8c7a6310" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8c7a6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c7a6690"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c7a6820"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c7a69b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8c7a6c40" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8c7a6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c7a5020"/>
        <function-ref name="header" scoped="" ref="0x7fef8c7a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7fef8c7a4ab0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fef8c7a4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c7a4e30"/>
        <function-ref name="clearAll" scoped="" ref="0x7fef8c7a3020"/>
        <function-ref name="get" scoped="" ref="0x7fef8c7a31b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8c7a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fef8c7a99b0" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8c7a99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c7a9d30"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c7a8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c7a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7fef8c7a5e80" loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fef8c7a5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fef8c7a4220"/>
        <function-ref name="insertNode" scoped="" ref="0x7fef8c7a43b0"/>
        <function-ref name="getNode" scoped="" ref="0x7fef8c7a4540"/>
        <function-ref name="evicted" scoped="" ref="0x7fef8c7a46d0"/>
        <function-ref name="getIndex" scoped="" ref="0x7fef8c7a4860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fef8c7a8400" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8c7a8400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c7a8780"/>
        <function-ref name="header" scoped="" ref="0x7fef8c7a8910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8c7a8b60" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8c7a8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8c7a6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7fef8c7a5400" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7fef8c7a5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fef8c7a5780"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fef8c7a5910"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fef8c7a5aa0"/>
        <function-ref name="getSender" scoped="" ref="0x7fef8c7a5c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8d96a950" loc="85:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8d96a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d96acd0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d96ae60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d969020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8d9692b0" loc="86:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8d9692b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d969630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7fef8d967d90" loc="93:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7fef8d967d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8d966180"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8d966310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8d9664a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fef8d977e40" loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8d977e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d96c1e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d96c370"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d96c500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8d96ba10" loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d96ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d96bd90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d96a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d96a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d96a340"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d96a4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d96a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8d9698c0" loc="87:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8d9698c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d969c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d969dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d968020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d9681b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d968340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d9684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7fef8d967100" loc="92:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7fef8d967100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fef8d967480"/>
        <function-ref name="setRetries" scoped="" ref="0x7fef8d967610"/>
        <function-ref name="getRetries" scoped="" ref="0x7fef8d9677a0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fef8d967930"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fef8d967ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8d96c790" loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8d96c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d96cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fef8d968720" loc="88:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8d968720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8d968aa0"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8d968c30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8d968dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fef8d96cd60" loc="79:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fef8d96cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fef8d96b180"/>
        <function-ref name="setRetries" scoped="" ref="0x7fef8d96b310"/>
        <function-ref name="getRetries" scoped="" ref="0x7fef8d96b4a0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fef8d96b630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fef8d96b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8d961880" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8d961880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8d961c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8d961d90"/>
        <function-ref name="start" scoped="" ref="0x7fef8d94c020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d94c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8d9488c0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8d9488c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d948c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d948dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d947020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8d9472b0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8d9472b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d947630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fef8d94c440" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8d94c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d94c7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d94c950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d94cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8d94b3d0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d94b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d94b750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d94b8e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d94ba70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d94bc00"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d94bd90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d94a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fef8d94a270" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8d94a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fef8d94a5f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fef8d94a780"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fef8d94a910"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fef8d94aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fef8d94ad90" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fef8d94ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8d948180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8d948310"/>
        <function-ref name="start" scoped="" ref="0x7fef8d9484a0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d948630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8d94cd70" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8d94cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d94b180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8d9478c0" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8d9478c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d947c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d947dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d946020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d9461b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d946340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d9464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fef8c781640" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fef8c781640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fef8c7819c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fef8c781b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fef8c781ce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fef8c781e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8d8d6a10" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8d8d6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8d8d6d90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8d8d5020"/>
        <function-ref name="start" scoped="" ref="0x7fef8d8d51b0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d8d5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7fef8d8d3aa0" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fef8d8d3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fef8d8d3e20"/>
        <function-ref name="turnOn" scoped="" ref="0x7fef8d8d2020"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8d8d21b0"/>
        <function-ref name="done" scoped="" ref="0x7fef8d8d2340"/>
        <function-ref name="standby" scoped="" ref="0x7fef8d8d24d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8d8d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fef8d8d55d0" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8d8d55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d8d5950"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d8d5ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d8d5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7fef8d8d1270" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d8d1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d8d15f0"/>
        <function-ref name="header" scoped="" ref="0x7fef8d8d1780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8d8d4020" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8d8d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d8d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7fef8d8d28b0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fef8d8d28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d8d2c30"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d8d2dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d8d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fef8d8d45f0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fef8d8d45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fef8d8d4970"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8d8d4b00"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8d8d4c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fef8d8d3020" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fef8d8d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fef8d8d33a0"/>
        <function-ref name="suspend" scoped="" ref="0x7fef8d8d3530"/>
        <function-ref name="resume" scoped="" ref="0x7fef8d8d36c0"/>
        <function-ref name="run" scoped="" ref="0x7fef8d8d3850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8c77abf0" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8c77abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8c779020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8c7791b0"/>
        <function-ref name="start" scoped="" ref="0x7fef8c779340"/>
        <function-ref name="stop" scoped="" ref="0x7fef8c7794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7fef8c779760" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8c779760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8c779ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7fef8c776670" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fef8c776670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fef8c7769f0"/>
        <function-ref name="turnOn" scoped="" ref="0x7fef8c776b80"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8c776d10"/>
        <function-ref name="done" scoped="" ref="0x7fef8c775020"/>
        <function-ref name="standby" scoped="" ref="0x7fef8c7751b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8c775340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fef8c779d70" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8c779d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c777180"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c777310"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c7774a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7fef8c773940" loc="189:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7fef8c773940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8c773cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8c773e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7fef8c774950" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8c774950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c774cd0"/>
        <function-ref name="header" scoped="" ref="0x7fef8c774e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7fef8c772160" loc="144:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7fef8c772160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8c7724e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8c772670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8c777730" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8c777730"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c777ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7fef8c773160" loc="322:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7fef8c773160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8c7734e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8c773670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7fef8c774060" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fef8c774060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c7743e0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8c774570"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c774700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fef8c777d00" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fef8c777d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fef8c7760a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8c776230"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8c7763c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fef8c775590" loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fef8c775590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fef8c775910"/>
        <function-ref name="suspend" scoped="" ref="0x7fef8c775aa0"/>
        <function-ref name="resume" scoped="" ref="0x7fef8c775c30"/>
        <function-ref name="run" scoped="" ref="0x7fef8c775dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8d87a860" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8d87a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d87abe0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d87ad70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d879020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8d8792b0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8d8792b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d879630"/>
        <function-ref name="header" scoped="" ref="0x7fef8d8797c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fef8d879a10" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d879a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fef8d879d90"/>
        <function-ref name="wait" scoped="" ref="0x7fef8d878020"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d8781b0"/>
        <function-ref name="isFree" scoped="" ref="0x7fef8d878340"/>
        <function-ref name="getNow" scoped="" ref="0x7fef8d8784d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8d878760" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8d878760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fef8d878ae0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fef8d878c70"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fef8d878e00"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fef8d877020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fef8d87a060" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d87a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d87a3e0"/>
        <function-ref name="header" scoped="" ref="0x7fef8d87a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fef8d87b740" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fef8d87b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d87bac0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d87bc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d87bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8c739820" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8c739820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c739ba0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8c739d30"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c738020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8c7382b0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8c7382b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c738630"/>
        <function-ref name="header" scoped="" ref="0x7fef8c7387c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fef8c738a10" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8c738a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fef8c738d90"/>
        <function-ref name="wait" scoped="" ref="0x7fef8c737020"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c7371b0"/>
        <function-ref name="isFree" scoped="" ref="0x7fef8c737340"/>
        <function-ref name="getNow" scoped="" ref="0x7fef8c7374d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fef8c737720" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fef8c737720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fef8c737aa0"/>
        <function-ref name="rand32" scoped="" ref="0x7fef8c737c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8c736020" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8c736020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fef8c7363a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fef8c736530"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fef8c7366c0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fef8c736850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fef8c739020" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8c739020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8c7393a0"/>
        <function-ref name="header" scoped="" ref="0x7fef8c739530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fef8c73b660" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fef8c73b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c73b9e0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8c73bb70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c73bd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7fef8c736b20" loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7fef8c736b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8c735020"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8c7351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fef8d890160" loc="46:/opt/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fef8d890160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fef8d8904e0"/>
        <function-ref name="rand32" scoped="" ref="0x7fef8d890670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fef8d891060" loc="45:/opt/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fef8d891060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d891c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d892230" loc="44:/opt/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d892230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d8925b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fef8d889100" loc="48:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fef8d889100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fef8d889480"/>
        <function-ref name="rand32" scoped="" ref="0x7fef8d889610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fef8d88a020" loc="47:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fef8d88a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d88ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d88b6e0" loc="46:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d88b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d88ba60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8d847630" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8d847630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d8479b0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d847b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d847cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8d846020" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8d846020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d8463a0"/>
        <function-ref name="header" scoped="" ref="0x7fef8d846530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fef8d846780" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d846780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fef8d846b00"/>
        <function-ref name="wait" scoped="" ref="0x7fef8d846c90"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d846e20"/>
        <function-ref name="isFree" scoped="" ref="0x7fef8d845020"/>
        <function-ref name="getNow" scoped="" ref="0x7fef8d8451b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7fef8d8435d0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7fef8d8435d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d843950"/>
        <function-ref name="get" scoped="" ref="0x7fef8d843ae0"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8d843c70"/>
        <function-ref name="set" scoped="" ref="0x7fef8d843e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8d845440" loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8d845440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7fef8d8457c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7fef8d845950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fef8d845ae0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7fef8d845c70"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7fef8d845e00"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7fef8d843020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fef8d8431b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fef8d843340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fef8d848400" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d848400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d848780"/>
        <function-ref name="header" scoped="" ref="0x7fef8d848910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fef8d873ac0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fef8d873ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d873e40"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d848020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d8481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fef8d848b60" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fef8d848b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8d847020"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8d8471b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8d847340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8d82a1d0" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8d82a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8d82a550"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8d82a6e0"/>
        <function-ref name="start" scoped="" ref="0x7fef8d82a870"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d82aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fef8d827b60" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fef8d827b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fef8d825020"/>
        <function-ref name="request" scoped="" ref="0x7fef8d8251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8d821440" loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8d821440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d8217c0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d821950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d821ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8d821d70" loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8d821d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d820180"/>
        <function-ref name="header" scoped="" ref="0x7fef8d820310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fef8d829b60" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fef8d829b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fef8d828020"/>
        <function-ref name="turnOn" scoped="" ref="0x7fef8d8281b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8d828340"/>
        <function-ref name="done" scoped="" ref="0x7fef8d8284d0"/>
        <function-ref name="standby" scoped="" ref="0x7fef8d828660"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8d8287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8d825400" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d825400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d825780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d825910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d825aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d825c30"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d825dc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d824020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7fef8d822410" loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7fef8d822410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fef8d822890"/>
        <function-ref name="turnOn" scoped="" ref="0x7fef8d822a20"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8d822bb0"/>
        <function-ref name="done" scoped="" ref="0x7fef8d822d40"/>
        <function-ref name="standby" scoped="" ref="0x7fef8d821020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8d8211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7fef8d8242b0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fef8d8242b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fef8d824630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fef8d827400" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d827400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d827780"/>
        <function-ref name="header" scoped="" ref="0x7fef8d827910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7fef8d823d70" loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7fef8d823d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d822180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fef8d824920" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fef8d824920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8d824ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8d824e30"/>
        <function-ref name="start" scoped="" ref="0x7fef8d823020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d8231b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8d820d40" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8d820d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d81f0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d81f270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d81f400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d81f590"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d81f720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d81f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fef8d829590" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fef8d829590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d829910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8d81fb40" loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8d81fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fef8d81d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7fef8d823440" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7fef8d823440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d8237c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d823950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d823ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fef8d828a40" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fef8d828a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d828dc0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d827020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d8271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7fef8d8205a0" loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7fef8d8205a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fef8d820920"/>
        <function-ref name="request" scoped="" ref="0x7fef8d820ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fef8d82ac50" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fef8d82ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d829020"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d8291b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d829340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7fef8d5f2b00" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7fef8d5f2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5f2e80"/>
        <function-ref name="get" scoped="" ref="0x7fef8d5f1030"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8d5f11c0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5f1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8d5f5c20" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5f5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5f4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d5f41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d5f4340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d5f44d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d5f4660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d5f47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8d5f3cd0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8d5f3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5f20a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d5f2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d5f23c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d5f2550"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d5f26e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d5f2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fef8d5f8020" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8d5f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8d5f75a0"/>
        <function-ref name="clear" scoped="" ref="0x7fef8d5f7cd0"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8d5f8e30"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5f5460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7fef8d5f4c00" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d5f4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d5f38a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fef8d5fc020" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8d5fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8d5fa5a0"/>
        <function-ref name="clear" scoped="" ref="0x7fef8d5facd0"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8d5fce30"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5f9460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7fef8c6e5c40" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7fef8c6e5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c6e4020"/>
        <function-ref name="get" scoped="" ref="0x7fef8c6e41b0"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8c6e4340"/>
        <function-ref name="set" scoped="" ref="0x7fef8c6e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8c6e7d90" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8c6e7d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c6e5180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8c6e5310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c6e54a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8c6e5630"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8c6e57c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8c6e5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8c6e2ae0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8c6e2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c6e2e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8c6e1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c6e11b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8c6e1340"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8c6e14d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8c6e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fef8c6e91c0" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fef8c6e91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8c6e8750"/>
        <function-ref name="clear" scoped="" ref="0x7fef8c6e8e80"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8c6e8020"/>
        <function-ref name="set" scoped="" ref="0x7fef8c6e75d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7fef8c6e4880" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8c6e4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8c6e3500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fef8c6e3a50" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fef8c6e3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8c6e26b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fef8c6ed2a0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fef8c6ed2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8c6ec800"/>
        <function-ref name="clear" scoped="" ref="0x7fef8c6ea020"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8c6ec0d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8c6ea750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fef8d7c7080" loc="20:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fef8d7c7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d7c7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fef8d7c23f0" loc="46:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fef8d7c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d7b5870"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d7c1e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fef8d7b7c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fef8d7b7780"/>
        <function-ref name="getdt" scoped="" ref="0x7fef8d7b41e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fef8d7b5cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d7b7300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fef8d7c1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fef8d7b5260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fef8d7c14f0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d7c19c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fef8d7b47d0" loc="47:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fef8d7b47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d7b2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d7c6b50" loc="45:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d7c6b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d7c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fef8d7a9020" loc="29:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fef8d7a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d7a9e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8d7a8800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8d7a8340"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d7a8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d7ae020" loc="27:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d7ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d7ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fef8d7aea10" loc="28:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fef8d7aea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d7aa2a0"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d7ac2a0"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8d7acc20"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d7ac760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8d7aa760"/>
        <function-ref name="start" scoped="" ref="0x7fef8d7ad890"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d7adda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fef8d6a5890" loc="61:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fef8d6a5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d6a10d0"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d6a20d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8d6a2a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d6a2590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8d6a1590"/>
        <function-ref name="start" scoped="" ref="0x7fef8d6a46e0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d6a4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d6a5080" loc="60:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d6a5080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fef8e1ba020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fef8e1ba020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d6a5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fef8d6a1bc0" loc="62:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8d6a1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d6a0a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8d69f4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8d69f020"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d69f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fef8c6b4960" loc="66:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8c6b4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fef8c6b4ce0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fef8c6b4e70"/>
        <function-ref name="getControlA" scoped="" ref="0x7fef8c6b2030"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fef8c6b21c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fef8c6b2350"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fef8c6b24e0"/>
        <function-ref name="getControlB" scoped="" ref="0x7fef8c6b2670"/>
        <function-ref name="setControlA" scoped="" ref="0x7fef8c6b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fef8c6bf020" loc="61:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fef8c6bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8c6bc870"/>
        <function-ref name="fired" scoped="" ref="0x7fef8c6be840"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8c6bc220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8c6bed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8c6bcd30"/>
        <function-ref name="start" scoped="" ref="0x7fef8c6bfe30"/>
        <function-ref name="stop" scoped="" ref="0x7fef8c6be380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8c6c0720" loc="60:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8c6c0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8c6c0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fef8c6bb390" loc="62:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8c6bb390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8c6ba1f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8c6bab70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8c6ba6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8c6b9090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fef8c6afe80" loc="68:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fef8c6afe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fef8c6ae220"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fef8c6ae3b0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fef8c6ae540"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fef8c6ae6d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fef8c6ae860"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fef8c6ae9f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7fef8c6aeb80"/>
        <function-ref name="setAssr" scoped="" ref="0x7fef8c6aed10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fef8c6b2bb0" loc="67:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fef8c6b2bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8c6af590"/>
        <function-ref name="fired" scoped="" ref="0x7fef8c6b0260"/>
        <function-ref name="get" scoped="" ref="0x7fef8c6b1820"/>
        <function-ref name="reset" scoped="" ref="0x7fef8c6b0720"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8c6afa50"/>
        <function-ref name="set" scoped="" ref="0x7fef8c6b1ce0"/>
        <function-ref name="start" scoped="" ref="0x7fef8c6b0be0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8c6af0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fef8c6b9640" loc="65:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8c6b9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8c6b5a90"/>
        <function-ref name="test" scoped="" ref="0x7fef8c6b5110"/>
        <function-ref name="get" scoped="" ref="0x7fef8c6b83d0"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8c6b4020"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8c6b4530"/>
        <function-ref name="reset" scoped="" ref="0x7fef8c6b62a0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8c6b8da0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8c6b55d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8c6b8890"/>
        <function-ref name="start" scoped="" ref="0x7fef8c6b6760"/>
        <function-ref name="stop" scoped="" ref="0x7fef8c6b6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fef8d717020" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8d717020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fef8d7173a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fef8d717530"/>
        <function-ref name="getControlA" scoped="" ref="0x7fef8d7176c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fef8d717850"/>
        <function-ref name="setControlB" scoped="" ref="0x7fef8d7179e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fef8d717b70"/>
        <function-ref name="getControlB" scoped="" ref="0x7fef8d717d00"/>
        <function-ref name="setControlA" scoped="" ref="0x7fef8d716020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fef8d713a40" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fef8d713a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fef8d713dc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fef8d711020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fef8d7111b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fef8d711340"/>
        <function-ref name="countBusy" scoped="" ref="0x7fef8d7114d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fef8d711660"/>
        <function-ref name="getAssr" scoped="" ref="0x7fef8d7117f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fef8d711980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fef8d716520" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fef8d716520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8d713020"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d715b80"/>
        <function-ref name="get" scoped="" ref="0x7fef8d7151b0"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d714090"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d7134e0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d715670"/>
        <function-ref name="start" scoped="" ref="0x7fef8d714550"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d714a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8d71fc70" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8d71fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8d719020"/>
        <function-ref name="test" scoped="" ref="0x7fef8d71a610"/>
        <function-ref name="get" scoped="" ref="0x7fef8d71c8e0"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8d7194e0"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8d7199f0"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d71b7a0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d71b2e0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d71aad0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d71cda0"/>
        <function-ref name="start" scoped="" ref="0x7fef8d71bc60"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d71a150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fef8d7082b0" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8d7082b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fef8d708630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fef8d7087c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fef8d708950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fef8d708ae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fef8d708c70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fef8d708e00"/>
        <function-ref name="getControlB" scoped="" ref="0x7fef8d707020"/>
        <function-ref name="setControlA" scoped="" ref="0x7fef8d7071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fef8d703a70" loc="85:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fef8d703a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fef8d703df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fef8d702230" loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fef8d702230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fef8d7025b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fef8d702740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fef8d7028d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fef8d702a60"/>
        <function-ref name="countBusy" scoped="" ref="0x7fef8d702bf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fef8d702d80"/>
        <function-ref name="getAssr" scoped="" ref="0x7fef8d701020"/>
        <function-ref name="setAssr" scoped="" ref="0x7fef8d7011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fef8d7076b0" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fef8d7076b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8d703110"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d706da0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d7063d0"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d7052a0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d7035d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d706890"/>
        <function-ref name="start" scoped="" ref="0x7fef8d705760"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d705c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8d70d020" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8d70d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8d709350"/>
        <function-ref name="test" scoped="" ref="0x7fef8d70b9a0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d70dc50"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8d709810"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8d709d20"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d70cb20"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d70c660"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d70be60"/>
        <function-ref name="set" scoped="" ref="0x7fef8d70c150"/>
        <function-ref name="start" scoped="" ref="0x7fef8d70b020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d70b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fef8d66c490" loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fef8d66c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d66c810"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d66c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fef8d6701d0" loc="49:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fef8d6701d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d66db30"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d66f9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8d66d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d66d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8d66c020"/>
        <function-ref name="start" scoped="" ref="0x7fef8d66f020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d66f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8d676cf0" loc="48:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8d676cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d671220"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d6747c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fef8d672590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fef8d672110"/>
        <function-ref name="getdt" scoped="" ref="0x7fef8d671b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fef8d6716a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d674c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fef8d675940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fef8d672ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fef8d675e10"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d674340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fef8d61ca00" loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fef8d61ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d61cd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d61b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fef8d621640" loc="49:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fef8d621640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d61dc40"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d61e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fef8d61d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fef8d61eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fef8d61c590"/>
        <function-ref name="gett0" scoped="" ref="0x7fef8d61c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d61e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fef8d620390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fef8d61d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fef8d620860"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d620d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8d627150" loc="48:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8d627150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d623700"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d626c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fef8d624a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fef8d6245b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fef8d621090"/>
        <function-ref name="gett0" scoped="" ref="0x7fef8d623ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d624110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fef8d627d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fef8d6230d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fef8d6262a0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d626790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fef8d618790" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fef8d618790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d6173f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fef8d617a60" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8d617a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d60d890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8d60c260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8d60dd50"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d60c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fef8d6052e0" loc="49:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fef8d6052e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d601870"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d604e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fef8d602c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fef8d602780"/>
        <function-ref name="getdt" scoped="" ref="0x7fef8d6001e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fef8d601cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d602300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fef8d604020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fef8d601260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fef8d6044f0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d6049c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8d5ec590" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5ec590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5ec910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d5ecaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d5ecc30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d5ecdc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d5cb020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d5cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8d5cb4a0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8d5cb4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5cb820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d5cb9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d5cbb40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d5cbcd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d5cbe60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d5ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7fef8d5ed9b0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7fef8d5ed9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5edd50"/>
        <function-ref name="get" scoped="" ref="0x7fef8d5ec020"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8d5ec1b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8d5c80e0" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8d5c80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8d5c8460"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8d5c85f0"/>
        <function-ref name="start" scoped="" ref="0x7fef8d5c8780"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d5c8910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fef8d5c5b60" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fef8d5c5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fef8d5c4020"/>
        <function-ref name="request" scoped="" ref="0x7fef8d5c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fef8d5bf440" loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fef8d5bf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d5bf7c0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d5bf950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d5bfae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fef8d5bfd70" loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fef8d5bfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d5be180"/>
        <function-ref name="header" scoped="" ref="0x7fef8d5be310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fef8d5c7b60" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fef8d5c7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fef8d5c6020"/>
        <function-ref name="turnOn" scoped="" ref="0x7fef8d5c61b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8d5c6340"/>
        <function-ref name="done" scoped="" ref="0x7fef8d5c64d0"/>
        <function-ref name="standby" scoped="" ref="0x7fef8d5c6660"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8d5c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8d5c4400" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5c4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5c4780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d5c4910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d5c4aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d5c4c30"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d5c4dc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d5c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7fef8d5c0410" loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7fef8d5c0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fef8d5c0890"/>
        <function-ref name="turnOn" scoped="" ref="0x7fef8d5c0a20"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8d5c0bb0"/>
        <function-ref name="done" scoped="" ref="0x7fef8d5c0d40"/>
        <function-ref name="standby" scoped="" ref="0x7fef8d5bf020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8d5bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7fef8d5c22b0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fef8d5c22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fef8d5c2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fef8d5c5400" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d5c5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d5c5780"/>
        <function-ref name="header" scoped="" ref="0x7fef8d5c5910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7fef8d5c1d70" loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7fef8d5c1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d5c0180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fef8d5c2920" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fef8d5c2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8d5c2ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8d5c2e30"/>
        <function-ref name="start" scoped="" ref="0x7fef8d5c1020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d5c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fef8d5bed40" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fef8d5bed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5bd0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d5bd270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d5bd400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d5bd590"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d5bd720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d5bd8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fef8d5c7590" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fef8d5c7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d5c7910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8d5bdb40" loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8d5bdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fef8d5bc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7fef8d5c1440" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7fef8d5c1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d5c17c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d5c1950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d5c1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fef8d5c6a40" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fef8d5c6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d5c6dc0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d5c5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d5c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7fef8d5be5a0" loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7fef8d5be5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fef8d5be920"/>
        <function-ref name="request" scoped="" ref="0x7fef8d5beab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fef8d5c8b60" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fef8d5c8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d5c7020"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d5c71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d5c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fef8d5b35c0" loc="45:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fef8d5b35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fef8d5b3940"/>
        <function-ref name="request" scoped="" ref="0x7fef8d5b3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fef8d5ae3b0" loc="49:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8d5ae3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5adac0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d5ad570"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8d5ad020"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5ac090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7fef8d599ca0" loc="64:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7fef8d599ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5980a0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d598230"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8d5983c0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d598550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fef8d59d2e0" loc="61:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fef8d59d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8d59c840"/>
        <function-ref name="clear" scoped="" ref="0x7fef8d59b020"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8d59c110"/>
        <function-ref name="set" scoped="" ref="0x7fef8d59b750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fef8d5b8610" loc="42:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fef8d5b8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fef8d5b8990"/>
        <function-ref name="turnOn" scoped="" ref="0x7fef8d5b8b20"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8d5b8cb0"/>
        <function-ref name="done" scoped="" ref="0x7fef8d5b8e40"/>
        <function-ref name="standby" scoped="" ref="0x7fef8d5b5020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8d5b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fef8d597470" loc="66:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d597470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fef8d5977f0"/>
        <function-ref name="wait" scoped="" ref="0x7fef8d597980"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d597b10"/>
        <function-ref name="isFree" scoped="" ref="0x7fef8d597ca0"/>
        <function-ref name="getNow" scoped="" ref="0x7fef8d597e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fef8d5b2e80" loc="48:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8d5b2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5b05e0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d5b0090"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8d5b1ad0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5b0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8d5b3d90" loc="46:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d5b3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5b2180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d5b2310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d5b24a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d5b2630"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d5b27c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d5b2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8d59e1f0" loc="60:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8d59e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d59e670"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d59e800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d59e990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fef8d59eb20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fef8d59ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fef8d5b5dd0" loc="44:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d5b5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d5b3180"/>
        <function-ref name="header" scoped="" ref="0x7fef8d5b3310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fef8d5a4dd0" loc="55:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fef8d5a4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fef8de07180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d5a06e0"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d5a16b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8d5a0090"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d5a1b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8d5a0ba0"/>
        <function-ref name="start" scoped="" ref="0x7fef8d5a2ca0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d5a11f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fef8d5ac940" loc="50:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fef8d5ac940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5a9090"/>
        <function-ref name="get" scoped="" ref="0x7fef8d5aaaf0"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8d5aa5a0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5a95e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fef8d5a5a40" loc="54:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d5a5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d5a46b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fef8d5b5460" loc="43:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fef8d5b5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d5b57e0"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d5b5970"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d5b5b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fef8d5a9e70" loc="51:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8d5a9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5a65e0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d5a6090"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8d5a8ad0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5a6b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7fef8d5988d0" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fef8d5988d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d598c50"/>
        <function-ref name="get" scoped="" ref="0x7fef8d598de0"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8d597020"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5971b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7fef8d599110" loc="63:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fef8d599110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d599490"/>
        <function-ref name="get" scoped="" ref="0x7fef8d599620"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8d5997b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d599940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fef8d5a51e0" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8d5a51e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fef8d5a5560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fef8d596110" loc="67:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fef8d596110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fef8d596490"/>
        <function-ref name="suspend" scoped="" ref="0x7fef8d596620"/>
        <function-ref name="resume" scoped="" ref="0x7fef8d5967b0"/>
        <function-ref name="run" scoped="" ref="0x7fef8d596940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fef8d58dc40" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fef8d58dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fef8d58c020"/>
        <function-ref name="request" scoped="" ref="0x7fef8d58c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fef8d56c4d0" loc="74:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fef8d56c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fef8d5733d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fef8d589a40" loc="56:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fef8d589a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d5861b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d587c00"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8d5876b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d586700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7fef8d5696a0" loc="80:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7fef8d5696a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d569a20"/>
        <function-ref name="get" scoped="" ref="0x7fef8d569bb0"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8d569d40"/>
        <function-ref name="set" scoped="" ref="0x7fef8d568020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7fef8d58f600" loc="47:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fef8d58f600"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fef8e1ba3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fef8e1ba3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d58f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fef8d567200" loc="83:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fef8d567200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fef8d566970"/>
        <function-ref name="clear" scoped="" ref="0x7fef8d5640d0"/>
        <function-ref name="isValid" scoped="" ref="0x7fef8d566240"/>
        <function-ref name="set" scoped="" ref="0x7fef8d564800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fef8d579020" loc="70:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fef8d579020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d5793a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d579530"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d5796c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d579850"/>
        <function-ref name="get" scoped="" ref="0x7fef8d5799e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d579b70"/>
        <function-ref name="set" scoped="" ref="0x7fef8d579d00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d575020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fef8d563b70" loc="86:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fef8d563b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fef8d562020"/>
        <function-ref name="wait" scoped="" ref="0x7fef8d5621b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8d562340"/>
        <function-ref name="isFree" scoped="" ref="0x7fef8d5624d0"/>
        <function-ref name="getNow" scoped="" ref="0x7fef8d562660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fef8d58fc40" loc="49:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fef8d58fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fef8d58e020"/>
        <function-ref name="turnOn" scoped="" ref="0x7fef8d58e1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fef8d58e340"/>
        <function-ref name="done" scoped="" ref="0x7fef8d58e4d0"/>
        <function-ref name="standby" scoped="" ref="0x7fef8d58e660"/>
        <function-ref name="getChannel" scoped="" ref="0x7fef8d58e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7fef8d5739d0" loc="75:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fef8d5739d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d56b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fef8d58b550" loc="55:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fef8d58b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d58ac50"/>
        <function-ref name="get" scoped="" ref="0x7fef8d58a700"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8d58a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d5891f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fef8d58c470" loc="53:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fef8d58c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d58c7f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8d58c980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d58cb10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8d58cca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d58ce30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d58b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7fef8d576dd0" loc="69:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7fef8d576dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d57a180"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d57a310"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d57a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d57a630"/>
        <function-ref name="get" scoped="" ref="0x7fef8d57a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d57a950"/>
        <function-ref name="set" scoped="" ref="0x7fef8d57aae0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d57ac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fef8d56bb50" loc="77:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fef8d56bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8d56a020"/>
        <function-ref name="headerLength" scoped="" ref="0x7fef8d56a1b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fef8d56a340"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fef8d56a4d0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fef8d56a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fef8d58d480" loc="51:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fef8d58d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8d58d800"/>
        <function-ref name="header" scoped="" ref="0x7fef8d58d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7fef8d4d2e40" loc="856:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7fef8d4d2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d4d11e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d4d1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fef8d584020" loc="57:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fef8d584020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d583740"/>
        <function-ref name="get" scoped="" ref="0x7fef8d5831f0"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8d584c50"/>
        <function-ref name="set" scoped="" ref="0x7fef8d583c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fef8d591a60" loc="46:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fef8d591a60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fef8e1ba3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fef8e1ba3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d591de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fef8d57c380" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fef8d57c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fef8d57c700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fef8d57c890"/>
        <function-ref name="request" scoped="" ref="0x7fef8d57ca20"/>
        <function-ref name="granted" scoped="" ref="0x7fef8d57cbb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fef8d57cd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7fef8d57d020" loc="64:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7fef8d57d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d57d4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d57d630"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d57d7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d57d950"/>
        <function-ref name="get" scoped="" ref="0x7fef8d57dae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d57dc70"/>
        <function-ref name="set" scoped="" ref="0x7fef8d57de00"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d57c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fef8d581560" loc="58:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fef8d581560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d580c90"/>
        <function-ref name="get" scoped="" ref="0x7fef8d580740"/>
        <function-ref name="isSet" scoped="" ref="0x7fef8d5801f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d57f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fef8d58eaa0" loc="50:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fef8d58eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d58ee20"/>
        <function-ref name="ready" scoped="" ref="0x7fef8d58d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d58d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7fef8d570b30" loc="72:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fef8d570b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fef8d574020"/>
        <function-ref name="disable" scoped="" ref="0x7fef8d5741b0"/>
        <function-ref name="captured" scoped="" ref="0x7fef8d574340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fef8d5744d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7fef8d576270" loc="67:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d576270"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fef8d5765f0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fef8d576780"/>
        <function-ref name="splitRead" scoped="" ref="0x7fef8d576910"/>
        <function-ref name="write" scoped="" ref="0x7fef8d576aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7fef8d5683a0" loc="81:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fef8d5683a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d568720"/>
        <function-ref name="get" scoped="" ref="0x7fef8d5688b0"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8d568a40"/>
        <function-ref name="set" scoped="" ref="0x7fef8d568bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7fef8d56aa10" loc="79:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fef8d56aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8d56ad90"/>
        <function-ref name="get" scoped="" ref="0x7fef8d569020"/>
        <function-ref name="setValue" scoped="" ref="0x7fef8d5691b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d569340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fef8d57f8b0" loc="59:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fef8d57f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fef8d57fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fef8d563080" loc="85:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fef8d563080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fef8d563400"/>
        <function-ref name="suspend" scoped="" ref="0x7fef8d563590"/>
        <function-ref name="resume" scoped="" ref="0x7fef8d563720"/>
        <function-ref name="run" scoped="" ref="0x7fef8d5638b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fef8d48c7f0" loc="46:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fef8d48c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d48cb70"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d48cd00"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d48b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d48b1b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d48b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d48b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d48b660"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d48b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7fef8d48d4e0" loc="45:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7fef8d48d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d48d860"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d48d9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d48db80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d48dd10"/>
        <function-ref name="get" scoped="" ref="0x7fef8d48c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d48c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d48c340"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d48c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fef8d48aac0" loc="49:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fef8d48aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d487390"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d488360"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8d488ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d488820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8d487850"/>
        <function-ref name="start" scoped="" ref="0x7fef8d489970"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d489e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7fef8d490b50" loc="42:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fef8d490b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fef8d48e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fef8d48e1b0"/>
        <function-ref name="request" scoped="" ref="0x7fef8d48e340"/>
        <function-ref name="granted" scoped="" ref="0x7fef8d48e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fef8d48e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7fef8d493940" loc="41:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7fef8d493940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d493cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d493e50"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d490020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d4901b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d490340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d4904d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d490660"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d4907f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7fef8d48bb10" loc="48:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fef8d48bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fef8d48a020"/>
        <function-ref name="disable" scoped="" ref="0x7fef8d48a1b0"/>
        <function-ref name="captured" scoped="" ref="0x7fef8d48a340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fef8d48a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fef8d48e920" loc="43:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d48e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fef8d48eca0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fef8d48ee30"/>
        <function-ref name="splitRead" scoped="" ref="0x7fef8d48d020"/>
        <function-ref name="write" scoped="" ref="0x7fef8d48d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fef8d485020" loc="50:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fef8d485020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fef8de08d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d485c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7fef8d4753d0" loc="46:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7fef8d4753d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d475750"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d4758e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d475a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d475c00"/>
        <function-ref name="get" scoped="" ref="0x7fef8d475d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d474020"/>
        <function-ref name="set" scoped="" ref="0x7fef8d4741b0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d474340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7fef8d4787f0" loc="45:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fef8d4787f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fef8d476e60"/>
        <function-ref name="test" scoped="" ref="0x7fef8d4764e0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d47f4c0"/>
        <function-ref name="captured" scoped="" ref="0x7fef8d477020"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d477530"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d4769a0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d47f980"/>
        <function-ref name="start" scoped="" ref="0x7fef8d4779f0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d476020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7fef8d474680" loc="47:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7fef8d474680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d474a00"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d474b90"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d474d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d472020"/>
        <function-ref name="get" scoped="" ref="0x7fef8d4721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d472340"/>
        <function-ref name="set" scoped="" ref="0x7fef8d4724d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d472660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fef8d481680" loc="40:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fef8d481680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d481a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7fef8d4849c0" loc="39:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fef8d4849c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fef8d484d40"/>
        <function-ref name="disable" scoped="" ref="0x7fef8d481020"/>
        <function-ref name="captured" scoped="" ref="0x7fef8d4811b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fef8d481340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fef8d459c80" loc="84:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fef8d459c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d4620a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d462230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fef8d461840" loc="82:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fef8d461840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fef8d461bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d4641f0" loc="81:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d4641f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d464570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fef8d463020" loc="83:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d463020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fef8d4633a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fef8d463530"/>
        <function-ref name="splitRead" scoped="" ref="0x7fef8d4636c0"/>
        <function-ref name="write" scoped="" ref="0x7fef8d463850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fef8d462a60" loc="85:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fef8d462a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fef8d462de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fef8d460020"/>
        <function-ref name="request" scoped="" ref="0x7fef8d4601b0"/>
        <function-ref name="granted" scoped="" ref="0x7fef8d460340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fef8d4604d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fef8d454d70" loc="95:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8d454d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fef8d453180"/>
        <function-ref name="configure" scoped="" ref="0x7fef8d453310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7fef8d416de0" loc="294:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7fef8d416de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d415180"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d415310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fef8d454020" loc="94:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fef8d454020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d4543a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d454530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fef8d456e00" loc="92:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fef8d456e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fef8d4551c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d4567e0" loc="91:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d4567e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d456b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7fef8d438800" loc="98:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7fef8d438800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fef8d438b80"/>
        <function-ref name="sleep" scoped="" ref="0x7fef8d4361b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fef8d451020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fef8d436340"/>
        <function-ref name="initMaster" scoped="" ref="0x7fef8d451340"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fef8d4514d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fef8d451660"/>
        <function-ref name="read" scoped="" ref="0x7fef8d4517f0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fef8d451980"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fef8d451b10"/>
        <function-ref name="setClock" scoped="" ref="0x7fef8d451ca0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fef8d451e30"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fef8d450020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fef8d4502b0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fef8d450440"/>
        <function-ref name="write" scoped="" ref="0x7fef8d4505d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fef8d450760"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fef8d4508f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fef8d450a80"/>
        <function-ref name="getClock" scoped="" ref="0x7fef8d450c10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fef8d450da0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fef8d438d10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fef8d4511b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fef8d436020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fef8d455480" loc="93:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fef8d455480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fef8d455800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fef8d455990"/>
        <function-ref name="splitRead" scoped="" ref="0x7fef8d455b20"/>
        <function-ref name="write" scoped="" ref="0x7fef8d455cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fef8d436620" loc="99:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fef8d436620"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fef8d4369a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7fef8d3f7710" loc="76:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7fef8d3f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fef8d3f7a90"/>
        <function-ref name="sleep" scoped="" ref="0x7fef8d3f2020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fef8d3f7db0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fef8d3f21b0"/>
        <function-ref name="initMaster" scoped="" ref="0x7fef8d3f41b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fef8d3f4340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fef8d3f44d0"/>
        <function-ref name="read" scoped="" ref="0x7fef8d3f4660"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fef8d3f47f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fef8d3f4980"/>
        <function-ref name="setClock" scoped="" ref="0x7fef8d3f4b10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fef8d3f4ca0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fef8d3f4e30"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fef8d3f3120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fef8d3f32b0"/>
        <function-ref name="write" scoped="" ref="0x7fef8d3f3440"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fef8d3f35d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fef8d3f3760"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fef8d3f38f0"/>
        <function-ref name="getClock" scoped="" ref="0x7fef8d3f3a80"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fef8d3f3c10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fef8d3f7c20"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fef8d3f4020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fef8d3f3da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7fef8d3e7e30" loc="81:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7fef8d3e7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d3e61e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d3e6370"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d3e6500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d3e6690"/>
        <function-ref name="get" scoped="" ref="0x7fef8d3e6820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d3e69b0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d3e6b40"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d3e6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fef8d3ea970" loc="79:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fef8d3ea970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d3eacf0"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d3eae80"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d3e8030"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d3e81c0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d3e8350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d3e84e0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d3e8670"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d3e8800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fef8d3eb6c0" loc="78:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fef8d3eb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d3eba40"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d3ebbd0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d3ebd60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d3ea020"/>
        <function-ref name="get" scoped="" ref="0x7fef8d3ea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d3ea340"/>
        <function-ref name="set" scoped="" ref="0x7fef8d3ea4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d3ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fef8d3e9e00" loc="75:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fef8d3e9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8d3eb1c0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d3eb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7fef8d3e5060" loc="82:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7fef8d3e5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fef8d3e53e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7fef8d3ef6b0" loc="74:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7fef8d3ef6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fef8d3efa30"/>
        <function-ref name="sleep" scoped="" ref="0x7fef8d3ec020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fef8d3efd50"/>
        <function-ref name="dataReady" scoped="" ref="0x7fef8d3ec1b0"/>
        <function-ref name="initMaster" scoped="" ref="0x7fef8d3ee1b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fef8d3ee340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fef8d3ee4d0"/>
        <function-ref name="read" scoped="" ref="0x7fef8d3ee660"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fef8d3ee7f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fef8d3ee980"/>
        <function-ref name="setClock" scoped="" ref="0x7fef8d3eeb10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fef8d3eeca0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fef8d3eee30"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fef8d3ed120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fef8d3ed2b0"/>
        <function-ref name="write" scoped="" ref="0x7fef8d3ed440"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fef8d3ed5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fef8d3ed760"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fef8d3ed8f0"/>
        <function-ref name="getClock" scoped="" ref="0x7fef8d3eda80"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fef8d3edc10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fef8d3efbc0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fef8d3ee020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fef8d3edda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7fef8d3e8b20" loc="80:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7fef8d3e8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fef8d3e7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fef8d3e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fef8d3e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fef8d3e74d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d3e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fef8d3e77f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d3e7980"/>
        <function-ref name="clr" scoped="" ref="0x7fef8d3e7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fef8d39a6c0" loc="86:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fef8d39a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fef8d39aa60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fef8d39abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fef8d398730" loc="89:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8d398730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fef8d398ad0"/>
        <function-ref name="configure" scoped="" ref="0x7fef8d398c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fef8d39b900" loc="85:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fef8d39b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fef8d39bca0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fef8d39be30"/>
        <function-ref name="request" scoped="" ref="0x7fef8d39a020"/>
        <function-ref name="granted" scoped="" ref="0x7fef8d39a1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fef8d39a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fef8d39ae40" loc="87:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fef8d39ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fef8d3981e0"/>
        <function-ref name="userId" scoped="" ref="0x7fef8d398370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8c621660" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8c621660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8c6219e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fef8c621c70" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fef8c621c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fef8c620020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fef8c6201b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fef8c620340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fef8c6204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fef8c61d9e0" loc="52:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fef8c61d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fef8c61dd80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fef8c61c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fef8c61cb60" loc="56:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fef8c61cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fef8c61b020"/>
        <function-ref name="configure" scoped="" ref="0x7fef8c61b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fef8c61b440" loc="57:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fef8c61b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fef8c61b7c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fef8c61b950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fef8c61bae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fef8c61bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fef8c61fb90" loc="51:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fef8c61fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fef8c61d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fef8c61d1b0"/>
        <function-ref name="request" scoped="" ref="0x7fef8c61d340"/>
        <function-ref name="granted" scoped="" ref="0x7fef8c61d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fef8c61d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fef8c61c270" loc="53:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fef8c61c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fef8c61c5f0"/>
        <function-ref name="userId" scoped="" ref="0x7fef8c61c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fef8c61a020" loc="68:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fef8c61a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8c61a3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8c61a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fef8d387020" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8d387020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fef8d3873a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fef8d387530"/>
        <function-ref name="getControlA" scoped="" ref="0x7fef8d3876c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fef8d387850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fef8d3879e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fef8d387b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fef8d387d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7fef8d386020"/>
        <function-ref name="setControlC" scoped="" ref="0x7fef8d3861b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fef8d386340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fef8d386850" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fef8d386850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fef8d37ce60"/>
        <function-ref name="test" scoped="" ref="0x7fef8d37c4e0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d37f4c0"/>
        <function-ref name="captured" scoped="" ref="0x7fef8d37d020"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d37d530"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d37c9a0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d37f980"/>
        <function-ref name="start" scoped="" ref="0x7fef8d37d9f0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d37c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fef8d37bad0" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fef8d37bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8d3774e0"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d3781b0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d37a790"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d378670"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d3779a0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d37ac50"/>
        <function-ref name="start" scoped="" ref="0x7fef8d378b30"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d377020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8d391bf0" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8d391bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8d38a020"/>
        <function-ref name="test" scoped="" ref="0x7fef8d38b5d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d38e8a0"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8d38a4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8d38a9f0"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d38c760"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d38c2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d38ba90"/>
        <function-ref name="set" scoped="" ref="0x7fef8d38ed60"/>
        <function-ref name="start" scoped="" ref="0x7fef8d38cc20"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d38b110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fef8d36d2c0" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8d36d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fef8d36d640"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fef8d36d7d0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fef8d36d960"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fef8d36daf0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fef8d36dc80"/>
        <function-ref name="setControlB" scoped="" ref="0x7fef8d36de10"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fef8d36c020"/>
        <function-ref name="getControlB" scoped="" ref="0x7fef8d36c1b0"/>
        <function-ref name="setControlC" scoped="" ref="0x7fef8d36c340"/>
        <function-ref name="setControlA" scoped="" ref="0x7fef8d36c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7fef8d3675a0" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7fef8d3675a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8d363020"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d366c10"/>
        <function-ref name="get" scoped="" ref="0x7fef8d366240"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d365110"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d3634e0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d366700"/>
        <function-ref name="start" scoped="" ref="0x7fef8d3655d0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d365a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fef8d36c9e0" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fef8d36c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fef8d369e60"/>
        <function-ref name="test" scoped="" ref="0x7fef8d3694e0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d36b6b0"/>
        <function-ref name="captured" scoped="" ref="0x7fef8d36a0d0"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d36a5e0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d3699a0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d36bb70"/>
        <function-ref name="start" scoped="" ref="0x7fef8d36aaa0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d369020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7fef8d363ba0" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7fef8d363ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8d360550"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d3611f0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d3627f0"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d3616b0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d360a10"/>
        <function-ref name="set" scoped="" ref="0x7fef8d362cb0"/>
        <function-ref name="start" scoped="" ref="0x7fef8d361b70"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d360090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7fef8d35e120" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7fef8d35e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8d35ca90"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d35d770"/>
        <function-ref name="get" scoped="" ref="0x7fef8d35ed50"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d35dc30"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d35b020"/>
        <function-ref name="set" scoped="" ref="0x7fef8d35d260"/>
        <function-ref name="start" scoped="" ref="0x7fef8d35c110"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d35c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8d372020" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8d372020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8d36f350"/>
        <function-ref name="test" scoped="" ref="0x7fef8d3709a0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d372c50"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8d36f810"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8d36fd20"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d371b20"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d371660"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d370e60"/>
        <function-ref name="set" scoped="" ref="0x7fef8d371150"/>
        <function-ref name="start" scoped="" ref="0x7fef8d370020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d3704e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fef8d28e6e0" loc="30:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fef8d28e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fef8e0c89a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8d28b020"/>
        <function-ref name="fired" scoped="" ref="0x7fef8d28c020"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8d28c9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8d28c4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8d28b4e0"/>
        <function-ref name="start" scoped="" ref="0x7fef8d28d5b0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d28dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d2d8b50" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d2d8b50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fef8e1ba020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fef8e1ba020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d2cb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fef8d2cb410" loc="47:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8d2cb410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8d2c7810"/>
        <function-ref name="test" scoped="" ref="0x7fef8d2c9e60"/>
        <function-ref name="get" scoped="" ref="0x7fef8d2ca090"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8d2c7cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8d2c6260"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d2c9020"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d2caa60"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d2c7350"/>
        <function-ref name="set" scoped="" ref="0x7fef8d2ca550"/>
        <function-ref name="start" scoped="" ref="0x7fef8d2c94e0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d2c99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fef8c5e0e10" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fef8c5e0e10"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7fef8e1bbc00"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7fef8e1bbc00"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fef8e0c89a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8c5dc6e0"/>
        <function-ref name="fired" scoped="" ref="0x7fef8c5de6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fef8c5dc090"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8c5deb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fef8c5dcba0"/>
        <function-ref name="start" scoped="" ref="0x7fef8c5dfca0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8c5de1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7fef8c5d6570" loc="58:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fef8c5d6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8c5d2020"/>
        <function-ref name="fired" scoped="" ref="0x7fef8c5d5bc0"/>
        <function-ref name="get" scoped="" ref="0x7fef8c5d51f0"/>
        <function-ref name="reset" scoped="" ref="0x7fef8c5d40d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8c5d24e0"/>
        <function-ref name="set" scoped="" ref="0x7fef8c5d56b0"/>
        <function-ref name="start" scoped="" ref="0x7fef8c5d4590"/>
        <function-ref name="stop" scoped="" ref="0x7fef8c5d4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7fef8c5db140" loc="57:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fef8c5db140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8c5d74e0"/>
        <function-ref name="test" scoped="" ref="0x7fef8c5d9a90"/>
        <function-ref name="get" scoped="" ref="0x7fef8c5dbd70"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8c5d79a0"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8c5d6020"/>
        <function-ref name="reset" scoped="" ref="0x7fef8c5dac30"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8c5da770"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8c5d7020"/>
        <function-ref name="set" scoped="" ref="0x7fef8c5da260"/>
        <function-ref name="start" scoped="" ref="0x7fef8c5d9110"/>
        <function-ref name="stop" scoped="" ref="0x7fef8c5d95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fef8d2863a0" loc="39:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fef8d2863a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d285020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fef8d281200" loc="24:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8d281200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fef8e0c89a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d280090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8d280a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8d280550"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d27f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fef8d27b020" loc="45:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8d27b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fef8e0c89a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d27be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8d269800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8d269340"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d269cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fef8d268280" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8d268280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8d264810"/>
        <function-ref name="test" scoped="" ref="0x7fef8d265e60"/>
        <function-ref name="get" scoped="" ref="0x7fef8d267020"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8d264cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8d263260"/>
        <function-ref name="reset" scoped="" ref="0x7fef8d265020"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d2679f0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8d264350"/>
        <function-ref name="set" scoped="" ref="0x7fef8d2674e0"/>
        <function-ref name="start" scoped="" ref="0x7fef8d2654e0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d2659a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fef8d2420f0" loc="63:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7fef8d2420f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d240020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8d2409a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8d2404e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d240e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fef8d25fcf0" loc="62:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8d25fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d244b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8d243550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8d243090"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d243a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fef8d23eb60" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fef8d23eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d23d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fef8d23de40" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8d23de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d23bca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8d23a670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8d23a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d23ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fef8d2339a0" loc="36:/opt/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fef8d2339a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fef8d2307e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8d1c0970" loc="14:./SpecialSerialP/FlushBufferToSerialC.nc">
      <component-ref qname="FlushBufferToSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8d1c0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8d1c0cf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8d1c0e80"/>
        <function-ref name="start" scoped="" ref="0x7fef8d1bf030"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d1bf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushUint16t" ref="0x7fef8d1c7d20" loc="12:./SpecialSerialP/FlushBufferToSerialC.nc">
      <component-ref qname="FlushBufferToSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushUint16t" scoped="" ref="0x7fef8d1c7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1c6940"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1c4a20"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1c4110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushUint8t_2" ref="0x7fef8d1ca5e0" loc="11:./SpecialSerialP/FlushBufferToSerialC.nc">
      <component-ref qname="FlushBufferToSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushUint8t_2" scoped="" ref="0x7fef8d1ca5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1c9200"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1c72e0"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1c9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushUint32t" ref="0x7fef8d1c3470" loc="13:./SpecialSerialP/FlushBufferToSerialC.nc">
      <component-ref qname="FlushBufferToSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushUint32t" scoped="" ref="0x7fef8d1c3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1c1090"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1c0170"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1c1820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushFloat" ref="0x7fef8d1cf750" loc="9:./SpecialSerialP/FlushBufferToSerialC.nc">
      <component-ref qname="FlushBufferToSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushFloat" scoped="" ref="0x7fef8d1cf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-float cname="float" size="I:4" alignment="I:1"></type-float>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1d5390"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1ce450"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1d5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushUint8t" ref="0x7fef8d1cee50" loc="10:./SpecialSerialP/FlushBufferToSerialC.nc">
      <component-ref qname="FlushBufferToSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushUint8t" scoped="" ref="0x7fef8d1cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1cda80"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1cbb70"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1cb260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushUint16t" ref="0x7fef8d1a9830" loc="17:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushUint16t" scoped="" ref="0x7fef8d1a9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1a8480"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1a7580"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1a8c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startS" ref="0x7fef8d1a0e60" loc="34:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startS" scoped="" ref="0x7fef8d1a0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d19f210"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d19f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doneF" ref="0x7fef8d177800" loc="168:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doneF" scoped="" ref="0x7fef8d177800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d177b80"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d177d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushUint8t_2" ref="0x7fef8d1ac150" loc="16:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushUint8t_2" scoped="" ref="0x7fef8d1ac150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1acd40"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1abe10"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1ab500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushUint32t" ref="0x7fef8d1a5020" loc="18:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushUint32t" scoped="" ref="0x7fef8d1a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1a5c10"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1a4ce0"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1a43d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushFloat" ref="0x7fef8d1b9210" loc="14:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushFloat" scoped="" ref="0x7fef8d1b9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-float cname="float" size="I:4" alignment="I:1"></type-float>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1b9e00"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1b1020"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1b65e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlushUint8t" ref="0x7fef8d1b19e0" loc="15:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushUint8t" scoped="" ref="0x7fef8d1b19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8d1af670"/>
        <function-ref name="done" scoped="" ref="0x7fef8d1ae750"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8d1afe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doneS" ref="0x7fef8d179a00" loc="163:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doneS" scoped="" ref="0x7fef8d179a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d179d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d178020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fef8d1b24a0" loc="10:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7fef8d1b24a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fef8d1b2820"/>
        <function-ref name="nextByte" scoped="" ref="0x7fef8d1b29b0"/>
        <function-ref name="startSend" scoped="" ref="0x7fef8d1b2b40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fef8d1b2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fef8d1b77b0" loc="9:./SpecialSerialP/FlushBufferToSerialP.nc">
      <component-ref qname="FlushBufferToSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fef8d1b77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fef8d1b7b30"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fef8d1b7cc0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fef8d1b7e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fef8d131920" loc="68:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fef8d131920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fef8d131ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fef8d131e30"/>
        <function-ref name="start" scoped="" ref="0x7fef8d130020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d1301b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fef8d0d26e0" loc="334:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7fef8d0d26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d0d2a60"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d0d2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fef8d12cb80" loc="76:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7fef8d12cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8d125020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d1251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fef8d109660" loc="193:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7fef8d109660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d1099e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d109b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d1312d0" loc="67:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d1312d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d131650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fef8d122870" loc="77:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7fef8d122870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fef8d122bf0"/>
        <function-ref name="flush" scoped="" ref="0x7fef8d122d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fef8d0d5c70" loc="324:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7fef8d0d5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d0d4020"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d0d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fef8d127410" loc="74:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fef8d127410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fef8d127790"/>
        <function-ref name="resetSend" scoped="" ref="0x7fef8d127920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fef8d127ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fef8d127c40"/>
        <function-ref name="putData" scoped="" ref="0x7fef8d127dd0"/>
        <function-ref name="putDone" scoped="" ref="0x7fef8d12d020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fef8d12d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fef8d12d430" loc="75:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fef8d12d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fef8d12d7b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fef8d12d940"/>
        <function-ref name="led1On" scoped="" ref="0x7fef8d12dad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fef8d12dc60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fef8d12ddf0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d12c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fef8d12c1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fef8d12c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d12c340"/>
        <function-ref name="led0On" scoped="" ref="0x7fef8d12c4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fef8d12c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fef8d0cea00" loc="343:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fef8d0cea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d0ced80"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d0cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fef8d130490" loc="69:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7fef8d130490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fef8d130810"/>
        <function-ref name="nextByte" scoped="" ref="0x7fef8d1309a0"/>
        <function-ref name="startSend" scoped="" ref="0x7fef8d130b30"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fef8d130cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fef8d12e020" loc="70:./SpecialSerialP/Serial2P.nc">
      <component-ref qname="Serial2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fef8d12e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fef8d12e3a0"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fef8d12e530"/>
        <function-ref name="endPacket" scoped="" ref="0x7fef8d12e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="delimiterDummy" ref="0x7fef8d054380" loc="98:./SpecialSerialP/HdlcTranslate2C.nc">
      <component-ref qname="HdlcTranslate2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="delimiterDummy" scoped="" ref="0x7fef8d054380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8d054700"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8d054890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fef8d05e3d0" loc="50:./SpecialSerialP/HdlcTranslate2C.nc">
      <component-ref qname="HdlcTranslate2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7fef8d05e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d05e750"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fef8d05e8e0"/>
        <function-ref name="receive" scoped="" ref="0x7fef8d05ea70"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fef8d05ec00"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fef8d05ed90"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fef8d06a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d06a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fef8d06e430" loc="48:./SpecialSerialP/HdlcTranslate2C.nc">
      <component-ref qname="HdlcTranslate2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fef8d06e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fef8d06e7b0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fef8d06e940"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fef8d06ead0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fef8d06ec60"/>
        <function-ref name="putData" scoped="" ref="0x7fef8d06edf0"/>
        <function-ref name="putDone" scoped="" ref="0x7fef8d06b020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fef8d06b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fef8d06a430" loc="51:./SpecialSerialP/HdlcTranslate2C.nc">
      <component-ref qname="HdlcTranslate2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fef8d06a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fef8d06a7b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fef8d06a940"/>
        <function-ref name="led1On" scoped="" ref="0x7fef8d06aad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fef8d06ac60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fef8d06adf0"/>
        <function-ref name="get" scoped="" ref="0x7fef8d069020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fef8d0691b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fef8d0697f0"/>
        <function-ref name="set" scoped="" ref="0x7fef8d069340"/>
        <function-ref name="led0On" scoped="" ref="0x7fef8d0694d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fef8d069660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fef8d040020" loc="42:./SpecialSerialP/PlatformSerial2C.nc">
      <component-ref qname="PlatformSerial2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7fef8d040020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d0403a0"/>
        <function-ref name="receive" scoped="" ref="0x7fef8d040530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fef8d044c70" loc="41:./SpecialSerialP/PlatformSerial2C.nc">
      <component-ref qname="PlatformSerial2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7fef8d044c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d041020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fef8d0411b0"/>
        <function-ref name="receive" scoped="" ref="0x7fef8d041340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fef8d0414d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fef8d041660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fef8d0417f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d041980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fef8d044460" loc="40:./SpecialSerialP/PlatformSerial2C.nc">
      <component-ref qname="PlatformSerial2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fef8d044460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8d0447e0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d044970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fef8d03a9e0" loc="41:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7fef8d03a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d03ad60"/>
        <function-ref name="receive" scoped="" ref="0x7fef8d039020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fef8d039320" loc="42:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7fef8d039320"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8d0396a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fef8d039830"/>
        <function-ref name="receive" scoped="" ref="0x7fef8d0399c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fef8d039b50"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fef8d039ce0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fef8d039e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8d038030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fef8d0385f0" loc="43:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8d0385f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8d037430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8d037db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8d0378f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8d0352a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fef8d03a1e0" loc="40:/opt/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fef8d03a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8d03a560"/>
        <function-ref name="stop" scoped="" ref="0x7fef8d03a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fef8cff02b0" loc="50:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7fef8cff02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8cff0630"/>
        <function-ref name="receive" scoped="" ref="0x7fef8cff07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7fef8cfefac0" loc="53:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7fef8cfefac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfefe40"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8d033440" loc="48:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8d033440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8d0337c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fef8cff0a50" loc="51:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7fef8cff0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8cff0dd0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fef8cfef020"/>
        <function-ref name="receive" scoped="" ref="0x7fef8cfef1b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fef8cfef340"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fef8cfef4d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fef8cfef660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8cfef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fef8cfec1d0" loc="56:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8cfec1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8cfea020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8cfea9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8cfea4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8cfeae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7fef8cfeead0" loc="55:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7fef8cfeead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fef8cfeee50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fef8cfed020"/>
        <function-ref name="rxDone" scoped="" ref="0x7fef8cfed1b0"/>
        <function-ref name="txDone" scoped="" ref="0x7fef8cfed340"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fef8cfed4d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fef8cfed660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fef8cfed7f0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fef8cfed980"/>
        <function-ref name="tx" scoped="" ref="0x7fef8cfedb10"/>
        <function-ref name="rx" scoped="" ref="0x7fef8cfedca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fef8d033a50" loc="49:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fef8d033a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8d033dd0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cff0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7fef8cfee2f0" loc="54:/opt/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7fef8cfee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfee670"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfee800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7fef8cfcdc40" loc="49:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7fef8cfcdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fef8cfcc020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fef8cfcc1b0"/>
        <function-ref name="rxDone" scoped="" ref="0x7fef8cfcc340"/>
        <function-ref name="txDone" scoped="" ref="0x7fef8cfcc4d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fef8cfcc660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fef8cfcc7f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fef8cfcc980"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fef8cfccb10"/>
        <function-ref name="tx" scoped="" ref="0x7fef8cfccca0"/>
        <function-ref name="rx" scoped="" ref="0x7fef8cfcce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7fef8cfca3a0" loc="53:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7fef8cfca3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fef8cfca720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fef8cfca8b0"/>
        <function-ref name="rxDone" scoped="" ref="0x7fef8cfcaa40"/>
        <function-ref name="txDone" scoped="" ref="0x7fef8cfcabd0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fef8cfcad60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fef8cfc9020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fef8cfc91b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fef8cfc9340"/>
        <function-ref name="tx" scoped="" ref="0x7fef8cfc94d0"/>
        <function-ref name="rx" scoped="" ref="0x7fef8cfc9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7fef8cfcd3b0" loc="48:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7fef8cfcd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfcd730"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfcd8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7fef8cfcb200" loc="51:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7fef8cfcb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfcb580"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfcb710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7fef8cfcbaa0" loc="52:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7fef8cfcbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfcbe20"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7fef8cfceaa0" loc="47:/opt/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7fef8cfceaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfcee20"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7fef8cfc63f0" loc="114:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7fef8cfc63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8cfc6770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7fef8cfc0e50" loc="117:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7fef8cfc0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fef8cfbf210"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fef8cfbf3a0"/>
        <function-ref name="rxDone" scoped="" ref="0x7fef8cfbf530"/>
        <function-ref name="txDone" scoped="" ref="0x7fef8cfbf6c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fef8cfbf850"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fef8cfbf9e0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fef8cfbfb70"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fef8cfbfd00"/>
        <function-ref name="tx" scoped="" ref="0x7fef8cfbe020"/>
        <function-ref name="rx" scoped="" ref="0x7fef8cfbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7fef8cfbe510" loc="119:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7fef8cfbe510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8cfbe890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7fef8cfbde50" loc="122:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7fef8cfbde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fef8cfbb210"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fef8cfbb3a0"/>
        <function-ref name="rxDone" scoped="" ref="0x7fef8cfbb530"/>
        <function-ref name="txDone" scoped="" ref="0x7fef8cfbb6c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fef8cfbb850"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fef8cfbb9e0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fef8cfbbb70"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fef8cfbbd00"/>
        <function-ref name="tx" scoped="" ref="0x7fef8cfba020"/>
        <function-ref name="rx" scoped="" ref="0x7fef8cfba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7fef8cfc0580" loc="116:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7fef8cfc0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfc0900"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfc0a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7fef8cfbec60" loc="120:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7fef8cfbec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfbd020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7fef8cfbd580" loc="121:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7fef8cfbd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfbd900"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfbda90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7fef8cfba4e0" loc="124:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fef8cfba4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fef8cfba860"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fef8cfba9f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fef8cfbab80"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fef8cfbad10"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fef8cfb9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fef8cfb9340" loc="125:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fef8cfb9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fef8cfb96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7fef8cfc6b40" loc="115:/opt/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7fef8cfc6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cfc0020"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cfc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fef8cf586e0" loc="24:/opt/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8cf586e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8cf575b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8cf56020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8cf57a70"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8cf564e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fef8cf53780" loc="24:/opt/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8cf53780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TThree" ref="0x7fef8e0c8d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8cf525d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8cf50020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8cf52a90"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8cf504e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fef8cf47a90" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8cf47a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fef8cf47e10"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fef8cf46020"/>
        <function-ref name="getControlA" scoped="" ref="0x7fef8cf461b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fef8cf46340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fef8cf464d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fef8cf46660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fef8cf467f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7fef8cf46980"/>
        <function-ref name="setControlC" scoped="" ref="0x7fef8cf46b10"/>
        <function-ref name="setControlA" scoped="" ref="0x7fef8cf46ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fef8cf451f0" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fef8cf451f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fef8cf41590"/>
        <function-ref name="test" scoped="" ref="0x7fef8cf42be0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cf45e20"/>
        <function-ref name="captured" scoped="" ref="0x7fef8cf44850"/>
        <function-ref name="reset" scoped="" ref="0x7fef8cf44d60"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8cf410d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cf44340"/>
        <function-ref name="start" scoped="" ref="0x7fef8cf42260"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cf42720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fef8cf40210" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fef8cf40210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8cf3dba0"/>
        <function-ref name="fired" scoped="" ref="0x7fef8cf3f850"/>
        <function-ref name="get" scoped="" ref="0x7fef8cf40e40"/>
        <function-ref name="reset" scoped="" ref="0x7fef8cf3fd10"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8cf3c090"/>
        <function-ref name="set" scoped="" ref="0x7fef8cf3f340"/>
        <function-ref name="start" scoped="" ref="0x7fef8cf3d220"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cf3d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8cf4c650" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8cf4c650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8cf48a90"/>
        <function-ref name="test" scoped="" ref="0x7fef8cf48110"/>
        <function-ref name="get" scoped="" ref="0x7fef8cf4b3d0"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8cf47020"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8cf47530"/>
        <function-ref name="reset" scoped="" ref="0x7fef8cf4a2a0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8cf4bda0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8cf485d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cf4b890"/>
        <function-ref name="start" scoped="" ref="0x7fef8cf4a760"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cf4ac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fef8cf34a90" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fef8cf34a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fef8cf34e10"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fef8cf32020"/>
        <function-ref name="getControlA" scoped="" ref="0x7fef8cf321b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fef8cf32340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fef8cf324d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fef8cf32660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fef8cf327f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7fef8cf32980"/>
        <function-ref name="setControlC" scoped="" ref="0x7fef8cf32b10"/>
        <function-ref name="setControlA" scoped="" ref="0x7fef8cf32ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7fef8cf2dca0" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7fef8cf2dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8cf2a670"/>
        <function-ref name="fired" scoped="" ref="0x7fef8cf2b320"/>
        <function-ref name="get" scoped="" ref="0x7fef8cf2c900"/>
        <function-ref name="reset" scoped="" ref="0x7fef8cf2b7e0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8cf2ab30"/>
        <function-ref name="set" scoped="" ref="0x7fef8cf2cdc0"/>
        <function-ref name="start" scoped="" ref="0x7fef8cf2bca0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cf2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fef8cf311f0" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fef8cf311f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fef8cf2d590"/>
        <function-ref name="test" scoped="" ref="0x7fef8cf2fbe0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cf31e20"/>
        <function-ref name="captured" scoped="" ref="0x7fef8cf30850"/>
        <function-ref name="reset" scoped="" ref="0x7fef8cf30d60"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8cf2d0d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cf30340"/>
        <function-ref name="start" scoped="" ref="0x7fef8cf2f260"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cf2f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7fef8cf28240" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7fef8cf28240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8cf26ba0"/>
        <function-ref name="fired" scoped="" ref="0x7fef8cf27870"/>
        <function-ref name="get" scoped="" ref="0x7fef8cf28e70"/>
        <function-ref name="reset" scoped="" ref="0x7fef8cf27d30"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8cf25090"/>
        <function-ref name="set" scoped="" ref="0x7fef8cf27360"/>
        <function-ref name="start" scoped="" ref="0x7fef8cf26220"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cf266e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7fef8cf25750" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7fef8cf25750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fef8cf21110"/>
        <function-ref name="fired" scoped="" ref="0x7fef8cf23da0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cf233d0"/>
        <function-ref name="reset" scoped="" ref="0x7fef8cf222a0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8cf215d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cf23890"/>
        <function-ref name="start" scoped="" ref="0x7fef8cf22760"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cf22c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8cf39620" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8cf39620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8cf35a90"/>
        <function-ref name="test" scoped="" ref="0x7fef8cf35110"/>
        <function-ref name="get" scoped="" ref="0x7fef8cf373d0"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8cf34020"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8cf34530"/>
        <function-ref name="reset" scoped="" ref="0x7fef8cf362a0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8cf37da0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8cf355d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8cf37890"/>
        <function-ref name="start" scoped="" ref="0x7fef8cf36760"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cf36c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8cea7c60" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8cea7c60"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fef8e1ba020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fef8e1ba020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8cea6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fef8cea6410" loc="47:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8cea6410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8cea2810"/>
        <function-ref name="test" scoped="" ref="0x7fef8cea3e60"/>
        <function-ref name="get" scoped="" ref="0x7fef8cea4090"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8cea2cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8cea0260"/>
        <function-ref name="reset" scoped="" ref="0x7fef8cea3020"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8cea4a60"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8cea2350"/>
        <function-ref name="set" scoped="" ref="0x7fef8cea4550"/>
        <function-ref name="start" scoped="" ref="0x7fef8cea34e0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cea39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fef8ce9e3c0" loc="45:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8ce9e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TThree" ref="0x7fef8e0c8d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8ce9d240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8ce9dbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8ce9d700"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8ce9b0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fef8ce9b660" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8ce9b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fef8ce97a90"/>
        <function-ref name="test" scoped="" ref="0x7fef8ce97110"/>
        <function-ref name="get" scoped="" ref="0x7fef8ce9a3d0"/>
        <function-ref name="setScale" scoped="" ref="0x7fef8ce96020"/>
        <function-ref name="getScale" scoped="" ref="0x7fef8ce96530"/>
        <function-ref name="reset" scoped="" ref="0x7fef8ce992a0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8ce9ada0"/>
        <function-ref name="isOn" scoped="" ref="0x7fef8ce975d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8ce9a890"/>
        <function-ref name="start" scoped="" ref="0x7fef8ce99760"/>
        <function-ref name="stop" scoped="" ref="0x7fef8ce99c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fef8ce8f0f0" loc="63:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7fef8ce8f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TThree" ref="0x7fef8e0c8d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8ce8d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8ce8d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8ce8d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8ce8de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fef8ce93cd0" loc="62:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fef8ce93cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10c1a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fef8e10c510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fef8ce91b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fef8ce90550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fef8ce90090"/>
        <function-ref name="overflow" scoped="" ref="0x7fef8ce90a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8cdf61b0" loc="49:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8cdf61b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8cdf6530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cdf66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cdf6850"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8cdf69e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8cdf6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8cdf6dc0" loc="50:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8cdf6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8cdf5180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8cdf5310"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cdf54a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cdf5630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8cdf57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8cdf5a10" loc="51:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8cdf5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8cdf5d90"/>
        <function-ref name="source" scoped="" ref="0x7fef8cdf4020"/>
        <function-ref name="address" scoped="" ref="0x7fef8cdf41b0"/>
        <function-ref name="destination" scoped="" ref="0x7fef8cdf4340"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8cdf44d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8cdf4660"/>
        <function-ref name="type" scoped="" ref="0x7fef8cdf47f0"/>
        <function-ref name="setType" scoped="" ref="0x7fef8cdf4980"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8cdf4b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8cdf4ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8cdf4e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fef8cdf3120" loc="52:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fef8cdf3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8cdf34a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8cdf3630"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8cdf37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8c55e960" loc="49:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8c55e960"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c55ece0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c55ee70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c55d030"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c55d1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c55d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8c55d5a0" loc="50:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8c55d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c55d920"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8c55dab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c55dc40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c55ddd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8c55b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8c55b270" loc="51:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8c55b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8c55b5f0"/>
        <function-ref name="source" scoped="" ref="0x7fef8c55b780"/>
        <function-ref name="address" scoped="" ref="0x7fef8c55b910"/>
        <function-ref name="destination" scoped="" ref="0x7fef8c55baa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8c55bc30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8c55bdc0"/>
        <function-ref name="type" scoped="" ref="0x7fef8c55a020"/>
        <function-ref name="setType" scoped="" ref="0x7fef8c55a1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8c55a340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8c55a4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8c55a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fef8c55a8f0" loc="52:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fef8c55a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8c55ac70"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8c55ae00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8c559020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8c550830" loc="44:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8c550830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c550bb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c550d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c54f020"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c54f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c54f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fef8c54f5f0" loc="46:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8c54f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c54f970"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c54fb00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c54fc90"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c54fe20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c54e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fef8c54e270" loc="47:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8c54e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8c54e5f0"/>
        <function-ref name="source" scoped="" ref="0x7fef8c54e780"/>
        <function-ref name="address" scoped="" ref="0x7fef8c54e910"/>
        <function-ref name="destination" scoped="" ref="0x7fef8c54eaa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8c54ec30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8c54edc0"/>
        <function-ref name="type" scoped="" ref="0x7fef8c54d020"/>
        <function-ref name="setType" scoped="" ref="0x7fef8c54d1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8c54d340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8c54d4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8c54d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fef8ce562c0" loc="43:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8ce562c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8ce56640"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8ce567d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8ce56960"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8ce56af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8ce56c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fef8ce0ba40" loc="48:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8ce0ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8ce0bde0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8ce0a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8ce0a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8ce0a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8ce0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fef8ce0cb00" loc="46:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8ce0cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8ce0b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8ce0b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8ce0b340"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8ce0b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8ce0b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fef8ce09d60" loc="50:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8ce09d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8ce08180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8ce08310"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8ce084a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8ce08630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8ce087c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fef8ce08a90" loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7fef8ce08a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8ce08e10"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8ce07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fef8ce072f0" loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7fef8ce072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8ce07670"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8ce07800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fef8ce0a720" loc="49:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8ce0a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8ce0aaa0"/>
        <function-ref name="source" scoped="" ref="0x7fef8ce0ac30"/>
        <function-ref name="address" scoped="" ref="0x7fef8ce0adc0"/>
        <function-ref name="destination" scoped="" ref="0x7fef8ce09020"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8ce091b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8ce09340"/>
        <function-ref name="type" scoped="" ref="0x7fef8ce094d0"/>
        <function-ref name="setType" scoped="" ref="0x7fef8ce09660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8ce097f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8ce09980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8ce09b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8cde92f0" loc="46:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.CReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8cde92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8cde9670"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8cde9800"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cde9990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cde9b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8cde9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8cdeacc0" loc="45:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.CReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8cdeacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8cde90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8cde8020" loc="47:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.CReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8cde8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8cde83a0"/>
        <function-ref name="source" scoped="" ref="0x7fef8cde8530"/>
        <function-ref name="address" scoped="" ref="0x7fef8cde86c0"/>
        <function-ref name="destination" scoped="" ref="0x7fef8cde8850"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8cde89e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8cde8b70"/>
        <function-ref name="type" scoped="" ref="0x7fef8cde8d00"/>
        <function-ref name="setType" scoped="" ref="0x7fef8cde7020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8cde71b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8cde7340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8cde74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fef8cde6bd0" loc="6:CraneCommunicationP.nc">
      <component-ref qname="CraneCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8cde6bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8cde2020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8cde21b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cde2340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cde24d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8cde2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fef8cde2930" loc="7:CraneCommunicationP.nc">
      <component-ref qname="CraneCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8cde2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8cde2cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cde2e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cde1020"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8cde11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8cde1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fef8cde1620" loc="8:CraneCommunicationP.nc">
      <component-ref qname="CraneCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8cde1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8cde19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CraneLink" ref="0x7fef8cddcdf0" loc="9:CraneCommunicationP.nc">
      <component-ref qname="CraneCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CraneLink" scoped="" ref="0x7fef8cddcdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CraneLink"/>
      </instance>
      <interface-functions>
        <function-ref name="newCommand" scoped="" ref="0x7fef8cde01c0"/>
        <function-ref name="newPosition" scoped="" ref="0x7fef8cde0350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8cdcb650" loc="49:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8cdcb650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8cdcb9d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cdcbb60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cdcbcf0"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8cdcbe80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8cdca030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8cdca280" loc="50:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8cdca280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8cdca600"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8cdca790"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cdca920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cdcaab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8cdcac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8cdc8020" loc="51:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8cdc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8cdc83a0"/>
        <function-ref name="source" scoped="" ref="0x7fef8cdc8530"/>
        <function-ref name="address" scoped="" ref="0x7fef8cdc86c0"/>
        <function-ref name="destination" scoped="" ref="0x7fef8cdc8850"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8cdc89e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8cdc8b70"/>
        <function-ref name="type" scoped="" ref="0x7fef8cdc8d00"/>
        <function-ref name="setType" scoped="" ref="0x7fef8cdc7020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8cdc71b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8cdc7340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8cdc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fef8cdc7760" loc="52:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fef8cdc7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8cdc7ae0"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8cdc7c70"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8cdc7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8c4ff770" loc="49:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8c4ff770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c4ffaf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c4ffc80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c4ffe10"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c4fe020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c4fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8c4fe400" loc="50:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8c4fe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8c4fe780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8c4fe910"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c4feaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c4fec30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8c4fedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8c4fd060" loc="51:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8c4fd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8c4fd3e0"/>
        <function-ref name="source" scoped="" ref="0x7fef8c4fd570"/>
        <function-ref name="address" scoped="" ref="0x7fef8c4fd700"/>
        <function-ref name="destination" scoped="" ref="0x7fef8c4fd890"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8c4fda20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8c4fdbb0"/>
        <function-ref name="type" scoped="" ref="0x7fef8c4fdd40"/>
        <function-ref name="setType" scoped="" ref="0x7fef8c4fc020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8c4fc1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8c4fc340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8c4fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fef8c4fc760" loc="52:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fef8c4fc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fef8c4fcae0"/>
        <function-ref name="noAck" scoped="" ref="0x7fef8c4fcc70"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fef8c4fce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fef8c4f2690" loc="44:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8c4f2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c4f2a10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c4f2ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c4f2d30"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c4f1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c4f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fef8c4f1460" loc="46:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fef8c4f1460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8c4f17e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8c4f1970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8c4f1b00"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8c4f1c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8c4f1e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fef8c4f00e0" loc="47:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8c4f00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8c4f0460"/>
        <function-ref name="source" scoped="" ref="0x7fef8c4f05f0"/>
        <function-ref name="address" scoped="" ref="0x7fef8c4f0780"/>
        <function-ref name="destination" scoped="" ref="0x7fef8c4f0910"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8c4f0aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8c4f0c30"/>
        <function-ref name="type" scoped="" ref="0x7fef8c4f0dc0"/>
        <function-ref name="setType" scoped="" ref="0x7fef8c4ef020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8c4ef1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8c4ef340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8c4ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fef8cdc4710" loc="46:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.SReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8cdc4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8cdc4a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8cdc4c20"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cdc4db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cdc3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8cdc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fef8cdc4140" loc="45:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.SReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8cdc4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8cdc44c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fef8cdc3400" loc="47:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.SReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fef8cdc3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fef8cdc3780"/>
        <function-ref name="source" scoped="" ref="0x7fef8cdc3910"/>
        <function-ref name="address" scoped="" ref="0x7fef8cdc3aa0"/>
        <function-ref name="destination" scoped="" ref="0x7fef8cdc3c30"/>
        <function-ref name="setSource" scoped="" ref="0x7fef8cdc3dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fef8cdc2020"/>
        <function-ref name="type" scoped="" ref="0x7fef8cdc21b0"/>
        <function-ref name="setType" scoped="" ref="0x7fef8cdc2340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fef8cdc24d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fef8cdc2660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fef8cdc27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendResponse" ref="0x7fef8cdad380" loc="31:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendResponse" scoped="" ref="0x7fef8cdad380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8cdad700"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8cdad890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fef8cdbd610" loc="7:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fef8cdbd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fef8cdbd990"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fef8cdbdb20"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cdbdcb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cdbde40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fef8cdbc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fef8cdbc2f0" loc="8:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fef8cdbc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fef8cdbc670"/>
        <function-ref name="getPayload" scoped="" ref="0x7fef8cdbc800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fef8cdbc990"/>
        <function-ref name="cancel" scoped="" ref="0x7fef8cdbcb20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fef8cdbccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fef8cdbb020" loc="9:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fef8cdbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fef8cdbb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fef8cdc1e50" loc="6:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fef8cdc1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fef8cdbe210"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fef8cdbe3a0"/>
        <function-ref name="led1On" scoped="" ref="0x7fef8cdbe530"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fef8cdbe6c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fef8cdbe850"/>
        <function-ref name="get" scoped="" ref="0x7fef8cdbe9e0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fef8cdbeb70"/>
        <function-ref name="led2Off" scoped="" ref="0x7fef8cdbd340"/>
        <function-ref name="set" scoped="" ref="0x7fef8cdbed00"/>
        <function-ref name="led0On" scoped="" ref="0x7fef8cdbd020"/>
        <function-ref name="led2On" scoped="" ref="0x7fef8cdbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SysLink2" ref="0x7fef8cdba080" loc="10:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SysLink2" scoped="" ref="0x7fef8cdba080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SysLink2"/>
      </instance>
      <interface-functions>
        <function-ref name="getAllCargo" scoped="" ref="0x7fef8cdba400"/>
        <function-ref name="getShipInfo" scoped="" ref="0x7fef8cdba590"/>
        <function-ref name="getAllShips" scoped="" ref="0x7fef8cdba720"/>
        <function-ref name="registerNewShip" scoped="" ref="0x7fef8cdba8b0"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7fef8cdbaa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySerial" ref="0x7fef8cd549c0" loc="60:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySerial" scoped="" ref="0x7fef8cd549c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8cd54d40"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8cd53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KnowledgeLink" ref="0x7fef8cd63960" loc="21:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KnowledgeLink" scoped="" ref="0x7fef8cd63960"/></type-interface>
      <instance>
        <interfacedef-ref qname="KnowledgeLink"/>
      </instance>
      <interface-functions>
        <function-ref name="isCargoHere" scoped="" ref="0x7fef8cd63ce0"/>
        <function-ref name="getID" scoped="" ref="0x7fef8cd63e70"/>
        <function-ref name="getCraneLoc" scoped="" ref="0x7fef8cd69030"/>
        <function-ref name="cargoPlacedTo" scoped="" ref="0x7fef8cd691c0"/>
        <function-ref name="getIndex" scoped="" ref="0x7fef8cd69350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fef8cd70160" loc="15:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fef8cd70160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fef8cd704e0"/>
        <function-ref name="rand32" scoped="" ref="0x7fef8cd70670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialLink" ref="0x7fef8cd6e020" loc="17:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialLink" scoped="" ref="0x7fef8cd6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8cd6ec10"/>
        <function-ref name="done" scoped="" ref="0x7fef8cd6dce0"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8cd6d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7fef8cd796d0" loc="13:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x7fef8cd796d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8cd74c40"/>
        <function-ref name="fired" scoped="" ref="0x7fef8cd751e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fef8cd74020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fef8cd75ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fef8cd72590"/>
        <function-ref name="gett0" scoped="" ref="0x7fef8cd72110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8cd75660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fef8cd76390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fef8cd74630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fef8cd76860"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cd76d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fef8cd6b4e0" loc="19:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fef8cd6b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8cd6b860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Seed" ref="0x7fef8cd70b80" loc="16:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Seed" scoped="" ref="0x7fef8cd70b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8cd6f790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSerialGlobalTime" ref="0x7fef8cd569f0" loc="58:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendSerialGlobalTime" scoped="" ref="0x7fef8cd569f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8cd56d70"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8cd55020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fef8cd729f0" loc="14:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fef8cd729f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fef8cd72d70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fef8cd71020"/>
        <function-ref name="led1On" scoped="" ref="0x7fef8cd711b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fef8cd71340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fef8cd714d0"/>
        <function-ref name="get" scoped="" ref="0x7fef8cd71660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fef8cd717f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fef8cd71e30"/>
        <function-ref name="set" scoped="" ref="0x7fef8cd71980"/>
        <function-ref name="led0On" scoped="" ref="0x7fef8cd71b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fef8cd71ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSerialCargoLoaded" ref="0x7fef8cd55a40" loc="59:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendSerialCargoLoaded" scoped="" ref="0x7fef8cd55a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8cd55dc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8cd54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SysLink2" ref="0x7fef8cd6bb50" loc="20:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SysLink2" scoped="" ref="0x7fef8cd6bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SysLink2"/>
      </instance>
      <interface-functions>
        <function-ref name="getAllCargo" scoped="" ref="0x7fef8cd6a020"/>
        <function-ref name="getShipInfo" scoped="" ref="0x7fef8cd6a1b0"/>
        <function-ref name="getAllShips" scoped="" ref="0x7fef8cd6a340"/>
        <function-ref name="registerNewShip" scoped="" ref="0x7fef8cd6a4d0"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x7fef8cd6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fef8cd69650" loc="22:ShipStateP.nc">
      <component-ref qname="ShipStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fef8cd69650"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8cd699d0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cd69b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8cce1450" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="shipmainC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8cce1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8ccdda20"/>
        <function-ref name="fired" scoped="" ref="0x7fef8ccde020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fef8ccdeda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fef8ccde920"/>
        <function-ref name="getdt" scoped="" ref="0x7fef8ccdc4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fef8ccdc020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8ccde4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fef8cce0090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fef8ccdd410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fef8cce0560"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cce0a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSerial" ref="0x7fef8ccc1710" loc="32:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendSerial" scoped="" ref="0x7fef8ccc1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8ccc1a90"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8ccc1c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendLocation" ref="0x7fef8ccc2820" loc="31:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendLocation" scoped="" ref="0x7fef8ccc2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fef8ccc2ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7fef8ccc2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KnowledgeLink" ref="0x7fef8ccd6340" loc="4:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KnowledgeLink" scoped="" ref="0x7fef8ccd6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="KnowledgeLink"/>
      </instance>
      <interface-functions>
        <function-ref name="isCargoHere" scoped="" ref="0x7fef8ccd66c0"/>
        <function-ref name="getID" scoped="" ref="0x7fef8ccd6850"/>
        <function-ref name="getCraneLoc" scoped="" ref="0x7fef8ccd69e0"/>
        <function-ref name="cargoPlacedTo" scoped="" ref="0x7fef8ccd6b70"/>
        <function-ref name="getIndex" scoped="" ref="0x7fef8ccd6d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fef8ccd47a0" loc="6:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fef8ccd47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fef8ccd4b20"/>
        <function-ref name="rand32" scoped="" ref="0x7fef8ccd4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialLink" ref="0x7fef8ccccb50" loc="9:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialLink" scoped="" ref="0x7fef8ccccb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferOp"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="doIt" scoped="" ref="0x7fef8cccb790"/>
        <function-ref name="done" scoped="" ref="0x7fef8ccca930"/>
        <function-ref name="doItClean" scoped="" ref="0x7fef8ccca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Seed" ref="0x7fef8ccd3210" loc="7:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Seed" scoped="" ref="0x7fef8ccd3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fef8ccd3e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CraneLink" ref="0x7fef8ccd9aa0" loc="3:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CraneLink" scoped="" ref="0x7fef8ccd9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CraneLink"/>
      </instance>
      <interface-functions>
        <function-ref name="newCommand" scoped="" ref="0x7fef8ccd9e20"/>
        <function-ref name="newPosition" scoped="" ref="0x7fef8ccd6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fef8ccd5020" loc="5:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fef8ccd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fef8ccd53a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fef8ccd5530"/>
        <function-ref name="led1On" scoped="" ref="0x7fef8ccd56c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fef8ccd5850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fef8ccd59e0"/>
        <function-ref name="get" scoped="" ref="0x7fef8ccd5b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fef8ccd5d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fef8ccd44d0"/>
        <function-ref name="set" scoped="" ref="0x7fef8ccd4020"/>
        <function-ref name="led0On" scoped="" ref="0x7fef8ccd41b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fef8ccd4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fef8ccc8150" loc="11:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fef8ccc8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fef8ccc84d0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8ccc8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fef8ccd1490" loc="8:CraneStateP.nc">
      <component-ref qname="CraneStateP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8ccd1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8cccea20"/>
        <function-ref name="fired" scoped="" ref="0x7fef8cccf020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fef8cccfda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fef8cccf920"/>
        <function-ref name="getdt" scoped="" ref="0x7fef8cccc4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fef8cccc020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8cccf4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fef8ccd00d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fef8ccce410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fef8ccd05a0"/>
        <function-ref name="stop" scoped="" ref="0x7fef8ccd0a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fef8cc80b00" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="shipmainC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fef8cc80b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fef8e10fd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fef8e10d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fef8cc7b110"/>
        <function-ref name="fired" scoped="" ref="0x7fef8cc7e5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fef8cc7d4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fef8cc7d020"/>
        <function-ref name="getdt" scoped="" ref="0x7fef8cc7ba10"/>
        <function-ref name="gett0" scoped="" ref="0x7fef8cc7b590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fef8cc7ea30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fef8cc7f750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fef8cc7dab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fef8cc7fc20"/>
        <function-ref name="stop" scoped="" ref="0x7fef8cc7e130"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fef8e071c70" loc="62:/opt/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fef8e072840" loc="60:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fef8e066810" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fef8e066590" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fef8e06be00" loc="31:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fef8e0688a0" loc="39:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fef8e068620" loc="39:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fef8e0673e0" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fef8e067160" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fef8e067ca0" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fef8e053ca0" loc="44:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fef8e052420" loc="45:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fef8e054e30" loc="42:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fef8e0502b0" loc="47:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fef8e053590" loc="43:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fef8e052b40" loc="46:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fef8e054070" loc="40:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fef8e054740" loc="41:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fef8e192190" loc="57:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fef8e191190" loc="72:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fef8e192900" loc="65:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fef8e189670" loc="67:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fef8e188020" loc="75:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fef8e0be7f0" loc="85:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fef8e0bd020" loc="86:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fef8e0be020" loc="79:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fef8e0a3e30" loc="62:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fef8e138ac0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fef8e0a1830" loc="52:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fef8de94a60" loc="61:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fef8de93270" loc="67:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fef8de93a50" loc="72:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fef8de92a20" loc="83:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fef8de8f1f0" loc="100:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fef8de8fa00" loc="117:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fef8de92270" loc="77:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fef8de8e5a0" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fef8de8e320" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fef8de942d0" loc="56:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fef8de91270" loc="89:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fef8de91a00" loc="94:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fef8de59730" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fef8de594b0" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fef8de58c80" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fef8de58a00" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fef8de5da80" loc="104:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fef8de58020" loc="130:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fef8de554f0" loc="95:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fef8de55d00" loc="105:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fef8ddcc7f0" loc="59:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fef8ddcc1e0" loc="59:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fef8ddcc560" loc="59:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fef8ddcb950" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddcb6d0" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fef8ddc7a10" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddc7790" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fef8ddc3020" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddc4910" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8ddc4c40" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fef8ddc4020" loc="106:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fef8ddc5020" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddc68f0" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8ddc6c20" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7fef8dddb970" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fef8dddb020" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fef8dddb3a0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8dddb6d0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fef8ddd4160" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddd6ae0" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8ddd6e10" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fef8ddd6270" loc="123:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fef8ddd8cd0" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddd8a50" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fef8ddd73a0" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddd9d70" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fef8ddd7110" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fef8ddd1670" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
              <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8de05cc0" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fef8ddd1060" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8ddd1390" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fef8dda63a0" loc="65:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dda7d30" loc="65:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fef8dda6110" loc="65:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fef8dda5550" loc="71:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dda52d0" loc="71:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fef8dda7540" loc="57:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fef8ddb0b50" loc="52:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fef8ddb08d0" loc="52:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fef8ddad770" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddad4f0" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fef8ddab940" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddab6c0" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fef8ddaaab0" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ddaa830" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fef8dd9e790" loc="65:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd9e510" loc="65:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fef8dda28b0" loc="46:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dda2290" loc="46:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fef8dda2620" loc="46:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fef8dd9f770" loc="59:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd9f4f0" loc="59:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fef8dda0ca0" loc="53:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dda0680" loc="53:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fef8dda0a10" loc="53:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fef8dd9d780" loc="71:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd9d500" loc="71:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fef8ddb49f0" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fef8ddb4770" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fef8ddbe600" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fef8ddbe380" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fef8ddcd9e0" loc="68:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fef8ddbf520" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fef8ddbf2a0" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fef8ddbb020" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fef8ddba950" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fef8ddbaca0" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fef8ddbda30" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fef8ddbd450" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fef8ddbd7a0" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fef8ddb74a0" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fef8ddb7220" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fef8ddb6850" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fef8ddb62a0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fef8ddb65c0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fef8ddf59e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fef8ddb92a0" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fef8ddb9020" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fef8ddb5020" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fef8ddb28c0" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fef8ddb2c10" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fef8ddb5e40" loc="195:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="setChannelDone" ref="0x7fef8dd991f0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fef8dd9a9a0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fef8dd9a720" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fef8dd99a40" loc="55:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fef8dda3b80" loc="35:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fef8dda3b80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fef8dda3dc0" loc="35:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dda3dc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fef8dd94c00" loc="63:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dda3dc0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd94980" loc="63:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fef8dd93d80" loc="70:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd93b00" loc="70:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fef8dd979c0" loc="49:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd97740" loc="49:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fef8dd950c0" loc="78:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dda3dc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd92a80" loc="78:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fef8dd92de0" loc="78:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dda3dc0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7fef8dd7eac0" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fef8dd7eac0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7fef8dd7ad10" loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd7aa90" loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fef8dd7a2a0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fef8dd7eac0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd7a020" loc="48:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fef8dd7b6c0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd7b440" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fef8dd78aa0" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fef8dd7eac0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd784a0" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fef8dd78810" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fef8dd7eac0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fef8dd6e5f0" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fef8dd6e5f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fef8dd6a020" loc="61:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fef8dd6fd00" loc="47:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd6fa80" loc="47:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fef8dd4b120" loc="120:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fef8dd4c120" loc="97:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fef8dd4d770" loc="88:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fef8dd4c910" loc="102:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fef8dd4bb80" loc="128:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7fef8dd46110" loc="41:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd47e30" loc="41:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fef8dd4ec70" loc="37:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fef8dd476c0" loc="39:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd47440" loc="39:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fef8dd45ba0" loc="45:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd45580" loc="45:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fef8dd45910" loc="45:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fef8dd46e50" loc="43:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd46830" loc="43:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fef8dd46bc0" loc="43:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7fef8dd42020" loc="49:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fef8de01440"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd43ca0" loc="49:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7fef8dd42d00" loc="51:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7fef8de01440"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd426f0" loc="51:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fef8dd42a70" loc="51:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7fef8de01440"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fef8dd43550" loc="47:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd432d0" loc="47:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7fef8dd414c0" loc="53:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fef8de01440"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fef8dd56cd0" loc="67:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fef8dd56380" loc="67:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fef8dd56700" loc="67:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8dd56a30" loc="67:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fef8dd51660" loc="122:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd51060" loc="122:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8dd51390" loc="122:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fef8dd52790" loc="110:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fef8dd54c00" loc="83:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd54980" loc="83:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fef8dd53de0" loc="97:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dd53800" loc="97:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fef8dd53b50" loc="97:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7fef8dd23190" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7fef8dd23aa0" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7fef8dd22460" loc="79:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7fef8dd269c0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fef8dd0a2a0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fef8dd0a020" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7fef8dd0aa80" loc="62:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fef8dd13e50" loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fef8dd13bd0" loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fef8dd0b810" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fef8dd0b590" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="43:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7fef8dd11d60" loc="58:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fef8dd11ae0" loc="58:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7fef8dd0f3f0" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="65:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fef8dd0f170" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7fef8dd10970" loc="63:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="60:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fef8dd106f0" loc="63:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7fef8dd0d020" loc="81:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="74:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fef8dd0fc60" loc="81:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7fef8dd112a0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fef8dd11020" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7fef8dcaa270" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7fef8dcbe350" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcbe0d0" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7fef8dcafcb0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcafa30" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7fef8dcad490" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcad210" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fef8dcb1490" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcb1210" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fef8dcbfcc0" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcbfa40" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fef8dcaf2b0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcb1bc0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fef8dcaf020" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fef8dcb2a20" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcb2440" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fef8dcb2790" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fef8dcaea20" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcae440" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fef8dcae790" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7fef8dcb82d0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7fef8dcb8c30" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7fef8dcb4020" loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcb6c30" loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7fef8dcb7760" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcb74e0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7fef8dcb62a0" loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcb6020" loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7fef8dc8b850" loc="60:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7fef8dc8c910" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7fef8de07180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7fef8dc8c690" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7fef8de07180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fef8dc8b0e0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7fef8dc90e30" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7fef8dc8a0e0" loc="65:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fef8de07180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7fef8dc84550" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="69:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc842d0" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fef8dc88860" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc885e0" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fef8dc85020" loc="61:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="58:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fef8dc866b0" loc="56:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc860d0" loc="56:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fef8dc86420" loc="56:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7fef8dc8fcd0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc8fa50" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7fef8dc85ab0" loc="67:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="63:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc85830" loc="67:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fef8dcd3bb0" loc="46:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7fef8dcd3390" loc="40:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcd3110" loc="40:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7fef8dcd2750" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcd24d0" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7fef8dcd0020" loc="59:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7fef8dcd0ba0" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcd0920" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7fef8dcc5bd0" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcc5950" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7fef8dcc8e00" loc="86:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7fef8dcc8630" loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8dcc8020" loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fef8dcc83a0" loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7fef8dccc0b0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dccddf0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7fef8dcccbc0" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dccc940" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7fef8dccab00" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8dcca4f0" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fef8dcca870" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7fef8dcce720" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7fef8dccd5c0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dccd020" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fef8dccd330" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7fef8dcc96c0" loc="75:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcc9440" loc="75:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7fef8dc9bd60" loc="131:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc9bae0" loc="131:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7fef8dc9c490" loc="120:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc9c210" loc="120:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7fef8dca8940" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dca8370" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7fef8dca86b0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7fef8dca5b10" loc="75:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dca5890" loc="75:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7fef8dc96bd0" loc="156:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc965f0" loc="156:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fef8dc96940" loc="156:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7fef8dca5020" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dca7ca0" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7fef8dc9b2f0" loc="125:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc9ccf0" loc="125:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7fef8dc9b060" loc="125:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7fef8dca3630" loc="88:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8dca3020" loc="88:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fef8dca33a0" loc="88:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7fef8dc97e20" loc="151:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc97ba0" loc="151:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7fef8dca7430" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dca71b0" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7fef8dca02a0" loc="99:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dca0020" loc="99:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7fef8dca2630" loc="94:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8dca2020" loc="94:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fef8dca23a0" loc="94:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7fef8dc92390" loc="178:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fef8de01860"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7fef8dc94680" loc="162:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc94400" loc="162:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7fef8dc93b70" loc="173:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fef8de01440"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7fef8dc973a0" loc="146:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc98d90" loc="146:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fef8dc97110" loc="146:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7fef8dca4630" loc="81:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dca43b0" loc="81:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7fef8dc9e9d0" loc="115:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc9e400" loc="115:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7fef8dc9e740" loc="115:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7fef8dc9ab40" loc="136:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc9a570" loc="136:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7fef8dc9a8b0" loc="136:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fef8dc92dc0" loc="185:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc92b40" loc="185:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7fef8dc9f0c0" loc="105:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dca0aa0" loc="105:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fef8dca0db0" loc="105:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7fef8dca9b60" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dca98e0" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7fef8dc932a0" loc="168:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc93020" loc="168:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7fef8dc985f0" loc="141:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc98370" loc="141:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7fef8dc9fbc0" loc="110:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dc9f940" loc="110:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7fef8dcc38b0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcc32d0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7fef8dcc3620" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7fef8dcc20e0" loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7fef8dcc4020" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcd4cf0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7fef8dcc4ab0" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcc4830" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7fef8dcbc5f0" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcbc370" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7fef8dcbda10" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcbd790" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7fef8dcbce40" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7fef8dcba960" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dcba6e0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fef8dc228b0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fef8dc228b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fef8dc22af0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dc22af0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fef8dc1b800" loc="109:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dc22af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fef8dc1e7e0" loc="78:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fef8dc1de10" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dc22af0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dc22af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fef8dc1d840" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dc22af0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fef8dc1db80" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dc22af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fef8dc1d020" loc="88:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fef8dc1a020" loc="116:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dc22af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fef8dc1f680" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dc22af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fef8dc1f400" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8dc22af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fef8dc1e020" loc="73:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fef8dbe22a0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dbe2020" loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fef8dbe0dd0" loc="67:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dbe0b50" loc="67:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fef8dbe02b0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dbe2bc0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fef8dbe0020" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7fef8dbde8d0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
              <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8dbde610" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fef8dbcc6a0" loc="50:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fef8dbcb600" loc="60:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fef8dbcce80" loc="55:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fef8dbd0e00" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fef8dbd0820" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fef8ddf5dc0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fef8dbd0b70" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fef8ddf41d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fef8db248e0" loc="53:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fef8db23270" loc="61:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fef8db1fa90" loc="65:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fef8db1f270" loc="59:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fef8db210e0" loc="90:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fef8db21940" loc="98:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fef8db15b50" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fef8db20b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fef8db158d0" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fef8db20b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fef8db1aa90" loc="53:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fef8db17620" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fef8db20b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fef8db173a0" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fef8db20b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fef8db15020" loc="70:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fef8db20b10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7fef8d9a8020" loc="54:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
              <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8d9a9d30" loc="54:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7fef8d9a9390" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8d9a9110" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="turnOff" ref="0x7fef8d93cac0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7fef8d939bf0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fef8d9386a0" loc="64:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fef8d938420" loc="64:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7fef8d938e60" loc="70:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7fef8d939390" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fef8d936740" loc="75:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7fef8d934510" loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8d934290" loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7fef8d933980" loc="64:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fef8d933110" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fef8d934e50" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fef8d8bd020" loc="52:/opt/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fef8d8be690" loc="46:/opt/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fef8d892e40" loc="53:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fef8d892e40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fef8d88e9a0" loc="64:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fef8d892e40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fef8d88e720" loc="64:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fef8d892e40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7fef8d8670b0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8d868db0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fef8d86ce70" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8d86cbf0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7fef8d869c20" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8d869660" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fef8d869990" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fef8d868650" loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8d8683d0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="done" ref="0x7fef8d8354e0" loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fef8d835260" loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fef8d8389d0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fef8d7c3a60" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fef8d7c3a60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fef8d7b97c0" loc="136:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fef8d7bd070" loc="83:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fef8d7bcdf0" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fef8d7bc820" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fef8d7bcb60" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fef8d7bc070" loc="98:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fef8d7b88a0" loc="151:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fef8d7b8020" loc="144:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fef8d7bd850" loc="92:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fef8d7c05f0" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fef8d7c0370" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fef8d7bbdc0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fef8d7bb7f0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fef8d7bbb30" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fef8d7bf110" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fef8d7c0e30" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fef8eaf4170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fef8d7bf910" loc="78:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fef8d7a7460" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fef8d7a7460"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fef8d7a76a0" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d7a76a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fef8d7a6020" loc="64:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d7a76a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fef8d7a5120" loc="76:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fef8d7a68a0" loc="71:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fef8d7a5880" loc="82:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fef8d776b20" loc="89:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fef8d7788e0" loc="85:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fef8d77a5a0" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fef8d776350" loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fef8d7760d0" loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fef8d778110" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fef8d779e30" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fef8d7755c0" loc="90:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fef8d775340" loc="90:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fef8d77ad40" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fef8d779710" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fef8d779490" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7fef8d765910" loc="92:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7fef8d768880" loc="68:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7fef8d766030" loc="74:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7fef8d766860" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fef8d764190" loc="98:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7fef8d7650e0" loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fef8d7695e0" loc="57:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fef8e0f11d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fef8e0f15f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fef8d768040" loc="63:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fef8e0f11d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fef8e0f15f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fef8d769da0" loc="63:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fef8e0f11d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fef8e0f15f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fef8d7730d0" loc="41:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d7730d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fef8d76f9f0" loc="74:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fef8d772bf0" loc="58:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fef8d773a10" loc="48:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d7730d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fef8d770390" loc="62:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fef8d76e1f0" loc="80:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fef8d772440" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d7730d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fef8d7721c0" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d7730d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fef8d770b00" loc="65:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fef8d76f270" loc="68:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fef8d789430" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fef8d789430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fef8d783020" loc="98:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fef8d784020" loc="87:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fef8d789d60" loc="61:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fef8d789430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fef8d783a00" loc="104:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fef8d783780" loc="104:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fef8d782270" loc="110:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fef8d7867b0" loc="75:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fef8d786020" loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fef8d7847e0" loc="93:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fef8d788760" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fef8d789430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fef8d7884e0" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fef8d789430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fef8d785020" loc="78:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fef8d785770" loc="81:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fef8d56d070" loc="59:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fef8d56d070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fef8d56d2b0" loc="59:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d56d2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fef8d56dde0" loc="66:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d56d2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fef8d56db60" loc="66:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d56d2b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fef8d571610" loc="54:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fef8d5707d0" loc="66:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fef8d570020" loc="61:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fef8d571d30" loc="61:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fef8d575d70" loc="53:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fef8d578020" loc="62:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d57bca0" loc="62:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fef8d5773c0" loc="74:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d577140" loc="74:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fef8d578890" loc="68:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fef8d577e50" loc="81:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d577bd0" loc="81:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fef8d480350" loc="40:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d480350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7fef8d4782a0" loc="88:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7fef8d478020" loc="88:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fef8d479020" loc="76:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fef8d480c90" loc="47:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d480350"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fef8d47c110" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d480350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fef8d47de10" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d480350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fef8d47c8c0" loc="64:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fef8d4797e0" loc="82:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fef8d47d670" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d480350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fef8d47d3f0" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fef8d480350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fef8d47a070" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fef8d47a7c0" loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fef8d45d3b0" loc="76:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fef8d45fa00" loc="76:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fef8d45fd90" loc="76:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8d45d110" loc="76:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fef8d45c980" loc="88:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fef8d45bbd0" loc="88:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fef8d45c020" loc="88:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8d45c360" loc="88:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fef8d45c6d0" loc="89:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fef8d4614c0" loc="45:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fef8d461240" loc="45:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7fef8d4471f0" loc="86:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7fef8d43d070" loc="126:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7fef8d442a00" loc="117:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7fef8d43da90" loc="128:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7fef8d43d810" loc="128:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7fef8d448a10" loc="83:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7fef8d43f5c0" loc="122:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7fef8d43f340" loc="122:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fef8d4430b0" loc="113:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fef8d444dd0" loc="113:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fef8d446190" loc="97:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7fef8d4384e0" loc="141:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fef8d438260" loc="141:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fef8d443850" loc="114:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7fef8d43bc10" loc="131:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7fef8d43b990" loc="131:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fef8d43ab70" loc="136:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7fef8d43e8a0" loc="125:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7fef8d43e620" loc="125:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7fef8d439b10" loc="140:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7fef8d4413f0" loc="119:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7fef8d441170" loc="119:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fef8d446b70" loc="103:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d4468f0" loc="103:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fef8d4422a0" loc="116:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7fef8d442020" loc="116:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7fef8d43fe30" loc="123:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7fef8d43b270" loc="129:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7fef8d43a390" loc="132:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fef8d439350" loc="138:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7fef8d441b70" loc="120:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fef8d447980" loc="89:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fef8d4445b0" loc="109:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d444330" loc="109:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fef8d3e9190" loc="95:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fef8d3e99e0" loc="105:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7fef8d385a20" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fef8d381020" loc="87:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fef8d388ad0" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fef8d380270" loc="91:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fef8d381a10" loc="88:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fef8d381790" loc="88:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fef8d384d80" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fef8d384b00" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fef8d380c70" loc="92:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fef8d3809f0" loc="92:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fef8d3852b0" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7fef8d383750" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fef8d3834d0" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fef8d3843e0" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fef8d384160" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BufferOp" loc="1:./SpecialSerialP/BufferOp.nc">
      <parameters>
        <typedef name="val_t" ref="0x7fef8d1d8aa0" loc="1:./SpecialSerialP/BufferOp.nc">
          <interfacedef-ref qname="BufferOp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="doIt" ref="0x7fef8d1d3cd0" loc="4:./SpecialSerialP/BufferOp.nc">
        <interfacedef-ref qname="BufferOp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sbuf" ref="0x7fef8d1d33c0" loc="4:./SpecialSerialP/BufferOp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fef8d1d3720" loc="4:./SpecialSerialP/BufferOp.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
          <variable name="now" ref="0x7fef8d1d3a30" loc="4:./SpecialSerialP/BufferOp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7fef8d1cf2c0" loc="8:./SpecialSerialP/BufferOp.nc">
        <interfacedef-ref qname="BufferOp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dbuf" ref="0x7fef8d1d0820" loc="8:./SpecialSerialP/BufferOp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="rbuf" ref="0x7fef8d1d0b90" loc="8:./SpecialSerialP/BufferOp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="err" ref="0x7fef8d1cf020" loc="8:./SpecialSerialP/BufferOp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="doItClean" ref="0x7fef8d1d0150" loc="6:./SpecialSerialP/BufferOp.nc">
        <interfacedef-ref qname="BufferOp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dbuf" ref="0x7fef8d1d1490" loc="6:./SpecialSerialP/BufferOp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="rbuf" ref="0x7fef8d1d1800" loc="6:./SpecialSerialP/BufferOp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fef8d1d8aa0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fef8d1d1b60" loc="6:./SpecialSerialP/BufferOp.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
          <variable name="now" ref="0x7fef8d1d1e70" loc="6:./SpecialSerialP/BufferOp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fef8d1b5a80" loc="71:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fef8d1b43e0" loc="81:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fef8d1b5110" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fef8d1bae20" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fef8d1b2020" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fef8d1b4ce0" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fef8d1bbaa0" loc="62:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fef8d1b8700" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d1b8480" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fef8d1b72a0" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fef8d1b7020" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fef8d122580" loc="54:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fef8d125dd0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fef8d12b770" loc="56:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fef8d12abe0" loc="72:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fef8d128840" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d1285c0" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fef8d1294a0" loc="79:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fef8d12a350" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d12a0d0" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fef8d1270e0" loc="100:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fef8d129d50" loc="85:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fef8d068470" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fef8d06be70" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8d0681e0" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fef8d063110" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fef8d064e10" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fef8d062020" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fef8d063910" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8d063c50" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fef8d065d20" loc="65:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fef8d061950" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fef8d061020" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8d061360" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fef8d0616b0" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fef8d064640" loc="72:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fef8d067d20" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fef8d0673f0" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8d067730" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fef8d067a80" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="1:UartByte.nc">
      <function command="" provided="0" name="send" ref="0x7fef8d03e7c0" loc="10:UartByte.nc">
        <documentation loc="3:UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fef8d03e540" loc="10:UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fef8d03c650" loc="20:UartByte.nc">
        <documentation loc="12:UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fef8d03c060" loc="20:UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fef8d03c3c0" loc="20:UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fef8d02abf0" loc="44:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fef8d02bcc0" loc="42:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7fef8d026450" loc="49:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d0261d0" loc="49:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fef8d027390" loc="47:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fef8d02ed50" loc="40:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fef8d02b540" loc="41:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fef8d02a4b0" loc="43:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7fef8d028350" loc="45:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fef8d028c80" loc="46:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fef8d028a00" loc="46:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fef8d027ab0" loc="48:/opt/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fef8ce70930" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ce70370" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8ce706a0" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fef8ce6a160" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ce6bae0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8ce6be10" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fef8ce6b270" loc="112:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fef8ce6ec40" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ce6e9c0" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fef8ce6d360" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fef8ce6fd10" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fef8ddde160"/>
                <typename><typedef-ref name="message_t" ref="0x7fef8dddc7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fef8ce6d0d0" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CraneLink" loc="1:CraneLink.nc">
      <function event="" provided="0" name="newCommand" ref="0x7fef8cddcb50" loc="5:CraneLink.nc">
        <interfacedef-ref qname="CraneLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="senderID" ref="0x7fef8cddc590" loc="5:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
          <variable name="cmd" ref="0x7fef8cddc8c0" loc="5:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="newPosition" ref="0x7fef8cddee80" loc="3:CraneLink.nc">
        <interfacedef-ref qname="CraneLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xloc" ref="0x7fef8cdde540" loc="3:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
          <variable name="yloc" ref="0x7fef8cdde880" loc="3:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
          <variable name="cargoPlaced" ref="0x7fef8cddebe0" loc="3:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SysLink2" loc="1:SysLink2.nc">
      <function command="" provided="0" name="getAllCargo" ref="0x7fef8cdb4d60" loc="7:SysLink2.nc">
        <interfacedef-ref qname="SysLink2"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fef8cdb4760" loc="7:SysLink2.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8cdb4ad0" loc="7:SysLink2.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShipInfo" ref="0x7fef8cdb6a70" loc="4:SysLink2.nc">
        <interfacedef-ref qname="SysLink2"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shipID" ref="0x7fef8cdb89c0" loc="4:SysLink2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
          <variable name="x" ref="0x7fef8cdb8d20" loc="4:SysLink2.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y" ref="0x7fef8cdb60d0" loc="4:SysLink2.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dt" ref="0x7fef8cdb6450" loc="4:SysLink2.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="isCL" ref="0x7fef8cdb67b0" loc="4:SysLink2.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAllShips" ref="0x7fef8cdb4020" loc="6:SysLink2.nc">
        <interfacedef-ref qname="SysLink2"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fef8cdb59b0" loc="6:SysLink2.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fef8cdb5d20" loc="6:SysLink2.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="registerNewShip" ref="0x7fef8cdb82a0" loc="3:SysLink2.nc">
        <interfacedef-ref qname="SysLink2"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fef8e18c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shipID" ref="0x7fef8cdb8020" loc="3:SysLink2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalTime" ref="0x7fef8cdb5270" loc="5:SysLink2.nc">
        <interfacedef-ref qname="SysLink2"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fef8eaf5610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="KnowledgeLink" loc="3:KnowledgeLink.nc">
      <function command="" provided="0" name="isCargoHere" ref="0x7fef8cd67840" loc="5:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fef8e1bc500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="craneX" ref="0x7fef8cd67260" loc="5:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
          <variable name="craneY" ref="0x7fef8cd675b0" loc="5:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getID" ref="0x7fef8cd64990" loc="8:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7fef8cd64710" loc="8:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getCraneLoc" ref="0x7fef8cd636c0" loc="10:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fef8cd630d0" loc="10:KnowledgeLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y" ref="0x7fef8cd63430" loc="10:KnowledgeLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cargoPlacedTo" ref="0x7fef8cd65600" loc="6:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="craneX" ref="0x7fef8cd65020" loc="6:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
          <variable name="craneY" ref="0x7fef8cd65370" loc="6:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7fef8cd64020" loc="7:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="senderID" ref="0x7fef8cd65d30" loc="7:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fef8eaf6ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
