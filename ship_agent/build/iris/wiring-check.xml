<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:shipmainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1567ba6020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1567db9c10"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1567db9c10"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1567db4dc0"/></to>
    </wire>
    <wire loc="18:shipmainC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1567ba6660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1567bd5a80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1567bd5a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1567bd2400"/></to>
    </wire>
    <wire loc="19:shipmainC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f1567ba3140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1567b536a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1567b536a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1567ad6610"/></to>
    </wire>
    <wire loc="25:shipmainC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1566e84730"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1566e94c30"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1566e94c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1566600270"/></to>
    </wire>
    <wire loc="26:shipmainC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1566e80480"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1566e94020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1566e94020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1566601540"/></to>
    </wire>
    <wire loc="27:shipmainC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1566e7f170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1566e88910"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1566e88910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1567b29390"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:shipmainC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1566e58b50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1566e60020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1566e60020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f15665a2270"/></to>
    </wire>
    <wire loc="34:shipmainC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1566e55930"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1566e613a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1566e613a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15665a3540"/></to>
    </wire>
    <wire loc="35:shipmainC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1566e54620"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1566e5ce10"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1566e5ce10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1567b29390"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:shipmainC.nc">
      <from><interface-ref name="SendWelcomeMsg" scoped="" ref="0x7f1567b9ce70"/></from>
      <to><interface-ref name="SendWelcomeMsg" scoped="" ref="0x7f1566e51400"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f156666d850"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f15672db600"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1567512b50"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15675d76e0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f15667d6760"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1566805b60"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15668ca460"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f156695b080"/></to>
    </wire>
    <wire loc="41:shipmainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1566e03ab0"/></to>
    </wire>
    <wire loc="42:shipmainC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f1566e091e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1566d6a140"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1566d6a140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f15673512e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:shipmainC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1566e04480"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1567bd5a80"/></to>
    </wire>
    <wire loc="44:shipmainC.nc">
      <from><interface-ref name="SysLink" scoped="" ref="0x7f1566e0a020"/></from>
      <to><interface-ref name="SysLink" scoped="" ref="0x7f1566e4b970"/></to>
    </wire>
    <wire loc="51:shipmainC.nc">
      <from><interface-ref name="CraneLink" scoped="" ref="0x7f1566d63560"/></from>
      <to><interface-ref name="CraneLink" scoped="" ref="0x7f1566e793c0"/></to>
    </wire>
    <wire loc="52:shipmainC.nc">
      <from><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566d60020"/></from>
      <to><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566cea840"/></to>
    </wire>
    <wire loc="8:KDBUserC.nc">
      <from><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566cea840"/></from>
      <to><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566df6d40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:shipmainC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1566d5fd40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1567bd5a80"/></to>
    </wire>
    <wire loc="54:shipmainC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1566d5d5e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1566cfeb00"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1566cfeb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f15673512e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:shipmainC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7f1566d58af0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1566cf7490"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1566cf7490"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f15673512e0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:shipmainC.nc">
      <from><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566ce6950"/></from>
      <to><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566cdb380"/></to>
    </wire>
    <wire loc="8:KDBUserC.nc">
      <from><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566cdb380"/></from>
      <to><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566df6d40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:shipmainC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1566ce2570"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1567bd5a80"/></to>
    </wire>
    <wire loc="63:shipmainC.nc">
      <from><interface-ref name="Ship" scoped="" ref="0x7f1567b9c590"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1566ce1c80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1567bf0470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1567ed8510"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1567ed8510"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1567e0ae40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1567bef020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f15671cd680"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1567bef020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f15672dda60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1567bef020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1567db3a70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1567db3a70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1567db0cf0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567bef720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f1567db19d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1567024b50"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1567dadbb0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1567c0f690"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f1567da9b00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1567c0f020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1567da9400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1567bae920"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1567da9400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f1567dab4a0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1567dab4a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f1567d9e0e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f1567dabb70"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f1567db19d0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f1567d97620"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f1567d8dcb0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f1567d8dcb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1567d01da0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f1567d9d820"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f1567dabb70"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f1567d56cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1567c67160"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f1567d72350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1567cd52b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1567cd52b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566b47e20"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f1567d66350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1567cc48f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1567cc48f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566ad33f0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f1567d5ccb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1567cb5c10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1567cb5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566a683f0"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f1567d4f060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1567c4c6d0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f1567d8a350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1567cfe2b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1567cfe2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c77e20"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f1567d5e670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1567cb78f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1567cb78f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566a6fe20"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f1567d88990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1567cf6a20"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1567cf6a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c20c90"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f1567d7b990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1567ce3020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1567ce3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566bae0a0"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f1567d6fcb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1567cd2760"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1567cd2760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566b3c6d0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f1567d63cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1567cc1da0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1567cc1da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566ac9e20"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f1567d90350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1567d048f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1567d048f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c8de20"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f1567d84350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1567cf2020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1567cf2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c153f0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f1567d77350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1567ce05d0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1567ce05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566ba49b0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f1567d6b670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1567ccfc10"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1567ccfc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566b320a0"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f1567d58670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1567cb02b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1567cb02b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566a5ee20"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f1567d52b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1567c57160"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f1567d69cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1567cc65d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1567cc65d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566adae20"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1567d01da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c7d6d0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f1567d81cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1567cee5d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1567cee5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c0ce20"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f1567d544e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1567c62c90"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f1567d7e350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1567ce7d30"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1567ce7d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566bb5c90"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f1567d71670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1567cd4440"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1567cd4440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566b430a0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f1567d65670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1567cc3a80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1567cc3a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566acf6d0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f1567d5a020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1567cb3da0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1567cb3da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566a656d0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f1567d89670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1567cfd440"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1567cfd440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c730a0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f1567d87cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1567cf5c10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1567cf5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c1de20"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f1567d7acb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1567ce22b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1567ce22b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566baa3f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f1567d6d020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1567cd18f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1567cd18f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566b399b0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f1567d60020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1567cbe020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1567cbe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566ac50a0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f1567d8f670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1567d03a80"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1567d03a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c880a0"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f1567d83670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1567cf12b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1567cf12b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c126d0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f1567d76670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1567cdf760"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1567cdf760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566ba1e20"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f1567d57990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1567caf440"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1567caf440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566a5a0a0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f1567d74cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1567cd6020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1567cd6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566b4ac90"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f1567d67020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1567cc5760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1567cc5760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566ad60a0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f1567d5d990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1567cb6a80"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1567cb6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566a6b0a0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f1567d51e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1567c52c90"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f1567d8b020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1567cff020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1567cff020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c7a9b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f1567d7f020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1567ced760"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1567ced760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c080a0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f1567d5f350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1567cb87a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1567cb87a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566a72c90"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f1567d7c670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1567ce6e60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1567ce6e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566bb2e20"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f1567d70990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1567cd35d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1567cd35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566b403f0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f1567d64990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1567cc2c10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1567cc2c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566acc9b0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f1567d59350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1567cb1020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1567cb1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566a619b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f1567d91020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1567d056b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1567d056b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c909b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f1567d85020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1567cf4da0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1567cf4da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c190a0"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f1567d78020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1567ce1440"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1567ce1440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566ba76d0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f1567d6c350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1567cd0a80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1567cd0a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566b36e20"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f1567d53800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1567c5c6d0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f1567d6a990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1567cc73f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1567cc73f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566addc90"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f1567d75990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1567cde8f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1567cde8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566b9d0a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f1567d8e990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1567d02c10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1567d02c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c803f0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f1567d82990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1567cef440"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1567cef440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1566c0f9b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567e09d30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f1567e042c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f1567e203b0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1567de5330"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f156744fa70"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1567bae920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1567bdedc0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1567bd1b90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f1567bb1020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1567bb1020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f1567d8f670"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1567bd0e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f1567bb0380"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1567bb0380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f1567d90350"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1567bce020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f1567baf6a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1567baf6a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f1567d91020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1567ad6610"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1567aab270"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1567b166d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1567acf020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1567acf020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1567aa8d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1567b0d180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1567acf630"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1567acf630"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f1567aa6ba0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1567b1f630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1567ad3640"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1567ad3640"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1567aaa2c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1567b1e020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1567ad1430"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1567ad1430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1567aa81d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567af1dd0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567acc4b0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567acc4b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567a8b4b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1567b29390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1567ad2810"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1567ad2810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1567aa94d0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567af44c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567acd990"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567acd990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567a94a10"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1567af5020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1567acb020"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1567acb020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1567a8a020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1567afd1e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567ace2d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1567ace2d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567aa7430"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f1567ae5d40"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f1567acbcb0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f1567acbcb0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f1567a8acb0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f1567ae1d70"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567ab9ac0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567ab9ac0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567a7d550"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567adbe60"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567ab3c70"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567ab3c70"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567a79660"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1567aab270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15676ad880"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f1567ac0c40"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f1567a823b0"/></to>
    </wire>
    <wire loc="345:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f1567a823b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f15672fa3b0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1567aa8d60"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f15678943a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f1567aa6ba0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1567897720"/></to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1567aaa2c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1567896530"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1567aa81d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1567895b00"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1567ac2660"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1567a87e80"/></to>
    </wire>
    <wire loc="343:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1567a87e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f15672fee80"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567a8b4b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567696270"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1567aa94d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15678953a0"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567a7d550"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567344020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1567ab65d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1567a7e020"/></to>
    </wire>
    <wire loc="347:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1567a7e020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f15672f1a40"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1567ac9110"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1567a898e0"/></to>
    </wire>
    <wire loc="344:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1567a898e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f15672f5e70"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567a94a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567594b60"/></to>
    </wire>
    <wire loc="226:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1567a8a020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f15676b8d60"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1567aa7430"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567898020"/></to>
    </wire>
    <wire loc="264:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f1567a8acb0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f15676205f0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1567ab8800"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1567a80710"/></to>
    </wire>
    <wire loc="346:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1567a80710"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f15672f11e0"/></to>
    </wire>
    <wire loc="310:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567a79660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567348020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15676ad880"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f1567696d90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f15672fa3b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f15672d5a40"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f1567aa3020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f15677e2d30"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f1567a9b5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1567817390"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1567817390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15668c89d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f15678943a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f156691c420"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567348020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f156674a360"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1567896530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f156691e6c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1567895b00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f156691dc90"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1567a8d760"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1567703dd0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1567703dd0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f156685a2e0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f1567a95bb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1567812e00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567696270"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f15667df640"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f15672fee80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f15672d7550"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15678953a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f156691d530"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1567897720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f15669208b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567344020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f15667462a0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f15672f1a40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f15671d1020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f15672f5e70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f15672cd560"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f1567a9da60"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f15677e4a50"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f15676b8d60"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f15676b3100"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1567898020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1566921270"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1567aa4840"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f15677e2760"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f15676205f0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f15667d5d00"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f15672f11e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f15672cb8b0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f15679dd470"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1567706e00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1567706e00"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f156685e020"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f15679d6400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f1567941020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15679daab0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567344020"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f15679d0960"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f15672ffd90"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f15672ffd90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f15672d8470"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1567940b60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15672f0dd0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15672f0dd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15671d6ac0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f1567941cb0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f1567a743c0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f15678918c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f15679f9890"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15678928f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f156788b880"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15678912b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f15677a0020"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f1567894a30"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f15677a0630"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f156788ac00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1567817390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f156788a310"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f15677a15d0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f15677e1390"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1567706e00"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15677dd2b0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f15677d57c0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15677ddbe0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f15677a2120"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f15677de470"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f15677a2730"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f156779f4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15676cd840"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15676cd840"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15668069b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f156779fdd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1567701e60"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1567701e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1566858440"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f156779e410"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1567701080"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1567701080"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1566859590"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f1567700500"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f15676b7a10"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f15676b7a10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f15676b58c0"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15676ff440"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15676b8790"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15676b8790"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f15676b52b0"/></to>
    </wire>
    <wire loc="217:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f15676cabe0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f1567a0e480"/></to>
    </wire>
    <wire loc="218:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15676cca70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15676c3e40"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15676c3e40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f15676b6950"/></to>
    </wire>
    <wire loc="219:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f15676c9720"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f1567a27cb0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f1567a27cb0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f156695b650"/></to>
    </wire>
    <wire loc="220:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f15676c8400"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1567a26aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15676b4720"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567594b60"/></to>
    </wire>
    <wire loc="232:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15676b6950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1567698440"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1567698440"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f15676948c0"/></to>
    </wire>
    <wire loc="233:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15676b52b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1567698d70"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1567698d70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f15676932b0"/></to>
    </wire>
    <wire loc="234:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f15676b58c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f15676973d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f15676973d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f15676938c0"/></to>
    </wire>
    <wire loc="250:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1567696d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1567622a10"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1567622a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15667d8bf0"/></to>
    </wire>
    <wire loc="251:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15676948c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15676215d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15676215d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15667d6d70"/></to>
    </wire>
    <wire loc="252:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15676932b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1567620020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1567620020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15667d5730"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f15676938c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1567341c20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1567341c20"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1566743020"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f156761e8b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f15675c7740"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f15675c7740"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f1566798660"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f156761d270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f15676cc270"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f15676cc270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1566805400"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f156761faa0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f1567313b60"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f1567313b60"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f156730c410"/></to>
    </wire>
    <wire loc="263:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f156761f020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f1567a743c0"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15676ca440"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f15675c6060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f15675c6060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1566797020"/></to>
    </wire>
    <wire loc="277:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f15675c4760"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f1567a06c80"/></to>
    </wire>
    <wire loc="278:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15675c6860"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f15675bfac0"/></to>
    </wire>
    <wire loc="279:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15675c52b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1567594400"/></to>
    </wire>
    <wire loc="280:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f15675c5a10"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f1567941020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f156758f5d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f15673399b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="287:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f1567592780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f1567941020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1567591440"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f1567a12190"/></to>
    </wire>
    <wire loc="293:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1567593630"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f1567574a40"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f1567574a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f156756d440"/></to>
    </wire>
    <wire loc="294:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1567592020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1567573400"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f1567573400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f156756dd70"/></to>
    </wire>
    <wire loc="299:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f156756bb40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f15679f6560"/></to>
    </wire>
    <wire loc="300:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f156756d440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f1567312a40"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f1567312a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f156730b440"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f156756dd70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1567311400"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f1567311400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f156730bd70"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f156756c5a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f15672ff5c0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f15672ff5c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f15672d9c40"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1567340c00"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f15672f1a40"/></to>
    </wire>
    <wire loc="308:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f156733fcd0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1567338590"/></to>
    </wire>
    <wire loc="311:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f156733eb00"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f15673399b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f15673174a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f15672ffd90"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1567309b40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f15679f6560"/></to>
    </wire>
    <wire loc="327:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f156730b440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f1567301460"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f1567301460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f15672daaa0"/></to>
    </wire>
    <wire loc="328:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f156730bd70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1567301dd0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f1567301dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f15672d9480"/></to>
    </wire>
    <wire loc="329:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f156730c410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f1567304610"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f1567304610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f15672dbc40"/></to>
    </wire>
    <wire loc="341:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f15672ea1f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f1567a21020"/></to>
    </wire>
    <wire loc="342:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15672e92e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567344020"/></to>
    </wire>
    <wire loc="349:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f15672e5110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f15673399b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f15672e5ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f15673399b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="351:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f15672e48d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f15673399b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="352:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f15672e3470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f1567941020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="353:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f15672e2110"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f1567a743c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1567a26aa0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f156695a3b0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f1567941020"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f156693d300"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f156693b260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1567940b60"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f1566938410"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f1567941cb0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f15669198b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f15678b1260"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f156691cab0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f1567894a30"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f156691b8f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f15678928f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f156691a2b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f15678912b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f156691a8c0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f15678918c0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1567816150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f15668c7850"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15678168d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15668c5020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15668c5910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15678151f0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f15668c4120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f15668caa70"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f15668c4c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1566858a70"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f15678b1260"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f15668575d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f1567700500"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1566856440"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f15676ff440"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f1566803e80"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f15676c9720"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1566801ab0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f15676c8400"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1566804310"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f15676cca70"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1566804c40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f15676ca440"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f1566803400"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f15676cabe0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f15676b3d90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15676b4720"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f15667d3590"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f156761f020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f15667d4670"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f156761faa0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f15667d1060"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f156761e8b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f15667d1950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f156761d270"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f15667d0940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f15667cf160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f15667d0160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1566797820"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f15675c6860"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1566793020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f15675c4760"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15667962b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f15675c52b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f1566796a10"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f15675c5a10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1566794720"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f15675dc160"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f15675dc160"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f15675d5100"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f1566793b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f15675dd060"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f15675d6020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15675de230"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15675d76e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15675761d0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f1567570920"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f1567573b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f156756c5a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f1567575b60"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f156756e410"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1567571400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f156756cd40"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f15675702b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f156756bb40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f1567575590"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f156756fd70"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f1567576c50"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f156756f440"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f156673fcd0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f156733fcd0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1566741a70"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1567340c00"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1566740c40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1567513080"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1567513080"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f15675007d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f1566743e60"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f156733eb00"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f15675007d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1567364790"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f156750e3f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1567373150"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1567512b50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15674fa020"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15674fa020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15673f1080"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f156736d640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15673c2cf0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15673bc1d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f15674faa10"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f15674faa10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15673f1890"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1567363a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f15674f5020"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f15674f5020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f15673edbc0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f15673edbc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f15667198d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15673f1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f156671dc20"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15673f1890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f156671c4b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1566716bc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f156746bc70"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f156746bc70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1567459020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f1566711e20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f1567463020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f1567463020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f15674542b0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f156670f0a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1567462520"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f1567462520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15674536b0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f156670b450"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f156745fa40"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f156745fa40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f156744e230"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f15673b8490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f1567368a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f15673512e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f156750e3f0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15673140e0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f156730e920"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f1567311b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f156730a5a0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1567310400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f156730ad40"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f156730e2b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f1567309b40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f1567313590"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f156730dd70"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f1567314b60"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f156730d440"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15671d6ac0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1566fda6e0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f15672f8940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f15672d0020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f15671d1020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1566fd23a0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f15672b7b50"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f15672ea1f0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f15672b6a10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f15672e5110"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f15672b56a0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f15672e5ca0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f15672b43a0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f15672e48d0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15672b3200"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15672e92e0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f15672bf9d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f15671d1020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f15672afb70"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f15672e3470"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f15672c9020"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f15671df940"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f15671df940"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f1567d88990"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f15672c8380"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f15671dcb50"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f15671dcb50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15671aea60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f15672c2270"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f15671da920"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f15671da920"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f15671af020"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f15672c2dd0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f15671d94e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f15671d94e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f1567d7f020"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f15672c5020"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f15671d87f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f15671d87f0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f1567d8a350"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f15672bcb30"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f15671d7b10"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f15671d7b10"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f15671d09c0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f15672af080"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f15672e2110"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f15672b84d0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1566f7f9a0"/></to>
    </wire>
    <wire loc="856:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f156721ee40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1566fda6e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f156663de10"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f15671af020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f15671a1480"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1566fd23a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1566f8ab60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f15671c13d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f1567d6c350"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f15671c0680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f1567d6fcb0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f15671c47f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15670d2850"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f15670d2850"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15670b89e0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f15671a5c80"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f15671a0020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f15671ad840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f15671a2e00"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15671b01f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15671a27e0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15671aea60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15670e7900"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15670e7900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f156666bd80"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15670e4730"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15671a0d70"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f1567184800"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f1567143710"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f1567143710"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f156713b6b0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f1567182620"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f1567de8be0"/></to>
    </wire>
    <wire loc="294:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f1567162de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f1567131060"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f1567de8be0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f15671376c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f1567d88990"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f1567136970"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f1567d87cb0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f1567134b20"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f1567d85020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f1567133e30"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f1567d84350"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f15670e66c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f156666ab40"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15670e6e40"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1566669400"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1566669cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15670e4730"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1566668500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f156666de60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1566666060"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f15670d3020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f15670b92c0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15670ddbf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15670be020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f15670c7ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f15670b35a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f15670c7ad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f15670afba0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f15670c7ad0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f15670aa120"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f1566638140"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15670ddbf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f1566633570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15670c7ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1567017410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15670ddbf0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1566f89e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1566fabcf0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1566f8e0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1566fcd200"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1566fcd200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1566fc7020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1566fb4280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15670ddbf0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1566601540"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15665f4690"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1566600270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1567b0d180"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1566e938b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1566600e80"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1566600e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567afd1e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1566e91020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f15665fe5d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f15665fe5d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567af44c0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15665f3460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1566ef7c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f15665f20e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567afd1e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1566ef7c20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1566eaa580"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1566ea9400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1567b1f630"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1566ea8060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567afd1e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1566ea7720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1567b0d180"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f1566ea6480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f1566ea6c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1566e87020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1567b0d180"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1566e87c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567afd1e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f15665a3540"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1566596690"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f15665a2270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1567b0d180"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1566e60c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f15665a2e80"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f15665a2e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567afd1e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1566e5e2b0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f15665a05d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f15665a05d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567af44c0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1566595460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1566ef7c20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f15665930e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567afd1e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1566e5b410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1567b0d180"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1566e5a060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1567afd1e0"/></to>
    </wire>
    <wire loc="48:SystemCommunicationP.nc">
      <from><interface-ref name="simulateSendWelcome" scoped="" ref="0x7f1566e42710"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:KnowledgeCenterP.nc">
      <from><interface-ref name="sendShipMessages" scoped="" ref="0x7f1566dedba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:KnowledgeCenterP.nc">
      <from><interface-ref name="getShipInfo" scoped="" ref="0x7f1566decb50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:KnowledgeCenterP.nc">
      <from><interface-ref name="sendCargoStatusCheck" scoped="" ref="0x7f1566deec70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="80:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="65:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="shipmainP" loc="1:shipmainP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <documentation loc="106:/opt/tinyos-main/tos/platforms/iris/chips/rf230/RadioConfig.h">
        <short>&#10; The base two logarithm of the number of radio alarm ticks per one millisecond&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC.TaskletC" loc="42(RF230RadioC.TaskletC):/opt/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <instance number="0">
        <component-ref qname="TaskletC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.NeighborhoodC" loc="35(RF230RadioC.NeighborhoodC):/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.NeighborhoodC.NeighborhoodP" loc="37(RF230RadioC.NeighborhoodC.NeighborhoodP):/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="50(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="37(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f15674ec070"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TOne" ref="0x7f1567e0f9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TOne" ref="0x7f1567e0f9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="shipmainC.CSenderC" loc="47(shipmainC.CSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.CSenderC.SenderC" loc="47(shipmainC.CSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.CSenderC.SenderC.AMQueueEntryP" loc="43(shipmainC.CSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="shipmainC.CReceiverC" loc="43(shipmainC.CReceiverC):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CraneCommunicationP" loc="4:CraneCommunicationP.nc">
      <module/>
    </component>
    <component qname="shipmainC.SSenderC" loc="47(shipmainC.SSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.SSenderC.SenderC" loc="47(shipmainC.SSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.SSenderC.SenderC.AMQueueEntryP" loc="43(shipmainC.SSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="shipmainC.SReceiverC" loc="43(shipmainC.SReceiverC):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemCommunicationP" loc="4:SystemCommunicationP.nc">
      <module/>
    </component>
    <component qname="KnowledgeCenterP" loc="16:KnowledgeCenterP.nc">
      <documentation loc="4:KnowledgeCenterP.nc">
        <short>**********************************************************&#10; There may be issues with ship ID's and indexes, first I assumed&#10; that ship ID is always smaller than MAX_SHIP but then changed my&#10; mind and allowed greater ID's.</short>
        <long>**********************************************************&#10; There may be issues with ship ID's and indexes, first I assumed&#10; that ship ID is always smaller than MAX_SHIP but then changed my&#10; mind and allowed greater ID's. Not sure if everything regarding &#10; this change has been resolved.&#10;&#10; Edit: I think I resolved most of it now, but I'll leave this notice up.&#10;&#10; TODO: SHIP_QRMSG is not resolved if update is in progress, but we receive&#10; &#9;&#9; a SHIP_QRMSG message with a ship ID that we don't expect!&#9;&#10;***********************************************************</long>
      </documentation>
      <module/>
    </component>
    <component qname="shipmainC.Timer1" loc="44(shipmainC.Timer1):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CraneControlP" loc="9:CraneControlP.nc">
      <documentation loc="4:CraneControlP.nc">
        <short>**********************************************************&#10; TODO: There is no strategy for what happens after the ship receives&#10; its cargo.</short>
        <long>**********************************************************&#10; TODO: There is no strategy for what happens after the ship receives&#10; its cargo.&#10;***********************************************************</long>
      </documentation>
      <module/>
    </component>
    <component qname="shipmainC.Timer2" loc="44(shipmainC.Timer2):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.Timer3" loc="44(shipmainC.Timer3):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="shipmainC.KDB_CraneControl" loc="1(shipmainC.KDB_CraneControl):KDBUserC.nc">
      <instance number="0">
        <component-ref qname="KDBUserC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ShipControlP" loc="1:ShipControlP.nc">
      <module/>
    </component>
    <component qname="shipmainC.KDB_ShipControl" loc="1(shipmainC.KDB_ShipControl):KDBUserC.nc">
      <instance number="1">
        <component-ref qname="KDBUserC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1567d4b5a0" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1567d4b910" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f1567d4bc80" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1567d3e9f0" loc="41:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1567d3ed80" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f1567d3b170" loc="43:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f1567d3b4c0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1567ca70d0" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1567ca7460" loc="43:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f1567ca77f0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f1567ca7b40" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TaskletC" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7f1567a60020" loc="35:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
          <component-ref qname="NeighborhoodC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7f1567a55810" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
          <component-ref qname="NeighborhoodP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1567875590" loc="83:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f1567867060" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
        <constant name="neigborhoodSize" ref="0x7f15676fb830" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <component-ref qname="UniqueLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
        <constant name="neigborhoodSize" ref="0x7f15676ef020" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
          <component-ref qname="UniqueLayerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f15674ec070" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f15674ec070"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f15674ec380" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f15674e3d20" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f15674e3d20"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f15674e0060" loc="58:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15673e6430" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15673e6430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15673b6880" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15673b6880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f15673b6bb0" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1567366de0" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1567366de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f1567023290" loc="44:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1567023290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f1567023600" loc="44:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1567027d60" loc="51:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1567027d60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f156700e580" loc="52:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f156700e580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f156700e8a0" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1566fc9910" loc="42:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1566fc9910"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f1566fc6120" loc="43:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1566fc6120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1566faa600" loc="55:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1566faa600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1566faadd0" loc="56:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1566faadd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1566fa9220" loc="57:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1566fa9220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1566fa9a00" loc="58:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1566fa9a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1566fa9dd0" loc="59:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1566fa8630" loc="60:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1566fa8630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1566f21360" loc="47:/opt/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1566f1a140" loc="47:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1566f12020" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f1566eef020" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1566e8d390" loc="43:/opt/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="KDBUserC" loc="1:KDBUserC.nc" abstract="">
      <parameters>
        <constant name="id" ref="0x7f1566ced020" loc="1:KDBUserC.nc">
          <component-ref qname="KDBUserC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f1567db6160" loc="58:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567db6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567db64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1567db9c10" loc="57:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f1567db9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1567db8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f1567db19d0" loc="52:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f1567db19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567db1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1567db3a70" loc="46:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1567db3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567db3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f1567dadbb0" loc="50:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1567dadbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f1567db1020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f1567db11b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f1567db1340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f1567db14d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f1567db1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1567da9400" loc="45:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f1567da9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567da9780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1567db0cf0" loc="44:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1567db0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567da90a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f1567da9b00" loc="46:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f1567da9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567da9e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f1567dabb70" loc="41:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f1567dabb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567da2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f1567dab4a0" loc="40:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f1567dab4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567dab820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f1567d9d820" loc="45:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f1567d9d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567d9dba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f1567d97620" loc="44:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f1567d97620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d979a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d97b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d97cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d97e50"/>
        <function-ref name="get" scoped="" ref="0x7f1567d9d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d9d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d9d340"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f1567d9e0e0" loc="43:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f1567d9e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567d9e460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f1567d56cb0" loc="98:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f1567d56cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d55610"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d557a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d55930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d55ac0"/>
        <function-ref name="get" scoped="" ref="0x7f1567d55c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d55de0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d54020"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f1567d72350" loc="72:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f1567d72350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d726d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d72860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d729f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d72b80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d72d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d71020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d711b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d71340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f1567d66350" loc="83:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f1567d66350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d666d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d66860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d669f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d66b80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d66d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d65020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d651b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d65340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f1567d5ccb0" loc="92:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f1567d5ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d5b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d5b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d5b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d5b550"/>
        <function-ref name="get" scoped="" ref="0x7f1567d5b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d5b870"/>
        <function-ref name="set" scoped="" ref="0x7f1567d5ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d5bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f1567d4f060" loc="103:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f1567d4f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d4f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d4f570"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d4f700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d4f890"/>
        <function-ref name="get" scoped="" ref="0x7f1567d4fa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d4fbb0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d4fd40"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f1567d8a350" loc="50:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f1567d8a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d8a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d8a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d8a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d8ab80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d8ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d89020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d891b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f1567d5e670" loc="90:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f1567d5e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d5e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d5eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d5ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d5d020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d5d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d5d340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d5d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d5d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f1567d88990" loc="53:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f1567d88990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d88d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d87020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d871b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d87340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d87660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d877f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d87980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f1567d7b990" loc="64:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f1567d7b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d7bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d7a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d7a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d7a340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d7a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d7a660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d7a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d7a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f1567d6fcb0" loc="75:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f1567d6fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d6e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d6e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d6e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d6e550"/>
        <function-ref name="get" scoped="" ref="0x7f1567d6e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d6e870"/>
        <function-ref name="set" scoped="" ref="0x7f1567d6ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d6eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f1567d63cb0" loc="86:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f1567d63cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d620a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d62230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d623c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d62550"/>
        <function-ref name="get" scoped="" ref="0x7f1567d626e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d62870"/>
        <function-ref name="set" scoped="" ref="0x7f1567d62a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d62b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f1567d90350" loc="45:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f1567d90350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d906d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d90860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d909f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d90b80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d90d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d8f020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d8f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d8f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f1567d84350" loc="56:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f1567d84350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d846d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d84860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d849f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d84b80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d84d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d83020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d831b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f1567d77350" loc="67:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f1567d77350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d776d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d77860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d779f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d77b80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d77d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d76020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d761b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d76340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f1567d6b670" loc="78:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f1567d6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d6b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d6bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d6bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d6a020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d6a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d6a340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d6a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f1567d58670" loc="95:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f1567d58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d589f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d58b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d58d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d57020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d57340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d574d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f1567d52b20" loc="101:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f1567d52b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d51020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d511b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d51340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d514d0"/>
        <function-ref name="get" scoped="" ref="0x7f1567d51660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d517f0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d51980"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d51b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f1567d69cb0" loc="81:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f1567d69cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d680a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d68230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d683c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d68550"/>
        <function-ref name="get" scoped="" ref="0x7f1567d686e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d68870"/>
        <function-ref name="set" scoped="" ref="0x7f1567d68a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d68b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f1567d8dcb0" loc="48:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f1567d8dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d8c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d8c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d8c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d8c550"/>
        <function-ref name="get" scoped="" ref="0x7f1567d8c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d8c870"/>
        <function-ref name="set" scoped="" ref="0x7f1567d8ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d8cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f1567d81cb0" loc="59:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f1567d81cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d800a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d80230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d803c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d80550"/>
        <function-ref name="get" scoped="" ref="0x7f1567d806e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d80870"/>
        <function-ref name="set" scoped="" ref="0x7f1567d80a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d80b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f1567d544e0" loc="99:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f1567d544e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d54860"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d549f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d54b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d54d10"/>
        <function-ref name="get" scoped="" ref="0x7f1567d53020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d531b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d53340"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f1567d7e350" loc="62:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f1567d7e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d7e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d7e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d7e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d7eb80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d7ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d7c020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d7c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d7c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f1567d71670" loc="73:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f1567d71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d719f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d71b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d71d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d70020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d70340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d704d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d70660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f1567d65670" loc="84:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f1567d65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d659f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d65b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d65d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d64020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d64340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d644d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d64660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f1567d5a020" loc="93:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f1567d5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d5a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d5a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d5a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d5a850"/>
        <function-ref name="get" scoped="" ref="0x7f1567d5a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d5ab70"/>
        <function-ref name="set" scoped="" ref="0x7f1567d5ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f1567d89670" loc="51:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f1567d89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d899f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d89b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d89d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d88020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d88340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d884d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f1567d87cb0" loc="54:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f1567d87cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d860a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d86230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d86550"/>
        <function-ref name="get" scoped="" ref="0x7f1567d866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d86870"/>
        <function-ref name="set" scoped="" ref="0x7f1567d86a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d86b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f1567d7acb0" loc="65:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f1567d7acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d790a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d79230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d793c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d79550"/>
        <function-ref name="get" scoped="" ref="0x7f1567d796e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d79870"/>
        <function-ref name="set" scoped="" ref="0x7f1567d79a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d79b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f1567d6d020" loc="76:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f1567d6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d6d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d6d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d6d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d6d850"/>
        <function-ref name="get" scoped="" ref="0x7f1567d6d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d6db70"/>
        <function-ref name="set" scoped="" ref="0x7f1567d6dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f1567d60020" loc="87:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f1567d60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d603a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d60530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d606c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d60850"/>
        <function-ref name="get" scoped="" ref="0x7f1567d609e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d60b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567d60d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f1567d8f670" loc="46:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f1567d8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d8f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d8fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d8fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d8e020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d8e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d8e340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d8e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f1567d83670" loc="57:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f1567d83670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d83af0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d83c80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d83e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d82020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d82340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d824d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d82660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f1567d76670" loc="68:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f1567d76670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d769f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d76b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d76d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d75020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d751b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d75340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d754d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f1567d57990" loc="96:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f1567d57990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d57d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d56020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d56340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d56660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d567f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d56980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f1567d74cb0" loc="71:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f1567d74cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d73410"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d735a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d73730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d738c0"/>
        <function-ref name="get" scoped="" ref="0x7f1567d73a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d73be0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d73d70"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f1567d67020" loc="82:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f1567d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d67530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d676c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d67850"/>
        <function-ref name="get" scoped="" ref="0x7f1567d679e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d67b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567d67d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f1567d5d990" loc="91:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f1567d5d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d5dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d5c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d5c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d5c340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d5c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d5c660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d5c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d5c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f1567d51e40" loc="102:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f1567d51e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d501e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d50370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d50500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d50690"/>
        <function-ref name="get" scoped="" ref="0x7f1567d50820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d509b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d50b40"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d50cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f1567d8b020" loc="49:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f1567d8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d8b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d8b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d8b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d8b850"/>
        <function-ref name="get" scoped="" ref="0x7f1567d8b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d8bb70"/>
        <function-ref name="set" scoped="" ref="0x7f1567d8bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f1567d7f020" loc="60:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f1567d7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d7f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d7f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d7f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d7f850"/>
        <function-ref name="get" scoped="" ref="0x7f1567d7f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d7fb70"/>
        <function-ref name="set" scoped="" ref="0x7f1567d7fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f1567d5f350" loc="89:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f1567d5f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d5f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d5f860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d5f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d5fb80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d5fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d5e020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d5e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d5e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f1567d7c670" loc="63:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f1567d7c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d7c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d7cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d7cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d7b020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d7b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d7b340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d7b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f1567d70990" loc="74:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f1567d70990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d70d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d6f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d6f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d6f340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d6f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d6f660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d6f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d6f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f1567d64990" loc="85:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f1567d64990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d64d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d63020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d63340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d63660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d637f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d63980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f1567d59350" loc="94:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f1567d59350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d596d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d59860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d599f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d59b80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d59d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d58020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d581b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f1567d91020" loc="44:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f1567d91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d91530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d916c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d91850"/>
        <function-ref name="get" scoped="" ref="0x7f1567d919e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d91b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567d91d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f1567d85020" loc="55:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f1567d85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d853a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d85530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d856c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d85850"/>
        <function-ref name="get" scoped="" ref="0x7f1567d859e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d85b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567d85d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f1567d78020" loc="66:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f1567d78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d783a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d78530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d786c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d78850"/>
        <function-ref name="get" scoped="" ref="0x7f1567d789e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d78b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567d78d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f1567d6c350" loc="77:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f1567d6c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d6c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d6c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d6c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d6cb80"/>
        <function-ref name="get" scoped="" ref="0x7f1567d6cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d6b020"/>
        <function-ref name="set" scoped="" ref="0x7f1567d6b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f1567d53800" loc="100:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f1567d53800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d53b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d53d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d52020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d521b0"/>
        <function-ref name="get" scoped="" ref="0x7f1567d52340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d524d0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d52660"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d527f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f1567d6a990" loc="80:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f1567d6a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d6ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d69020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d69340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d69660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d697f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d69980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f1567d75990" loc="69:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f1567d75990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d75d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d74020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d741b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d74340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d74660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d747f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d74980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f1567d8e990" loc="47:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f1567d8e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d8ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d8d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d8d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d8d340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d8d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d8d660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d8d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d8d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f1567d82990" loc="58:/opt/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f1567d82990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d82d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d81020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d81340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d81660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d817f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d81980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1567d03a80" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1567d03a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d03e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d02020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d02340"/>
        <function-ref name="get" scoped="" ref="0x7f1567d024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d02660"/>
        <function-ref name="set" scoped="" ref="0x7f1567d027f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d02980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1567cff020" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1567cff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cff3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cff530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cff6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cff850"/>
        <function-ref name="get" scoped="" ref="0x7f1567cff9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cffb70"/>
        <function-ref name="set" scoped="" ref="0x7f1567cffd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cfe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1567d056b0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1567d056b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d05a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d05bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d05d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d04020"/>
        <function-ref name="get" scoped="" ref="0x7f1567d041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d04340"/>
        <function-ref name="set" scoped="" ref="0x7f1567d044d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1567d02c10" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1567d02c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d01020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d011b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d01340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d014d0"/>
        <function-ref name="get" scoped="" ref="0x7f1567d01660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d017f0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d01980"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d01b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1567cfe2b0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1567cfe2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cfe630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cfe7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cfe950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cfeae0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cfec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cfee00"/>
        <function-ref name="set" scoped="" ref="0x7f1567cfd020"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cfd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1567d048f0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1567d048f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d04c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d04e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d03020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d031b0"/>
        <function-ref name="get" scoped="" ref="0x7f1567d03340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d034d0"/>
        <function-ref name="set" scoped="" ref="0x7f1567d03660"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d037f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1567d01da0" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1567d01da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567d00180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567d00310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567d004a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567d00630"/>
        <function-ref name="get" scoped="" ref="0x7f1567d007c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567d00950"/>
        <function-ref name="set" scoped="" ref="0x7f1567d00ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567d00c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1567cfd440" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1567cfd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cfd7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cfd950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cfdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cfdc70"/>
        <function-ref name="get" scoped="" ref="0x7f1567cfde00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cfb020"/>
        <function-ref name="set" scoped="" ref="0x7f1567cfb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cfb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c909b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c909b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c90d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c8f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c8f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c8f340"/>
        <function-ref name="get" scoped="" ref="0x7f1566c8f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c8f660"/>
        <function-ref name="set" scoped="" ref="0x7f1566c8f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c8f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c8de20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c8de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c8b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c8b350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c8b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c8b670"/>
        <function-ref name="get" scoped="" ref="0x7f1566c8b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c8b990"/>
        <function-ref name="set" scoped="" ref="0x7f1566c8bb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c8bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c880a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c880a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c88420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c885b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c88740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c888d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566c88a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c88bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566c88d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c803f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c803f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c80770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c80900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c80a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c80c20"/>
        <function-ref name="get" scoped="" ref="0x7f1566c80db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c7f020"/>
        <function-ref name="set" scoped="" ref="0x7f1566c7f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c7f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c7d6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c7d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c7da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c7dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c7dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c7c020"/>
        <function-ref name="get" scoped="" ref="0x7f1566c7c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c7c340"/>
        <function-ref name="set" scoped="" ref="0x7f1566c7c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c7c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c7a9b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c7a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c7ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c79020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c79340"/>
        <function-ref name="get" scoped="" ref="0x7f1566c794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c79660"/>
        <function-ref name="set" scoped="" ref="0x7f1566c797f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c79980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c77e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c77e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c761c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c76350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c764e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c76670"/>
        <function-ref name="get" scoped="" ref="0x7f1566c76800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c76990"/>
        <function-ref name="set" scoped="" ref="0x7f1566c76b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c76cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c730a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c730a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c73420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c735b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c73740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c738d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566c73a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c73bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566c73d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1567cf4da0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1567cf4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cf3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cf3310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cf34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cf3630"/>
        <function-ref name="get" scoped="" ref="0x7f1567cf37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cf3950"/>
        <function-ref name="set" scoped="" ref="0x7f1567cf3ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cf3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1567cef440" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1567cef440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cef7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cef950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cefae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cefc70"/>
        <function-ref name="get" scoped="" ref="0x7f1567cefe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cee020"/>
        <function-ref name="set" scoped="" ref="0x7f1567cee1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1567cf6a20" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1567cf6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cf6da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cf5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cf51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cf5340"/>
        <function-ref name="get" scoped="" ref="0x7f1567cf54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cf5660"/>
        <function-ref name="set" scoped="" ref="0x7f1567cf57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cf5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1567cf2020" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1567cf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cf23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cf2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cf26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cf2850"/>
        <function-ref name="get" scoped="" ref="0x7f1567cf29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cf2b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567cf2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1567cee5d0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1567cee5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cee950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567ceeae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567ceec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567ceee00"/>
        <function-ref name="get" scoped="" ref="0x7f1567ced020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567ced1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567ced340"/>
        <function-ref name="clr" scoped="" ref="0x7f1567ced4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1567cf5c10" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1567cf5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cf4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cf41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cf4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cf44d0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cf4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cf47f0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cf4980"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cf4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1567cf12b0" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1567cf12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cf1630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cf17c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cf1950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cf1ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cf1c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cf1e00"/>
        <function-ref name="set" scoped="" ref="0x7f1567cef020"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1567ced760" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1567ced760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cedae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cedc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cede00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cec020"/>
        <function-ref name="get" scoped="" ref="0x7f1567cec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cec340"/>
        <function-ref name="set" scoped="" ref="0x7f1567cec4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c20c90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c20c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c1f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c1f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c1f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c1f550"/>
        <function-ref name="get" scoped="" ref="0x7f1566c1f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c1f870"/>
        <function-ref name="set" scoped="" ref="0x7f1566c1fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c1fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c1de20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c1de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c1c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c1c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c1c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c1c670"/>
        <function-ref name="get" scoped="" ref="0x7f1566c1c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c1c990"/>
        <function-ref name="set" scoped="" ref="0x7f1566c1cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c1ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c190a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c19420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c195b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c19740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c198d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566c19a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c19bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566c19d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c153f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c153f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c15770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c15900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c15a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c15c20"/>
        <function-ref name="get" scoped="" ref="0x7f1566c15db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c14020"/>
        <function-ref name="set" scoped="" ref="0x7f1566c141b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c14340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c126d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c126d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c12a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c12be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c12d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c11020"/>
        <function-ref name="get" scoped="" ref="0x7f1566c111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c11340"/>
        <function-ref name="set" scoped="" ref="0x7f1566c114d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c0f9b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c0f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c0fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c0e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c0e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c0e340"/>
        <function-ref name="get" scoped="" ref="0x7f1566c0e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c0e660"/>
        <function-ref name="set" scoped="" ref="0x7f1566c0e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c0e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c0ce20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c0ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c0b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c0b350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c0b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c0b670"/>
        <function-ref name="get" scoped="" ref="0x7f1566c0b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c0b990"/>
        <function-ref name="set" scoped="" ref="0x7f1566c0bb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c0bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566c080a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566c080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566c08420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566c085b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566c08740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566c088d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566c08a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566c08bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566c08d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566c07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1567ce3020" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1567ce3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567ce33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567ce3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567ce36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567ce3850"/>
        <function-ref name="get" scoped="" ref="0x7f1567ce39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567ce3b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567ce3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567ce2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1567ce05d0" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1567ce05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567ce0950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567ce0ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567ce0c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567ce0e00"/>
        <function-ref name="get" scoped="" ref="0x7f1567cdf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cdf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cdf340"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cdf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1567ce7d30" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1567ce7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567ce60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567ce6270"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567ce6400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567ce6590"/>
        <function-ref name="get" scoped="" ref="0x7f1567ce6720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567ce68b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567ce6a40"/>
        <function-ref name="clr" scoped="" ref="0x7f1567ce6bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1567ce22b0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1567ce22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567ce2630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567ce27c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567ce2950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567ce2ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1567ce2c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567ce2e00"/>
        <function-ref name="set" scoped="" ref="0x7f1567ce1020"/>
        <function-ref name="clr" scoped="" ref="0x7f1567ce11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1567cdf760" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1567cdf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cdfae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cdfc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cdfe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cde020"/>
        <function-ref name="get" scoped="" ref="0x7f1567cde1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cde340"/>
        <function-ref name="set" scoped="" ref="0x7f1567cde4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cde660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1567ce6e60" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1567ce6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567ce4210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567ce43a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567ce4530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567ce46c0"/>
        <function-ref name="get" scoped="" ref="0x7f1567ce4850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567ce49e0"/>
        <function-ref name="set" scoped="" ref="0x7f1567ce4b70"/>
        <function-ref name="clr" scoped="" ref="0x7f1567ce4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1567ce1440" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1567ce1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567ce17c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567ce1950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567ce1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567ce1c70"/>
        <function-ref name="get" scoped="" ref="0x7f1567ce1e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567ce0020"/>
        <function-ref name="set" scoped="" ref="0x7f1567ce01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567ce0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1567cde8f0" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1567cde8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cdec70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cdee00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cdd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cdd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cdd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cdd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cdd660"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cdd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566bb5c90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566bb5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566bb40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566bb4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566bb43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566bb4550"/>
        <function-ref name="get" scoped="" ref="0x7f1566bb46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566bb4870"/>
        <function-ref name="set" scoped="" ref="0x7f1566bb4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1566bb4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566bb2e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566bb2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566bb11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566bb1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566bb14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566bb1670"/>
        <function-ref name="get" scoped="" ref="0x7f1566bb1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566bb1990"/>
        <function-ref name="set" scoped="" ref="0x7f1566bb1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566bb1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566bae0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566bae0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566bae420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566bae5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566bae740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566bae8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566baea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566baebf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566baed80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566bac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566baa3f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566baa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566baa770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566baa900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566baaa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566baac20"/>
        <function-ref name="get" scoped="" ref="0x7f1566baadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ba9020"/>
        <function-ref name="set" scoped="" ref="0x7f1566ba91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ba9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566ba76d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566ba76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566ba7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566ba7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566ba7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566ba6020"/>
        <function-ref name="get" scoped="" ref="0x7f1566ba61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ba6340"/>
        <function-ref name="set" scoped="" ref="0x7f1566ba64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ba6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566ba49b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566ba49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566ba4d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566ba3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566ba31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566ba3340"/>
        <function-ref name="get" scoped="" ref="0x7f1566ba34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ba3660"/>
        <function-ref name="set" scoped="" ref="0x7f1566ba37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ba3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566ba1e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566ba1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566ba01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566ba0350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566ba04e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566ba0670"/>
        <function-ref name="get" scoped="" ref="0x7f1566ba0800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ba0990"/>
        <function-ref name="set" scoped="" ref="0x7f1566ba0b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ba0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566b9d0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566b9d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566b9d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566b9d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566b9d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566b9d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566b9da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566b9dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566b9dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566b9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1567cd4440" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1567cd4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cd47c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cd4950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cd4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cd4c70"/>
        <function-ref name="get" scoped="" ref="0x7f1567cd4e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cd3020"/>
        <function-ref name="set" scoped="" ref="0x7f1567cd31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cd3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1567cd18f0" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1567cd18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cd1c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cd1e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cd0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cd01b0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cd0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cd04d0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cd0660"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cd07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1567cd6020" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1567cd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cd63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cd6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cd66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cd6850"/>
        <function-ref name="get" scoped="" ref="0x7f1567cd69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cd6b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567cd6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cd5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1567cd35d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1567cd35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cd3950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cd3ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cd3c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cd3e00"/>
        <function-ref name="get" scoped="" ref="0x7f1567cd2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cd21b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cd2340"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cd24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1567cd0a80" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1567cd0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cd0e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567ccf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567ccf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567ccf340"/>
        <function-ref name="get" scoped="" ref="0x7f1567ccf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567ccf660"/>
        <function-ref name="set" scoped="" ref="0x7f1567ccf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567ccf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1567cd52b0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1567cd52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cd5630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cd57c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cd5950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cd5ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cd5c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cd5e00"/>
        <function-ref name="set" scoped="" ref="0x7f1567cd4020"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1567cd2760" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1567cd2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cd2ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cd2c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cd2e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cd1020"/>
        <function-ref name="get" scoped="" ref="0x7f1567cd11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cd1340"/>
        <function-ref name="set" scoped="" ref="0x7f1567cd14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1567ccfc10" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1567ccfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cce020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cce1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cce340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cce4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cce7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cce980"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cceb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566b4ac90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566b4ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566b490a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566b49230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566b493c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566b49550"/>
        <function-ref name="get" scoped="" ref="0x7f1566b496e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566b49870"/>
        <function-ref name="set" scoped="" ref="0x7f1566b49a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1566b49b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566b47e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566b47e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566b461c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566b46350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566b464e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566b46670"/>
        <function-ref name="get" scoped="" ref="0x7f1566b46800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566b46990"/>
        <function-ref name="set" scoped="" ref="0x7f1566b46b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566b46cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566b430a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566b430a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566b43420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566b435b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566b43740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566b438d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566b43a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566b43bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566b43d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566b42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566b403f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566b403f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566b40770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566b40900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566b40a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566b40c20"/>
        <function-ref name="get" scoped="" ref="0x7f1566b40db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566b3e020"/>
        <function-ref name="set" scoped="" ref="0x7f1566b3e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566b3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566b3c6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566b3c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566b3ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566b3cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566b3cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566b3b020"/>
        <function-ref name="get" scoped="" ref="0x7f1566b3b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566b3b340"/>
        <function-ref name="set" scoped="" ref="0x7f1566b3b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566b3b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566b399b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566b399b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566b39d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566b38020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566b381b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566b38340"/>
        <function-ref name="get" scoped="" ref="0x7f1566b384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566b38660"/>
        <function-ref name="set" scoped="" ref="0x7f1566b387f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566b38980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566b36e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566b36e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566b351c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566b35350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566b354e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566b35670"/>
        <function-ref name="get" scoped="" ref="0x7f1566b35800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566b35990"/>
        <function-ref name="set" scoped="" ref="0x7f1566b35b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566b35cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566b320a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566b320a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566b32420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566b325b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566b32740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566b328d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566b32a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566b32bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566b32d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566b31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1567cc5760" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1567cc5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cc5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cc5c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cc5e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cc4020"/>
        <function-ref name="get" scoped="" ref="0x7f1567cc41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cc4340"/>
        <function-ref name="set" scoped="" ref="0x7f1567cc44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cc4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1567cc2c10" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1567cc2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cc1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cc11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cc1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cc14d0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cc1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cc17f0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cc1980"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cc1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1567cc73f0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1567cc73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cc7770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cc7900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cc7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cc7c20"/>
        <function-ref name="get" scoped="" ref="0x7f1567cc7db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cc6020"/>
        <function-ref name="set" scoped="" ref="0x7f1567cc61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cc6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1567cc48f0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1567cc48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cc4c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cc4e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cc3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cc31b0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cc3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cc34d0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cc3660"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cc37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1567cc1da0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1567cc1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cbf180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cbf310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cbf4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cbf630"/>
        <function-ref name="get" scoped="" ref="0x7f1567cbf7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cbf950"/>
        <function-ref name="set" scoped="" ref="0x7f1567cbfae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cbfc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1567cc65d0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1567cc65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cc6950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cc6ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cc6c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cc6e00"/>
        <function-ref name="get" scoped="" ref="0x7f1567cc5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cc51b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cc5340"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cc54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1567cc3a80" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1567cc3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cc3e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cc2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cc21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cc2340"/>
        <function-ref name="get" scoped="" ref="0x7f1567cc24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cc2660"/>
        <function-ref name="set" scoped="" ref="0x7f1567cc27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cc2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1567cbe020" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1567cbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cbe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cbe530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cbe6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cbe850"/>
        <function-ref name="get" scoped="" ref="0x7f1567cbe9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cbeb70"/>
        <function-ref name="set" scoped="" ref="0x7f1567cbed00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566addc90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566addc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566adc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566adc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566adc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566adc550"/>
        <function-ref name="get" scoped="" ref="0x7f1566adc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566adc870"/>
        <function-ref name="set" scoped="" ref="0x7f1566adca00"/>
        <function-ref name="clr" scoped="" ref="0x7f1566adcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566adae20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566adae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566ad91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566ad9350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566ad94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566ad9670"/>
        <function-ref name="get" scoped="" ref="0x7f1566ad9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ad9990"/>
        <function-ref name="set" scoped="" ref="0x7f1566ad9b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ad9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566ad60a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566ad60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566ad6420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566ad65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566ad6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566ad68d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566ad6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ad6bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566ad6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ad5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566ad33f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566ad33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566ad3770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566ad3900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566ad3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566ad3c20"/>
        <function-ref name="get" scoped="" ref="0x7f1566ad3db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ad1020"/>
        <function-ref name="set" scoped="" ref="0x7f1566ad11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ad1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566acf6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566acf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566acfa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566acfbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566acfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566ace020"/>
        <function-ref name="get" scoped="" ref="0x7f1566ace1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ace340"/>
        <function-ref name="set" scoped="" ref="0x7f1566ace4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ace660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566acc9b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566acc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566accd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566acb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566acb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566acb340"/>
        <function-ref name="get" scoped="" ref="0x7f1566acb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566acb660"/>
        <function-ref name="set" scoped="" ref="0x7f1566acb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566acb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566ac9e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566ac9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566ac81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566ac8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566ac84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566ac8670"/>
        <function-ref name="get" scoped="" ref="0x7f1566ac8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ac8990"/>
        <function-ref name="set" scoped="" ref="0x7f1566ac8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ac8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566ac50a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566ac50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566ac5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566ac55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566ac5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566ac58d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566ac5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566ac5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566ac5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566ac4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1567cb6a80" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1567cb6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cb6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cb5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cb51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cb5340"/>
        <function-ref name="get" scoped="" ref="0x7f1567cb54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cb5660"/>
        <function-ref name="set" scoped="" ref="0x7f1567cb57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cb5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1567cb1020" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1567cb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cb13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cb1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cb16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cb1850"/>
        <function-ref name="get" scoped="" ref="0x7f1567cb19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cb1b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567cb1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1567cb87a0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1567cb87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cb8b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cb8cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cb8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cb7020"/>
        <function-ref name="get" scoped="" ref="0x7f1567cb71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cb7340"/>
        <function-ref name="set" scoped="" ref="0x7f1567cb74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1567cb5c10" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1567cb5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cb3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cb31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cb3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cb34d0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cb3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cb37f0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cb3980"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cb3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1567cb02b0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1567cb02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cb0630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cb07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cb0950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cb0ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cb0c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cb0e00"/>
        <function-ref name="set" scoped="" ref="0x7f1567caf020"/>
        <function-ref name="clr" scoped="" ref="0x7f1567caf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1567cb78f0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1567cb78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cb7c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cb7e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cb6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cb61b0"/>
        <function-ref name="get" scoped="" ref="0x7f1567cb6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cb64d0"/>
        <function-ref name="set" scoped="" ref="0x7f1567cb6660"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cb67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1567cb3da0" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1567cb3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567cb2180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567cb2310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cb24a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cb2630"/>
        <function-ref name="get" scoped="" ref="0x7f1567cb27c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cb2950"/>
        <function-ref name="set" scoped="" ref="0x7f1567cb2ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cb2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1567caf440" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1567caf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567caf7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567caf950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567cafae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567cafc70"/>
        <function-ref name="get" scoped="" ref="0x7f1567cafe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567cae020"/>
        <function-ref name="set" scoped="" ref="0x7f1567cae1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567cae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566a72c90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566a72c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566a710a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566a71230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566a713c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566a71550"/>
        <function-ref name="get" scoped="" ref="0x7f1566a716e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566a71870"/>
        <function-ref name="set" scoped="" ref="0x7f1566a71a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1566a71b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566a6fe20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566a6fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566a6e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566a6e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566a6e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566a6e670"/>
        <function-ref name="get" scoped="" ref="0x7f1566a6e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566a6e990"/>
        <function-ref name="set" scoped="" ref="0x7f1566a6eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566a6ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566a6b0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566a6b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566a6b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566a6b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566a6b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566a6b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566a6ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566a6bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566a6bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566a6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566a683f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566a683f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566a68770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566a68900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566a68a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566a68c20"/>
        <function-ref name="get" scoped="" ref="0x7f1566a68db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566a67020"/>
        <function-ref name="set" scoped="" ref="0x7f1566a671b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566a67340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566a656d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566a656d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566a65a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566a65be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566a65d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566a63020"/>
        <function-ref name="get" scoped="" ref="0x7f1566a631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566a63340"/>
        <function-ref name="set" scoped="" ref="0x7f1566a634d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566a63660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566a619b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566a619b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566a61d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566a60020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566a601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566a60340"/>
        <function-ref name="get" scoped="" ref="0x7f1566a604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566a60660"/>
        <function-ref name="set" scoped="" ref="0x7f1566a607f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1566a60980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566a5ee20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566a5ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566a5d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566a5d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566a5d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566a5d670"/>
        <function-ref name="get" scoped="" ref="0x7f1566a5d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566a5d990"/>
        <function-ref name="set" scoped="" ref="0x7f1566a5db20"/>
        <function-ref name="clr" scoped="" ref="0x7f1566a5dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1566a5a0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1566a5a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1566a5a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1566a5a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1566a5a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1566a5a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1566a5aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1566a5abf0"/>
        <function-ref name="set" scoped="" ref="0x7f1566a5ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f1566a59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567ca8a20" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567ca8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567ca8da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c91020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c91340"/>
        <function-ref name="get" scoped="" ref="0x7f1567c914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c91660"/>
        <function-ref name="set" scoped="" ref="0x7f1567c917f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c91980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c8c6d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c8c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c8ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c8cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c8cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c8b020"/>
        <function-ref name="get" scoped="" ref="0x7f1567c8b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c8b340"/>
        <function-ref name="set" scoped="" ref="0x7f1567c8b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c87160" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c87160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c874e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c87670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c87800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c87990"/>
        <function-ref name="get" scoped="" ref="0x7f1567c87b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c87cb0"/>
        <function-ref name="set" scoped="" ref="0x7f1567c87e40"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c82c90" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c82c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c810a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c81230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c813c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c81550"/>
        <function-ref name="get" scoped="" ref="0x7f1567c816e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c81870"/>
        <function-ref name="set" scoped="" ref="0x7f1567c81a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c81b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c7c6d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c7c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c7ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c7cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c7cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c7b020"/>
        <function-ref name="get" scoped="" ref="0x7f1567c7b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c7b340"/>
        <function-ref name="set" scoped="" ref="0x7f1567c7b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c77160" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c77160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c774e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c77670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c77800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c77990"/>
        <function-ref name="get" scoped="" ref="0x7f1567c77b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c77cb0"/>
        <function-ref name="set" scoped="" ref="0x7f1567c77e40"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c72c90" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c72c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c710a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c71230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c713c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c71550"/>
        <function-ref name="get" scoped="" ref="0x7f1567c716e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c71870"/>
        <function-ref name="set" scoped="" ref="0x7f1567c71a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c71b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c6c6d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c6c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c6ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c6cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c6cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c6b020"/>
        <function-ref name="get" scoped="" ref="0x7f1567c6b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c6b340"/>
        <function-ref name="set" scoped="" ref="0x7f1567c6b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c67160" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c67160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c674e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c67670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c67800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c67990"/>
        <function-ref name="get" scoped="" ref="0x7f1567c67b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c67cb0"/>
        <function-ref name="set" scoped="" ref="0x7f1567c67e40"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c62c90" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c62c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c610a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c61230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c613c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c61550"/>
        <function-ref name="get" scoped="" ref="0x7f1567c616e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c61870"/>
        <function-ref name="set" scoped="" ref="0x7f1567c61a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c61b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c5c6d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c5c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c5ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c5cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c5cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c5b020"/>
        <function-ref name="get" scoped="" ref="0x7f1567c5b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c5b340"/>
        <function-ref name="set" scoped="" ref="0x7f1567c5b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c5b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c57160" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c57160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c574e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c57670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c57800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c57990"/>
        <function-ref name="get" scoped="" ref="0x7f1567c57b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c57cb0"/>
        <function-ref name="set" scoped="" ref="0x7f1567c57e40"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c52c90" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c52c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c510a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c51230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c513c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c51550"/>
        <function-ref name="get" scoped="" ref="0x7f1567c516e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c51870"/>
        <function-ref name="set" scoped="" ref="0x7f1567c51a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c51b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1567c4c6d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1567c4c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567c4ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567c4cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567c4cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567c4b020"/>
        <function-ref name="get" scoped="" ref="0x7f1567c4b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567c4b340"/>
        <function-ref name="set" scoped="" ref="0x7f1567c4b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567c4b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1567c0f020" loc="61:/opt/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1567c0f020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f1567f013a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f1567f013a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567c0f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f1567c0f690" loc="62:/opt/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1567c0f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f1567c0fa10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f1567c0fba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f1567c0fd30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f1567c0e020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f1567c0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1567bef720" loc="60:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1567bef720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567befaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1567db4dc0" loc="57:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f1567db4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1567bf0180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f1567bef020" loc="59:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f1567bef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567bef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f1567bf0470" loc="58:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f1567bf0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567bf07f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1567bf0980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1567bf0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1567ecf940" loc="48:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f1567ecf940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1567ecfcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1567ecfe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1567ed8510" loc="47:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f1567ed8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567ed8890"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1567ed8a20"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1567ed8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1567e09d30" loc="56:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f1567e09d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1567e080e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1567e08270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f1567e042c0" loc="57:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f1567e042c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1567e04640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1567e047d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1567e04960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1567e0ae40" loc="55:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f1567e0ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567e091e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1567e09370"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1567e09500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f1567de5330" loc="86:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1567de5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1567de56b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f1567e203b0" loc="82:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f1567e203b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1567e20730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1567e208c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1567e20a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f1567de8be0" loc="83:/opt/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f1567de8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1567dea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1567bd5a80" loc="46:/opt/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1567bd5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1567bd5e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1567bdf020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1567bdf1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1567bdf340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1567bdf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1567bdf660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1567bdf7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1567bdfe30"/>
        <function-ref name="set" scoped="" ref="0x7f1567bdf980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1567bdfb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1567bdfca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1567bd1b90" loc="50:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f1567bd1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567bd0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567bd01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567bd0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567bd04d0"/>
        <function-ref name="get" scoped="" ref="0x7f1567bd0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567bd07f0"/>
        <function-ref name="set" scoped="" ref="0x7f1567bd0980"/>
        <function-ref name="clr" scoped="" ref="0x7f1567bd0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1567bdedc0" loc="46:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1567bdedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567bd2180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1567bd0e30" loc="51:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f1567bd0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567bcf1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567bcf370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567bcf500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567bcf690"/>
        <function-ref name="get" scoped="" ref="0x7f1567bcf820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567bcf9b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567bcfb40"/>
        <function-ref name="clr" scoped="" ref="0x7f1567bcfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1567bd2400" loc="47:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1567bd2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1567bd2780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1567bd2910"/>
        <function-ref name="led1On" scoped="" ref="0x7f1567bd2aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1567bd2c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1567bd2dc0"/>
        <function-ref name="get" scoped="" ref="0x7f1567bd1020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1567bd11b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1567bd17f0"/>
        <function-ref name="set" scoped="" ref="0x7f1567bd1340"/>
        <function-ref name="led0On" scoped="" ref="0x7f1567bd14d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1567bd1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1567bce020" loc="52:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f1567bce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567bce3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567bce530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567bce6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567bce850"/>
        <function-ref name="get" scoped="" ref="0x7f1567bce9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567bceb70"/>
        <function-ref name="set" scoped="" ref="0x7f1567bced00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567bcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f1567bb1020" loc="44:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f1567bb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567bb13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567bb1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567bb16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567bb1850"/>
        <function-ref name="get" scoped="" ref="0x7f1567bb19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567bb1b70"/>
        <function-ref name="set" scoped="" ref="0x7f1567bb1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1567bb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f1567bb0380" loc="45:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f1567bb0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567bb0700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567bb0890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567bb0a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567bb0bb0"/>
        <function-ref name="get" scoped="" ref="0x7f1567bb0d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567baf020"/>
        <function-ref name="set" scoped="" ref="0x7f1567baf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567baf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f1567bae920" loc="47:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1567bae920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567baeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f1567baf6a0" loc="46:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f1567baf6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567bafa20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567bafbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567bafd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567bae020"/>
        <function-ref name="get" scoped="" ref="0x7f1567bae1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567bae340"/>
        <function-ref name="set" scoped="" ref="0x7f1567bae4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567bae660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f1567ba3140" loc="5:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7f1567ba3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1567ba34c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1567ba3650"/>
        <function-ref name="start" scoped="" ref="0x7f1567ba37e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1567ba3970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1567ba6020" loc="3:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f1567ba6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1567ba63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendWelcomeMsg" ref="0x7f1567b9ce70" loc="7:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendWelcomeMsg" scoped="" ref="0x7f1567b9ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1567ba2220"/>
        <function-ref name="stop" scoped="" ref="0x7f1567ba23b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1567ba6660" loc="4:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1567ba6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1567ba69e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1567ba6b70"/>
        <function-ref name="led1On" scoped="" ref="0x7f1567ba6d00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1567ba5020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1567ba51b0"/>
        <function-ref name="get" scoped="" ref="0x7f1567ba5340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1567ba54d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1567ba5b10"/>
        <function-ref name="set" scoped="" ref="0x7f1567ba5660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1567ba57f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1567ba5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ship" ref="0x7f1567b9c590" loc="6:shipmainP.nc">
      <component-ref qname="shipmainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ship" scoped="" ref="0x7f1567b9c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1567b9c910"/>
        <function-ref name="stop" scoped="" ref="0x7f1567b9caa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1567b536a0" loc="41:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1567b536a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1567b53a20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1567b53bb0"/>
        <function-ref name="start" scoped="" ref="0x7f1567b53d40"/>
        <function-ref name="stop" scoped="" ref="0x7f1567b52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1567b166d0" loc="46:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f1567b166d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1567b16a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1567b0d180" loc="48:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1567b0d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567b0d500"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567b0d690"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567b0d820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567b0d9b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567b0db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1567b1f630" loc="43:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1567b1f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567b1f9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567b1fb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567b1fcd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567b1fe60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567b51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1567b1e020" loc="45:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f1567b1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567b1e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1567af1dd0" loc="52:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567af1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1567afa180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1567afa310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1567afa4a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1567afa630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1567b29390" loc="44:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1567b29390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567b29710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1567af44c0" loc="51:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567af44c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1567af4840"/>
        <function-ref name="noAck" scoped="" ref="0x7f1567af49d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1567af4b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1567af5020" loc="53:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f1567af5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1567af53a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1567af5530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1567af56c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1567af5850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1567af59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1567afd1e0" loc="49:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1567afd1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1567afd560"/>
        <function-ref name="source" scoped="" ref="0x7f1567afd6f0"/>
        <function-ref name="address" scoped="" ref="0x7f1567afd880"/>
        <function-ref name="destination" scoped="" ref="0x7f1567afda10"/>
        <function-ref name="setSource" scoped="" ref="0x7f1567afdba0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1567afdd30"/>
        <function-ref name="type" scoped="" ref="0x7f1567b0e020"/>
        <function-ref name="setType" scoped="" ref="0x7f1567b0e1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1567b0e340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1567b0e4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1567b0e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1567ae5d40" loc="54:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f1567ae5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1567aef0e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1567aef270"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1567aef400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f1567ae1d70" loc="56:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f1567ae1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1567ae4330"/>
        <function-ref name="clear" scoped="" ref="0x7f1567ae4a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f1567ae7ba0"/>
        <function-ref name="set" scoped="" ref="0x7f1567adb210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1567adbe60" loc="57:/opt/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567adbe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1567ad9500"/>
        <function-ref name="clear" scoped="" ref="0x7f1567ad9c30"/>
        <function-ref name="isValid" scoped="" ref="0x7f1567adada0"/>
        <function-ref name="set" scoped="" ref="0x7f1567ad73b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1567ad6610" loc="45:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1567ad6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1567ad6990"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1567ad6b20"/>
        <function-ref name="start" scoped="" ref="0x7f1567ad6cb0"/>
        <function-ref name="stop" scoped="" ref="0x7f1567ad6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f1567ac0c40" loc="62:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f1567ac0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567abd3c0"/>
        <function-ref name="get" scoped="" ref="0x7f1567abedf0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1567abe8a0"/>
        <function-ref name="set" scoped="" ref="0x7f1567abd910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1567acf020" loc="50:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f1567acf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1567acf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1567acf630" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1567acf630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567acf9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567acfb40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567acfcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567acfe60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567ace020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1567ad3640" loc="47:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1567ad3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567ad39c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567ad3b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567ad3ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567ad3e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567ad2030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1567ad1430" loc="49:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f1567ad1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567ad17b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f1567ac2660" loc="61:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1567ac2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567ac1e70"/>
        <function-ref name="get" scoped="" ref="0x7f1567ac1920"/>
        <function-ref name="isSet" scoped="" ref="0x7f1567ac13d0"/>
        <function-ref name="set" scoped="" ref="0x7f1567ac03f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1567acc4b0" loc="56:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567acc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1567acc830"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1567acc9c0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1567accb50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1567accce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1567ad2810" loc="48:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1567ad2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567ad2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f1567ab9ac0" loc="66:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567ab9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1567ab40d0"/>
        <function-ref name="clear" scoped="" ref="0x7f1567ab4800"/>
        <function-ref name="isValid" scoped="" ref="0x7f1567ab5970"/>
        <function-ref name="set" scoped="" ref="0x7f1567ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f1567ab65d0" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1567ab65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1567ab9240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f1567ac9110" loc="60:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1567ac9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567ac8830"/>
        <function-ref name="get" scoped="" ref="0x7f1567ac82e0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1567ac9d40"/>
        <function-ref name="set" scoped="" ref="0x7f1567ac8d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1567acd990" loc="55:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567acd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1567acdd10"/>
        <function-ref name="noAck" scoped="" ref="0x7f1567acc020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1567acc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1567acb020" loc="57:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f1567acb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1567acb3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1567acb530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1567acb6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1567acb850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1567acb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1567ace2d0" loc="53:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1567ace2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1567ace650"/>
        <function-ref name="source" scoped="" ref="0x7f1567ace7e0"/>
        <function-ref name="address" scoped="" ref="0x7f1567ace970"/>
        <function-ref name="destination" scoped="" ref="0x7f1567aceb00"/>
        <function-ref name="setSource" scoped="" ref="0x7f1567acec90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1567acee20"/>
        <function-ref name="type" scoped="" ref="0x7f1567acd020"/>
        <function-ref name="setType" scoped="" ref="0x7f1567acd1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1567acd340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1567acd4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1567acd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1567acbcb0" loc="58:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f1567acbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1567aca0a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1567aca230"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1567aca3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1567ab8800" loc="63:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1567ab8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1567ab8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1567ab3c70" loc="67:/opt/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567ab3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1567ab0210"/>
        <function-ref name="clear" scoped="" ref="0x7f1567ab0940"/>
        <function-ref name="isValid" scoped="" ref="0x7f1567ab1ac0"/>
        <function-ref name="set" scoped="" ref="0x7f1567aaf090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1567aab270" loc="41:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1567aab270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1567aab5f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1567aab780"/>
        <function-ref name="start" scoped="" ref="0x7f1567aab910"/>
        <function-ref name="stop" scoped="" ref="0x7f1567aabaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f1567a823b0" loc="85:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f1567a823b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567a81ac0"/>
        <function-ref name="get" scoped="" ref="0x7f1567a81570"/>
        <function-ref name="isSet" scoped="" ref="0x7f1567a81020"/>
        <function-ref name="set" scoped="" ref="0x7f1567a80090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f1567aa3020" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f1567aa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1567aa33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f1567a9b5c0" loc="67:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f1567a9b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1567a9b940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1567a9bad0"/>
        <function-ref name="request" scoped="" ref="0x7f1567a9bc60"/>
        <function-ref name="granted" scoped="" ref="0x7f1567a9bdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1567a9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1567aa8d60" loc="57:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f1567aa8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1567aa7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1567a79660" loc="90:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567a79660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1567a78ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f1567a77460"/>
        <function-ref name="isValid" scoped="" ref="0x7f1567a785b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567a77b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1567aaa2c0" loc="54:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1567aaa2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567aaa640"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567aaa7d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567aaa960"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567aaaaf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567aaac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1567aa81d0" loc="56:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f1567aa81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567aa8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f1567a8d760" loc="69:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1567a8d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f1567a8dae0"/>
        <function-ref name="address" scoped="" ref="0x7f1567a8dc70"/>
        <function-ref name="destination" scoped="" ref="0x7f1567a8de00"/>
        <function-ref name="setSource" scoped="" ref="0x7f1567a95020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1567a951b0"/>
        <function-ref name="pan" scoped="" ref="0x7f1567a95340"/>
        <function-ref name="setPan" scoped="" ref="0x7f1567a954d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1567a95660"/>
        <function-ref name="localPan" scoped="" ref="0x7f1567a957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f1567a95bb0" loc="70:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f1567a95bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567a940a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567a94230"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567a943c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567a94550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567a946e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1567a8b4b0" loc="74:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567a8b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1567a8b830"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1567a8b9c0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1567a8bb50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1567a8bce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f1567a87e80" loc="84:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1567a87e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567a845e0"/>
        <function-ref name="get" scoped="" ref="0x7f1567a84090"/>
        <function-ref name="isSet" scoped="" ref="0x7f1567a85ad0"/>
        <function-ref name="set" scoped="" ref="0x7f1567a84b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1567aa94d0" loc="55:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1567aa94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567aa9850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f1567aa6ba0" loc="59:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f1567aa6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567aa5020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567aa51b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567aa5340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567aa54d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567aa5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f1567a7d550" loc="89:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567a7d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1567a7cb00"/>
        <function-ref name="clear" scoped="" ref="0x7f1567a7b2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1567a7c3d0"/>
        <function-ref name="set" scoped="" ref="0x7f1567a7b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f1567a7e020" loc="88:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1567a7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1567a7ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f1567a898e0" loc="83:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1567a898e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567a87090"/>
        <function-ref name="get" scoped="" ref="0x7f1567a88af0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1567a885a0"/>
        <function-ref name="set" scoped="" ref="0x7f1567a875e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1567a94a10" loc="73:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567a94a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1567a94d90"/>
        <function-ref name="noAck" scoped="" ref="0x7f1567a8b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1567a8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f1567a9da60" loc="63:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f1567a9da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567a9dde0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567aa4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567aa41b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567aa4340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567aa44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1567a8a020" loc="75:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f1567a8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1567a8a3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1567a8a530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1567a8a6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1567a8a850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1567a8a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1567aa7430" loc="58:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1567aa7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1567aa77b0"/>
        <function-ref name="source" scoped="" ref="0x7f1567aa7940"/>
        <function-ref name="address" scoped="" ref="0x7f1567aa7ad0"/>
        <function-ref name="destination" scoped="" ref="0x7f1567aa7c60"/>
        <function-ref name="setSource" scoped="" ref="0x7f1567aa7df0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1567aa6020"/>
        <function-ref name="type" scoped="" ref="0x7f1567aa61b0"/>
        <function-ref name="setType" scoped="" ref="0x7f1567aa6340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1567aa64d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1567aa6660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1567aa67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f1567aa4840" loc="64:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1567aa4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567aa4bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1567a8acb0" loc="81:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f1567a8acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1567a890a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1567a89230"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1567a893c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1567a80710" loc="86:/opt/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1567a80710"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1567a80a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f1567a743c0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="RF230RadioC.TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f1567a743c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f1567a74740"/>
        <function-ref name="suspend" scoped="" ref="0x7f1567a748d0"/>
        <function-ref name="resume" scoped="" ref="0x7f1567a74a60"/>
        <function-ref name="run" scoped="" ref="0x7f1567a74bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f1567a26aa0" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1567a26aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567a26e40"/>
        <function-ref name="clearAll" scoped="" ref="0x7f1567a25020"/>
        <function-ref name="get" scoped="" ref="0x7f1567a251b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567a25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f1567a27cb0" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f1567a27cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f1567a260a0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f1567a26230"/>
        <function-ref name="getNode" scoped="" ref="0x7f1567a263c0"/>
        <function-ref name="evicted" scoped="" ref="0x7f1567a26550"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1567a266e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f156695a3b0" loc="43:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f156695a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f156695a750"/>
        <function-ref name="clearAll" scoped="" ref="0x7f156695a8e0"/>
        <function-ref name="get" scoped="" ref="0x7f156695aa70"/>
        <function-ref name="set" scoped="" ref="0x7f156695ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f156695b650" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f156695b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f156695b9d0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f156695bb60"/>
        <function-ref name="getNode" scoped="" ref="0x7f156695bcf0"/>
        <function-ref name="evicted" scoped="" ref="0x7f156695be80"/>
        <function-ref name="getIndex" scoped="" ref="0x7f156695a030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f156695b080" loc="41:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f156695b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f156695b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f15679f6560" loc="51:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f15679f6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f15679f68e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f1567a0a620" loc="47:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f1567a0a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f1567a0a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f15679f9890" loc="50:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f15679f9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15679f9c10"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f15679f9da0"/>
        <function-ref name="source" scoped="" ref="0x7f1567a05020"/>
        <function-ref name="destination" scoped="" ref="0x7f1567a051b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1567a05340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1567a054d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1567a05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f1567a00310" loc="49:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f1567a00310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f1567a00690"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f1567a00820"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f1567a009b0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f1567a00b40"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f1567a00cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f15679d6400" loc="61:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f15679d6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15679d6780"/>
        <function-ref name="wait" scoped="" ref="0x7f15679d6910"/>
        <function-ref name="cancel" scoped="" ref="0x7f15679d6aa0"/>
        <function-ref name="isFree" scoped="" ref="0x7f15679d6c30"/>
        <function-ref name="getNow" scoped="" ref="0x7f15679d6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f15679d0960" loc="62:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f15679d0960"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15679d0ce0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15679d0e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15679da030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15679da1c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15679da350"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15679da4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f15679daab0" loc="64:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15679daab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f15679ce170"/>
        <function-ref name="clear" scoped="" ref="0x7f15679ce8a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f15679cfa00"/>
        <function-ref name="set" scoped="" ref="0x7f15679cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f1567a21020" loc="43:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f1567a21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567a213a0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567a21530"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1567a216c0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f1567a21850"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f1567a219e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f1567a0d020" loc="46:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f1567a0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f1567a0d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f1567a12190" loc="44:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f1567a12190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1567a12510"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f1567a126a0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1567a12830"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f1567a129c0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f1567a12b50"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f1567a12ce0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1567a12e70"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1567a20030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f15679dd470" loc="60:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f15679dd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f15679dd7f0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f15679dd980"/>
        <function-ref name="setFCF" scoped="" ref="0x7f15679ddb10"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f15679ddca0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f15679dde30"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f15679f8020"/>
        <function-ref name="setDSN" scoped="" ref="0x7f15679f81b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f15679f8340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f15679f84d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f15679f8660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f15679f87f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f15679f8980"/>
        <function-ref name="localAddr" scoped="" ref="0x7f15679f8b10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f15679f8da0"/>
        <function-ref name="localPan" scoped="" ref="0x7f15679f7020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f15679f71b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f15679f7340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f15679f74d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f15679f7660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15679f77f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f15679f7980"/>
        <function-ref name="getFCF" scoped="" ref="0x7f15679f7b10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f15679f7ca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f15679f7e30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f15679dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f1567a0e480" loc="45:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f1567a0e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f1567a0e800"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1567a0e990"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f1567a0eb20"/>
        <function-ref name="getSender" scoped="" ref="0x7f1567a0ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f1567a06c80" loc="48:/opt/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f1567a06c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f1567a0c0a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f1567a0c230"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f1567a0c3c0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f1567a0c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f1567941020" loc="41:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1567941020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15679413c0"/>
        <function-ref name="wait" scoped="" ref="0x7f1567941550"/>
        <function-ref name="cancel" scoped="" ref="0x7f15679416e0"/>
        <function-ref name="isFree" scoped="" ref="0x7f1567941870"/>
        <function-ref name="getNow" scoped="" ref="0x7f1567941a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1567940b60" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1567940b60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f1567f013a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f1567f013a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f1567b53180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f156793d4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f156793e4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f156793ee60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f156793e9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f156793d9a0"/>
        <function-ref name="start" scoped="" ref="0x7f156793f9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f156793e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f1567941cb0" loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f1567941cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f15679400a0"/>
        <function-ref name="suspend" scoped="" ref="0x7f1567940230"/>
        <function-ref name="resume" scoped="" ref="0x7f15679403c0"/>
        <function-ref name="run" scoped="" ref="0x7f1567940550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f156693d300" loc="54:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f156693d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f156693d6a0"/>
        <function-ref name="wait" scoped="" ref="0x7f156693d830"/>
        <function-ref name="cancel" scoped="" ref="0x7f156693d9c0"/>
        <function-ref name="isFree" scoped="" ref="0x7f156693db50"/>
        <function-ref name="getNow" scoped="" ref="0x7f156693dce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f156693b260" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f156693b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f1567b53180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1566939b30"/>
        <function-ref name="fired" scoped="" ref="0x7f156693aa60"/>
        <function-ref name="startAt" scoped="" ref="0x7f15669394e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1566939020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1566938020"/>
        <function-ref name="start" scoped="" ref="0x7f156693a090"/>
        <function-ref name="stop" scoped="" ref="0x7f156693a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f1566938410" loc="60:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f1566938410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f1566938790"/>
        <function-ref name="suspend" scoped="" ref="0x7f1566938920"/>
        <function-ref name="resume" scoped="" ref="0x7f1566938ab0"/>
        <function-ref name="run" scoped="" ref="0x7f1566938c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15678928f0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f15678928f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567892c70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567892e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567891020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15678912b0" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f15678912b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567891630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f15678943a0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f15678943a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1567894740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1567897720" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1567897720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567897aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567897c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567897dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567896020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15678961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1567896530" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1567896530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15678968d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1567896a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567896bf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567896d80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567895020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1567895b00" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f1567895b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567894020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1567894a30" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f1567894a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567894db0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567892020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15678921b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567892340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15678924d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1567892660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f15678918c0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f15678918c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1567891c40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f1567891dd0"/>
        <function-ref name="source" scoped="" ref="0x7f1567890020"/>
        <function-ref name="destination" scoped="" ref="0x7f15678901b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1567890340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15678904d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1567890660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15678953a0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f15678953a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567895740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1567898020" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1567898020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15678983a0"/>
        <function-ref name="source" scoped="" ref="0x7f1567898530"/>
        <function-ref name="address" scoped="" ref="0x7f15678986c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1567898850"/>
        <function-ref name="setSource" scoped="" ref="0x7f15678989e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1567898b70"/>
        <function-ref name="type" scoped="" ref="0x7f1567898d00"/>
        <function-ref name="setType" scoped="" ref="0x7f1567897020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15678971b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1567897340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15678974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f156691b8f0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f156691b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156691bc70"/>
        <function-ref name="cancel" scoped="" ref="0x7f156691be00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156691a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f156691a2b0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f156691a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f156691a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f156691c420" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f156691c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f156691c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f15669208b0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f15669208b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566920c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566920dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f156691e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f156691e1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f156691e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1566922360" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f1566922360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15669226e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566922870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566922a00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566922b90"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1566922d20"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1566921020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f156691e6c0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f156691e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156691ea60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f156691ebf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f156691ed80"/>
        <function-ref name="cancel" scoped="" ref="0x7f156691d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156691d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f156691dc90" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f156691dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f156691c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f156691cab0" loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f156691cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f156691ce30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f156691b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f156691b1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f156691b340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f156691b4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f156691b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f156691d530" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f156691d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f156691d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f156691a8c0" loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f156691a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f156691ac40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f156691add0"/>
        <function-ref name="source" scoped="" ref="0x7f1566919020"/>
        <function-ref name="destination" scoped="" ref="0x7f15669191b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1566919340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15669194d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1566919660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f15669198b0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f15669198b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1566919c30"/>
        <function-ref name="changed" scoped="" ref="0x7f1566919dc0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1566918020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f15669181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1566921270" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1566921270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15669215f0"/>
        <function-ref name="source" scoped="" ref="0x7f1566921780"/>
        <function-ref name="address" scoped="" ref="0x7f1566921910"/>
        <function-ref name="destination" scoped="" ref="0x7f1566921aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1566921c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1566921dc0"/>
        <function-ref name="type" scoped="" ref="0x7f1566920020"/>
        <function-ref name="setType" scoped="" ref="0x7f15669201b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1566920340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15669204d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1566920660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f15678b1260" loc="54:/opt/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f15678b1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f15678b15e0"/>
        <function-ref name="changed" scoped="" ref="0x7f15678b1770"/>
        <function-ref name="amGroup" scoped="" ref="0x7f15678b1900"/>
        <function-ref name="setAddress" scoped="" ref="0x7f15678b1a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f156788a310" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f156788a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156788a690"/>
        <function-ref name="cancel" scoped="" ref="0x7f156788a820"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156788a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f156788ac00" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f156788ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f156787a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f156787a1b0"/>
        <function-ref name="request" scoped="" ref="0x7f156787a340"/>
        <function-ref name="granted" scoped="" ref="0x7f156787a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f156787a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f156788b880" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f156788b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156788bc00"/>
        <function-ref name="cancel" scoped="" ref="0x7f156788bd90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156788a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1567816150" loc="86:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1567816150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15678164f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1567816680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15678151f0" loc="89:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15678151f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1567815590"/>
        <function-ref name="configure" scoped="" ref="0x7f1567815720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1567817390" loc="85:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1567817390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1567817730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15678178c0"/>
        <function-ref name="request" scoped="" ref="0x7f1567817a50"/>
        <function-ref name="granted" scoped="" ref="0x7f1567817be0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1567817d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15678168d0" loc="87:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15678168d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1567816c50"/>
        <function-ref name="userId" scoped="" ref="0x7f1567816de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15668ca460" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15668ca460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15668ca7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f15668caa70" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f15668caa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15668cadf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15668c9020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15668c91b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15668c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15668c7850" loc="52:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15668c7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15668c7bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15668c7d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15668c5910" loc="56:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15668c5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15668c5cb0"/>
        <function-ref name="configure" scoped="" ref="0x7f15668c5e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f15668c4120" loc="57:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f15668c4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15668c44a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15668c4630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15668c47c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15668c4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15668c89d0" loc="51:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15668c89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15668c8d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15668c7020"/>
        <function-ref name="request" scoped="" ref="0x7f15668c71b0"/>
        <function-ref name="granted" scoped="" ref="0x7f15668c7340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15668c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15668c5020" loc="53:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15668c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15668c53a0"/>
        <function-ref name="userId" scoped="" ref="0x7f15668c5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f15668c4c20" loc="68:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f15668c4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15668c3020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15668c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15677dd2b0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f15677dd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15677dd630"/>
        <function-ref name="cancel" scoped="" ref="0x7f15677dd7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15677dd950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15677ddbe0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f15677ddbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15677dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f15677e2d30" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f15677e2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f15677e10e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1567812e00" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1567812e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15677e41c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15677e4350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15677e44e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15677e4670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15677e4800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f15677de470" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f15677de470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15677de7f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15677de980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15677deb10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15677deca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15677dee30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15677dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f15677e1390" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f15677e1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f15677e1710"/>
        <function-ref name="getDSN" scoped="" ref="0x7f15677e18a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f15677e1a30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f15677e1bc0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f15677e1d50"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f15677e0020"/>
        <function-ref name="setDSN" scoped="" ref="0x7f15677e01b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f15677e0340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f15677e04d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f15677e0660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f15677e07f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f15677e0980"/>
        <function-ref name="localAddr" scoped="" ref="0x7f15677e0b10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f15677e0da0"/>
        <function-ref name="localPan" scoped="" ref="0x7f15677df020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f15677df1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f15677df340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f15677df4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f15677df660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15677df7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f15677df980"/>
        <function-ref name="getFCF" scoped="" ref="0x7f15677dfb10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f15677dfca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f15677dfe30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f15677de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f15677e4a50" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f15677e4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15677e4dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15677e2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15677e21b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15677e2340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15677e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f15677e2760" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f15677e2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15677e2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f156779f4a0" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f156779f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156779f820"/>
        <function-ref name="cancel" scoped="" ref="0x7f156779f9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156779fb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f156779fdd0" loc="70:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f156779fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f156779e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f15677a2730" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f15677a2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15677a2ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15677a2c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15677a2dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15677a1020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15677a11b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15677a1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f15677a0020" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f15677a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15677a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f156779e410" loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f156779e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f156779e790"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f156779e920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f156779eab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f156779ec40"/>
        <function-ref name="headerLength" scoped="" ref="0x7f156779edd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f156779c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f15677a15d0" loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f15677a15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15677a1950"/>
        <function-ref name="cancel" scoped="" ref="0x7f15677a1ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15677a1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f15677d57c0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f15677d57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15677d5b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f15677d5cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15677d5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f15677a2120" loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f15677a2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15677a24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f15677a0630" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f15677a0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15677a09b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15677a0b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15677a0cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15677a0e60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f156779f020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f156779f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15676ff440" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f15676ff440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15676ff7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f1567703dd0" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1567703dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f1567702180"/>
        <function-ref name="address" scoped="" ref="0x7f1567702310"/>
        <function-ref name="destination" scoped="" ref="0x7f15677024a0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1567702630"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15677027c0"/>
        <function-ref name="pan" scoped="" ref="0x7f1567702950"/>
        <function-ref name="setPan" scoped="" ref="0x7f1567702ae0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1567702c70"/>
        <function-ref name="localPan" scoped="" ref="0x7f1567702e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1567701080" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f1567701080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567701400"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567701590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567701720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15677018b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567701a40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1567701bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f1567706e00" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1567706e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f15677051c0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f1567705350"/>
        <function-ref name="setFCF" scoped="" ref="0x7f15677054e0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f1567705670"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f1567705800"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f1567705990"/>
        <function-ref name="setDSN" scoped="" ref="0x7f1567705b20"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f1567705cb0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f1567705e40"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f1567704020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f15677041b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f1567704340"/>
        <function-ref name="localAddr" scoped="" ref="0x7f15677044d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1567704760"/>
        <function-ref name="localPan" scoped="" ref="0x7f15677048f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f1567704a80"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f1567704c10"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f1567704da0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f1567703020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15677031b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1567703340"/>
        <function-ref name="getFCF" scoped="" ref="0x7f15677034d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1567703660"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f15677037f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f1567703980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1567700500" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f1567700500"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567700880"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567700a10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567700ba0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567700d30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15676ff020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15676ff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1567701e60" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1567701e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567700210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1566856440" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f1566856440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15668567c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f156685a2e0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f156685a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f156685a660"/>
        <function-ref name="address" scoped="" ref="0x7f156685a7f0"/>
        <function-ref name="destination" scoped="" ref="0x7f156685a980"/>
        <function-ref name="setSource" scoped="" ref="0x7f156685ab10"/>
        <function-ref name="setDestination" scoped="" ref="0x7f156685aca0"/>
        <function-ref name="pan" scoped="" ref="0x7f156685ae30"/>
        <function-ref name="setPan" scoped="" ref="0x7f1566859020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15668591b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f1566859340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1566859590" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f1566859590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566859910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566859aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566859c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566859dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1566858020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15668581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f156685e020" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f156685e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f156685e3a0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f156685e530"/>
        <function-ref name="setFCF" scoped="" ref="0x7f156685e6c0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f156685e850"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f156685e9e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f156685eb70"/>
        <function-ref name="setDSN" scoped="" ref="0x7f156685ed00"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f156685c020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f156685c1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f156685c340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f156685c4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f156685c660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f156685c7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f156685ca80"/>
        <function-ref name="localPan" scoped="" ref="0x7f156685cc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f156685cda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f156685b020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f156685b1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f156685b340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f156685b4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f156685b660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f156685b7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f156685b980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f156685bb10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f156685bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1566858a70" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1566858a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1566858df0"/>
        <function-ref name="changed" scoped="" ref="0x7f1566857020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f15668571b0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1566857340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1566858440" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1566858440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15668587c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f15668575d0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f15668575d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566857950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566857ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566857c70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566857e00"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1566856020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15668561b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15676cca70" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f15676cca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15676ccdf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15676ca020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15676ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15676ca440" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f15676ca440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15676ca7c0"/>
        <function-ref name="header" scoped="" ref="0x7f15676ca950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f15676c8400" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f15676c8400"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15676c8780"/>
        <function-ref name="clearAll" scoped="" ref="0x7f15676c8910"/>
        <function-ref name="get" scoped="" ref="0x7f15676c8aa0"/>
        <function-ref name="set" scoped="" ref="0x7f15676c8c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15676cd840" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15676cd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15676cdbc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15676cdd50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15676cc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f15676cabe0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f15676cabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f15676c9020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f15676c91b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f15676c9340"/>
        <function-ref name="getSender" scoped="" ref="0x7f15676c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f15676cc270" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f15676cc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15676cc5f0"/>
        <function-ref name="header" scoped="" ref="0x7f15676cc780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f15676c9720" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f15676c9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f15676c9aa0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f15676c9c30"/>
        <function-ref name="getNode" scoped="" ref="0x7f15676c9dc0"/>
        <function-ref name="evicted" scoped="" ref="0x7f15676c8020"/>
        <function-ref name="getIndex" scoped="" ref="0x7f15676c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1566804310" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f1566804310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566804690"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566804820"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15668049b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1566804c40" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f1566804c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1566803020"/>
        <function-ref name="header" scoped="" ref="0x7f15668031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f1566801ab0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1566801ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566801e30"/>
        <function-ref name="clearAll" scoped="" ref="0x7f1566800020"/>
        <function-ref name="get" scoped="" ref="0x7f15668001b0"/>
        <function-ref name="set" scoped="" ref="0x7f1566800340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15668069b0" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15668069b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566806d30"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566805020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15668051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f1566803e80" loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f1566803e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f1566801220"/>
        <function-ref name="insertNode" scoped="" ref="0x7f15668013b0"/>
        <function-ref name="getNode" scoped="" ref="0x7f1566801540"/>
        <function-ref name="evicted" scoped="" ref="0x7f15668016d0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1566801860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1566805400" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f1566805400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1566805780"/>
        <function-ref name="header" scoped="" ref="0x7f1566805910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1566805b60" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1566805b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1566804020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f1566803400" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f1566803400"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f1566803780"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1566803910"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f1566803aa0"/>
        <function-ref name="getSender" scoped="" ref="0x7f1566803c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15676b6950" loc="85:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f15676b6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15676b6cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15676b6e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15676b5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15676b52b0" loc="86:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f15676b52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15676b5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f15676b3d90" loc="93:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f15676b3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f15676b2180"/>
        <function-ref name="noAck" scoped="" ref="0x7f15676b2310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15676b24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15676c3e40" loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15676c3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15676b81e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15676b8370"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15676b8500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f15676b7a10" loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f15676b7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15676b7d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15676b6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15676b61b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15676b6340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15676b64d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15676b6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f15676b58c0" loc="87:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f15676b58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15676b5c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15676b5dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15676b4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15676b41b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15676b4340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15676b44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f15676b3100" loc="92:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f15676b3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f15676b3480"/>
        <function-ref name="setRetries" scoped="" ref="0x7f15676b3610"/>
        <function-ref name="getRetries" scoped="" ref="0x7f15676b37a0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f15676b3930"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f15676b3ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15676b8790" loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f15676b8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15676b8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f15676b4720" loc="88:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15676b4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f15676b4aa0"/>
        <function-ref name="noAck" scoped="" ref="0x7f15676b4c30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15676b4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f15676b8d60" loc="79:/opt/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f15676b8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f15676b7180"/>
        <function-ref name="setRetries" scoped="" ref="0x7f15676b7310"/>
        <function-ref name="getRetries" scoped="" ref="0x7f15676b74a0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f15676b7630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f15676b77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15676ad880" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15676ad880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15676adc00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15676add90"/>
        <function-ref name="start" scoped="" ref="0x7f1567698020"/>
        <function-ref name="stop" scoped="" ref="0x7f15676981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15676948c0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f15676948c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567694c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567694dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567693020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15676932b0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f15676932b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567693630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1567698440" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f1567698440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15676987c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567698950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567698ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f15676973d0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f15676973d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567697750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15676978e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567697a70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567697c00"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567697d90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1567696020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1567696270" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1567696270"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f15676965f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1567696780"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1567696910"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1567696aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1567696d90" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f1567696d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1567694180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1567694310"/>
        <function-ref name="start" scoped="" ref="0x7f15676944a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1567694630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1567698d70" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1567698d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567697180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f15676938c0" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f15676938c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567693c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567693dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567692020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15676921b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567692340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15676924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f15667df640" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f15667df640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f15667df9c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f15667dfb50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f15667dfce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f15667dfe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1567622a10" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f1567622a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1567622d90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1567621020"/>
        <function-ref name="start" scoped="" ref="0x7f15676211b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1567621340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f156761faa0" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f156761faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f156761fe20"/>
        <function-ref name="turnOn" scoped="" ref="0x7f156761e020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f156761e1b0"/>
        <function-ref name="done" scoped="" ref="0x7f156761e340"/>
        <function-ref name="standby" scoped="" ref="0x7f156761e4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f156761e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15676215d0" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15676215d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567621950"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567621ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567621c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f156761d270" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f156761d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f156761d5f0"/>
        <function-ref name="header" scoped="" ref="0x7f156761d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1567620020" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1567620020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15676203a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f156761e8b0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f156761e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156761ec30"/>
        <function-ref name="ready" scoped="" ref="0x7f156761edc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156761d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f15676205f0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f15676205f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1567620970"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1567620b00"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1567620c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f156761f020" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f156761f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f156761f3a0"/>
        <function-ref name="suspend" scoped="" ref="0x7f156761f530"/>
        <function-ref name="resume" scoped="" ref="0x7f156761f6c0"/>
        <function-ref name="run" scoped="" ref="0x7f156761f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15667d8bf0" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15667d8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15667d6020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15667d61b0"/>
        <function-ref name="start" scoped="" ref="0x7f15667d6340"/>
        <function-ref name="stop" scoped="" ref="0x7f15667d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f15667d6760" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f15667d6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15667d6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f15667d4670" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f15667d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f15667d49f0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f15667d4b80"/>
        <function-ref name="setChannel" scoped="" ref="0x7f15667d4d10"/>
        <function-ref name="done" scoped="" ref="0x7f15667d3020"/>
        <function-ref name="standby" scoped="" ref="0x7f15667d31b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15667d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15667d6d70" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15667d6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15667d5180"/>
        <function-ref name="cancel" scoped="" ref="0x7f15667d5310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15667d54a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f15667d0940" loc="189:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f15667d0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15667d0cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f15667d0e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f15667d1950" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f15667d1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15667d1cd0"/>
        <function-ref name="header" scoped="" ref="0x7f15667d1e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f15667cf160" loc="144:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f15667cf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15667cf4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f15667cf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15667d5730" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f15667d5730"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15667d5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f15667d0160" loc="322:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f15667d0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15667d04e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f15667d0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f15667d1060" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f15667d1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15667d13e0"/>
        <function-ref name="ready" scoped="" ref="0x7f15667d1570"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15667d1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f15667d5d00" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f15667d5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f15667d40a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f15667d4230"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15667d43c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f15667d3590" loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f15667d3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f15667d3910"/>
        <function-ref name="suspend" scoped="" ref="0x7f15667d3aa0"/>
        <function-ref name="resume" scoped="" ref="0x7f15667d3c30"/>
        <function-ref name="run" scoped="" ref="0x7f15667d3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15675c6860" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f15675c6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15675c6be0"/>
        <function-ref name="ready" scoped="" ref="0x7f15675c6d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15675c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15675c52b0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f15675c52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15675c5630"/>
        <function-ref name="header" scoped="" ref="0x7f15675c57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f15675c5a10" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f15675c5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15675c5d90"/>
        <function-ref name="wait" scoped="" ref="0x7f15675c4020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15675c41b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f15675c4340"/>
        <function-ref name="getNow" scoped="" ref="0x7f15675c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f15675c4760" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f15675c4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f15675c4ae0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f15675c4c70"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f15675c4e00"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f15675c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f15675c6060" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f15675c6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15675c63e0"/>
        <function-ref name="header" scoped="" ref="0x7f15675c6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f15675c7740" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f15675c7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15675c7ac0"/>
        <function-ref name="ready" scoped="" ref="0x7f15675c7c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15675c7de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1566797820" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f1566797820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566797ba0"/>
        <function-ref name="ready" scoped="" ref="0x7f1566797d30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566796020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15667962b0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f15667962b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1566796630"/>
        <function-ref name="header" scoped="" ref="0x7f15667967c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f1566796a10" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1566796a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1566796d90"/>
        <function-ref name="wait" scoped="" ref="0x7f1566794020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15667941b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f1566794340"/>
        <function-ref name="getNow" scoped="" ref="0x7f15667944d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1566794720" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f1566794720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1566794aa0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1566794c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1566793020" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f1566793020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f15667933a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f1566793530"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f15667936c0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f1566793850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1566797020" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f1566797020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15667973a0"/>
        <function-ref name="header" scoped="" ref="0x7f1566797530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1566798660" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f1566798660"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15667989e0"/>
        <function-ref name="ready" scoped="" ref="0x7f1566798b70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566798d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f1566793b20" loc="78:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f1566793b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1566792020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15667921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f15675dc160" loc="46:/opt/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f15675dc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f15675dc4e0"/>
        <function-ref name="rand32" scoped="" ref="0x7f15675dc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f15675dd060" loc="45:/opt/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f15675dd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15675ddc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15675de230" loc="44:/opt/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15675de230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15675de5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f15675d5100" loc="48:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f15675d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f15675d5480"/>
        <function-ref name="rand32" scoped="" ref="0x7f15675d5610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f15675d6020" loc="47:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f15675d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15675d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15675d76e0" loc="46:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15675d76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15675d7a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1567593630" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f1567593630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15675939b0"/>
        <function-ref name="ready" scoped="" ref="0x7f1567593b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567593cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1567592020" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f1567592020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15675923a0"/>
        <function-ref name="header" scoped="" ref="0x7f1567592530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f1567592780" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1567592780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1567592b00"/>
        <function-ref name="wait" scoped="" ref="0x7f1567592c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f1567592e20"/>
        <function-ref name="isFree" scoped="" ref="0x7f1567591020"/>
        <function-ref name="getNow" scoped="" ref="0x7f15675911b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f156758f5d0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f156758f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f156758f950"/>
        <function-ref name="get" scoped="" ref="0x7f156758fae0"/>
        <function-ref name="setValue" scoped="" ref="0x7f156758fc70"/>
        <function-ref name="set" scoped="" ref="0x7f156758fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1567591440" loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f1567591440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f15675917c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f1567591950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1567591ae0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f1567591c70"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f1567591e00"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f156758f020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f156758f1b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f156758f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1567594400" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f1567594400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567594780"/>
        <function-ref name="header" scoped="" ref="0x7f1567594910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f15675bfac0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f15675bfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15675bfe40"/>
        <function-ref name="ready" scoped="" ref="0x7f1567594020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15675941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1567594b60" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1567594b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1567593020"/>
        <function-ref name="noAck" scoped="" ref="0x7f15675931b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1567593340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15675761d0" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15675761d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1567576550"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15675766e0"/>
        <function-ref name="start" scoped="" ref="0x7f1567576870"/>
        <function-ref name="stop" scoped="" ref="0x7f1567576a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f1567573b60" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f1567573b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f1567571020"/>
        <function-ref name="request" scoped="" ref="0x7f15675711b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f156756d440" loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f156756d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156756d7c0"/>
        <function-ref name="ready" scoped="" ref="0x7f156756d950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156756dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f156756dd70" loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f156756dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f156756c180"/>
        <function-ref name="header" scoped="" ref="0x7f156756c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f1567575b60" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f1567575b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1567574020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f15675741b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1567574340"/>
        <function-ref name="done" scoped="" ref="0x7f15675744d0"/>
        <function-ref name="standby" scoped="" ref="0x7f1567574660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15675747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1567571400" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f1567571400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567571780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567571910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567571aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567571c30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567571dc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1567570020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f156756e410" loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f156756e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f156756e890"/>
        <function-ref name="turnOn" scoped="" ref="0x7f156756ea20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f156756ebb0"/>
        <function-ref name="done" scoped="" ref="0x7f156756ed40"/>
        <function-ref name="standby" scoped="" ref="0x7f156756d020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f156756d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f15675702b0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f15675702b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f1567570630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1567573400" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f1567573400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567573780"/>
        <function-ref name="header" scoped="" ref="0x7f1567573910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f156756fd70" loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f156756fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f156756e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1567570920" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f1567570920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1567570ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1567570e30"/>
        <function-ref name="start" scoped="" ref="0x7f156756f020"/>
        <function-ref name="stop" scoped="" ref="0x7f156756f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f156756cd40" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f156756cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f156756b0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f156756b270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f156756b400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f156756b590"/>
        <function-ref name="headerLength" scoped="" ref="0x7f156756b720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f156756b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1567575590" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f1567575590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567575910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f156756bb40" loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f156756bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f1567569020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f156756f440" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f156756f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156756f7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f156756f950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156756fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1567574a40" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f1567574a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567574dc0"/>
        <function-ref name="ready" scoped="" ref="0x7f1567573020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15675731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f156756c5a0" loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f156756c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f156756c920"/>
        <function-ref name="request" scoped="" ref="0x7f156756cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1567576c50" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f1567576c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567575020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15675751b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567575340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f156733eb00" loc="50:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f156733eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f156733ee80"/>
        <function-ref name="get" scoped="" ref="0x7f156733d030"/>
        <function-ref name="setValue" scoped="" ref="0x7f156733d1c0"/>
        <function-ref name="set" scoped="" ref="0x7f156733d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1567341c20" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f1567341c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567340020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15673401b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567340340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15673404d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567340660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15673407f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f156733fcd0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f156733fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f156733e0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f156733e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f156733e3c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f156733e550"/>
        <function-ref name="headerLength" scoped="" ref="0x7f156733e6e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f156733e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f1567344020" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1567344020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f15673435a0"/>
        <function-ref name="clear" scoped="" ref="0x7f1567343cd0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1567344e30"/>
        <function-ref name="set" scoped="" ref="0x7f1567341460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f1567340c00" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1567340c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f156733f8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1567348020" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1567348020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f15673465a0"/>
        <function-ref name="clear" scoped="" ref="0x7f1567346cd0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1567348e30"/>
        <function-ref name="set" scoped="" ref="0x7f1567345460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f1566743e60" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f1566743e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566741210"/>
        <function-ref name="get" scoped="" ref="0x7f15667413a0"/>
        <function-ref name="setValue" scoped="" ref="0x7f1566741530"/>
        <function-ref name="set" scoped="" ref="0x7f15667416c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1566743020" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f1566743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15667433a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566743530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15667436c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566743850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15667439e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1566743b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f156673fcd0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f156673fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f156673e0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f156673e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f156673e3c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f156673e550"/>
        <function-ref name="headerLength" scoped="" ref="0x7f156673e6e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f156673e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f15667462a0" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f15667462a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1566745800"/>
        <function-ref name="clear" scoped="" ref="0x7f1566744020"/>
        <function-ref name="isValid" scoped="" ref="0x7f15667450d0"/>
        <function-ref name="set" scoped="" ref="0x7f1566744750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f1566741a70" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1566741a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15667406f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f1566740c40" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1566740c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f156673f8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f156674a360" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f156674a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f15667498e0"/>
        <function-ref name="clear" scoped="" ref="0x7f1566748090"/>
        <function-ref name="isValid" scoped="" ref="0x7f15667491b0"/>
        <function-ref name="set" scoped="" ref="0x7f15667487c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1567513080" loc="20:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f1567513080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1567513cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f156750e3f0" loc="46:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f156750e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1567501870"/>
        <function-ref name="fired" scoped="" ref="0x7f156750de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1567503c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1567503780"/>
        <function-ref name="getdt" scoped="" ref="0x7f15675001e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1567501cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1567503300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f156750d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1567501260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f156750d4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f156750d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f15675007d0" loc="47:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f15675007d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15674fe440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1567512b50" loc="45:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1567512b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f156750f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f15674f5020" loc="29:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f15674f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15674f5e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15674f4800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15674f4340"/>
        <function-ref name="overflow" scoped="" ref="0x7f15674f4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15674fa020" loc="27:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15674fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15674fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f15674faa10" loc="28:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f15674faa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15674f62a0"/>
        <function-ref name="fired" scoped="" ref="0x7f15674f82a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15674f8c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15674f8760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15674f6760"/>
        <function-ref name="start" scoped="" ref="0x7f15674f9890"/>
        <function-ref name="stop" scoped="" ref="0x7f15674f9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15673f1890" loc="61:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f15673f1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15673ed0d0"/>
        <function-ref name="fired" scoped="" ref="0x7f15673ee0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15673eea50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15673ee590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15673ed590"/>
        <function-ref name="start" scoped="" ref="0x7f15673f06e0"/>
        <function-ref name="stop" scoped="" ref="0x7f15673f0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15673f1080" loc="60:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15673f1080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f1567f01020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f1567f01020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15673f1400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f15673edbc0" loc="62:/opt/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f15673edbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15673eca00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15673eb4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15673eb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f15673eb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f1566711e20" loc="66:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f1566711e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f15667101c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f1566710350"/>
        <function-ref name="getControlA" scoped="" ref="0x7f15667104e0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f1566710670"/>
        <function-ref name="setControlB" scoped="" ref="0x7f1566710800"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f1566710990"/>
        <function-ref name="getControlB" scoped="" ref="0x7f1566710b20"/>
        <function-ref name="setControlA" scoped="" ref="0x7f1566710cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f156671c4b0" loc="61:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f156671c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f156671adb0"/>
        <function-ref name="fired" scoped="" ref="0x7f156671bda0"/>
        <function-ref name="startAt" scoped="" ref="0x7f156671a760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f156671a2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15667192a0"/>
        <function-ref name="start" scoped="" ref="0x7f156671b3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f156671b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f156671dc20" loc="60:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f156671dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f156671c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f15667198d0" loc="62:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f15667198d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1566717780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1566716150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1566717c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f1566716610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f156670b450" loc="68:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f156670b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f156670b7d0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f156670b960"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f156670baf0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f156670bc80"/>
        <function-ref name="countBusy" scoped="" ref="0x7f156670be10"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f156670a020"/>
        <function-ref name="getAssr" scoped="" ref="0x7f156670a1b0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f156670a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f156670f0a0" loc="67:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f156670f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f156670ca10"/>
        <function-ref name="fired" scoped="" ref="0x7f156670e6c0"/>
        <function-ref name="get" scoped="" ref="0x7f156670fcd0"/>
        <function-ref name="reset" scoped="" ref="0x7f156670eb80"/>
        <function-ref name="isOn" scoped="" ref="0x7f156670b020"/>
        <function-ref name="set" scoped="" ref="0x7f156670e1b0"/>
        <function-ref name="start" scoped="" ref="0x7f156670c090"/>
        <function-ref name="stop" scoped="" ref="0x7f156670c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1566716bc0" loc="65:/opt/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1566716bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1566711020"/>
        <function-ref name="test" scoped="" ref="0x7f1566712590"/>
        <function-ref name="get" scoped="" ref="0x7f1566715820"/>
        <function-ref name="setScale" scoped="" ref="0x7f15667114e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f15667119f0"/>
        <function-ref name="reset" scoped="" ref="0x7f1566714720"/>
        <function-ref name="overflow" scoped="" ref="0x7f1566714260"/>
        <function-ref name="isOn" scoped="" ref="0x7f1566712a50"/>
        <function-ref name="set" scoped="" ref="0x7f1566715ce0"/>
        <function-ref name="start" scoped="" ref="0x7f1566714be0"/>
        <function-ref name="stop" scoped="" ref="0x7f15667120d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f1567463020" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f1567463020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f15674633a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f1567463530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f15674636c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f1567463850"/>
        <function-ref name="setControlB" scoped="" ref="0x7f15674639e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f1567463b70"/>
        <function-ref name="getControlB" scoped="" ref="0x7f1567463d00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f1567462020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f156745fa40" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f156745fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f156745fdc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f156745d020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f156745d1b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f156745d340"/>
        <function-ref name="countBusy" scoped="" ref="0x7f156745d4d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f156745d660"/>
        <function-ref name="getAssr" scoped="" ref="0x7f156745d7f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f156745d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1567462520" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f1567462520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f156745f020"/>
        <function-ref name="fired" scoped="" ref="0x7f1567461b80"/>
        <function-ref name="get" scoped="" ref="0x7f15674611b0"/>
        <function-ref name="reset" scoped="" ref="0x7f1567460090"/>
        <function-ref name="isOn" scoped="" ref="0x7f156745f4e0"/>
        <function-ref name="set" scoped="" ref="0x7f1567461670"/>
        <function-ref name="start" scoped="" ref="0x7f1567460550"/>
        <function-ref name="stop" scoped="" ref="0x7f1567460a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f156746bc70" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f156746bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1567465020"/>
        <function-ref name="test" scoped="" ref="0x7f1567466610"/>
        <function-ref name="get" scoped="" ref="0x7f15674688e0"/>
        <function-ref name="setScale" scoped="" ref="0x7f15674654e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f15674659f0"/>
        <function-ref name="reset" scoped="" ref="0x7f15674677a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15674672e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f1567466ad0"/>
        <function-ref name="set" scoped="" ref="0x7f1567468da0"/>
        <function-ref name="start" scoped="" ref="0x7f1567467c60"/>
        <function-ref name="stop" scoped="" ref="0x7f1567466150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f15674542b0" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f15674542b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f1567454630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f15674547c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f1567454950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f1567454ae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f1567454c70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f1567454e00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f1567453020"/>
        <function-ref name="setControlA" scoped="" ref="0x7f15674531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f156744fa70" loc="85:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f156744fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f156744fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f156744e230" loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f156744e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f156744e5b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f156744e740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f156744e8d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f156744ea60"/>
        <function-ref name="countBusy" scoped="" ref="0x7f156744ebf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f156744ed80"/>
        <function-ref name="getAssr" scoped="" ref="0x7f156744d020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f156744d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15674536b0" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f15674536b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f156744f110"/>
        <function-ref name="fired" scoped="" ref="0x7f1567452da0"/>
        <function-ref name="get" scoped="" ref="0x7f15674523d0"/>
        <function-ref name="reset" scoped="" ref="0x7f15674512a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f156744f5d0"/>
        <function-ref name="set" scoped="" ref="0x7f1567452890"/>
        <function-ref name="start" scoped="" ref="0x7f1567451760"/>
        <function-ref name="stop" scoped="" ref="0x7f1567451c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1567459020" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1567459020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1567455350"/>
        <function-ref name="test" scoped="" ref="0x7f15674579a0"/>
        <function-ref name="get" scoped="" ref="0x7f1567459c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f1567455810"/>
        <function-ref name="getScale" scoped="" ref="0x7f1567455d20"/>
        <function-ref name="reset" scoped="" ref="0x7f1567458b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f1567458660"/>
        <function-ref name="isOn" scoped="" ref="0x7f1567457e60"/>
        <function-ref name="set" scoped="" ref="0x7f1567458150"/>
        <function-ref name="start" scoped="" ref="0x7f1567457020"/>
        <function-ref name="stop" scoped="" ref="0x7f15674574e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f15673b8490" loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f15673b8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15673b8810"/>
        <function-ref name="runTask" scoped="" ref="0x7f15673b89a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f15673bc1d0" loc="49:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f15673bc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15673b9b30"/>
        <function-ref name="fired" scoped="" ref="0x7f15673bb9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15673b94e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15673b9020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15673b8020"/>
        <function-ref name="start" scoped="" ref="0x7f15673bb020"/>
        <function-ref name="stop" scoped="" ref="0x7f15673bb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15673c2cf0" loc="48:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15673c2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15673bd220"/>
        <function-ref name="fired" scoped="" ref="0x7f15673c07c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15673be590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15673be110"/>
        <function-ref name="getdt" scoped="" ref="0x7f15673bdb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f15673bd6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15673c0c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15673c1940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15673beba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15673c1e10"/>
        <function-ref name="stop" scoped="" ref="0x7f15673c0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1567368a00" loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1567368a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1567368d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f1567367020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f156736d640" loc="49:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f156736d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1567369c40"/>
        <function-ref name="fired" scoped="" ref="0x7f156736a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1567369020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f156736aae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1567368590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1567368110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f156736a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f156736c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1567369630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f156736c860"/>
        <function-ref name="stop" scoped="" ref="0x7f156736cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1567373150" loc="48:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1567373150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f156736f700"/>
        <function-ref name="fired" scoped="" ref="0x7f1567372c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1567370a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15673705b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f156736d090"/>
        <function-ref name="gett0" scoped="" ref="0x7f156736fba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1567370110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1567373d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f156736f0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15673722a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1567372790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1567364790" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f1567364790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15673633f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1567363a60" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1567363a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1567359890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1567358260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1567359d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f1567358720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f15673512e0" loc="49:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f15673512e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f156734d870"/>
        <function-ref name="fired" scoped="" ref="0x7f1567350e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f156734ec00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f156734e780"/>
        <function-ref name="getdt" scoped="" ref="0x7f156734c1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f156734dcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f156734e300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1567350020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f156734d260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15673504f0"/>
        <function-ref name="stop" scoped="" ref="0x7f15673509c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1567338590" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f1567338590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567338910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567338aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567338c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567338dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567317020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15673171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f15673174a0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f15673174a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567317820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15673179b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567317b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567317cd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567317e60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1567316020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f15673399b0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f15673399b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567339d50"/>
        <function-ref name="get" scoped="" ref="0x7f1567338020"/>
        <function-ref name="setValue" scoped="" ref="0x7f15673381b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567338340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15673140e0" loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f15673140e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1567314460"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15673145f0"/>
        <function-ref name="start" scoped="" ref="0x7f1567314780"/>
        <function-ref name="stop" scoped="" ref="0x7f1567314910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f1567311b60" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f1567311b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f1567310020"/>
        <function-ref name="request" scoped="" ref="0x7f15673101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f156730b440" loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f156730b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156730b7c0"/>
        <function-ref name="ready" scoped="" ref="0x7f156730b950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156730bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f156730bd70" loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f156730bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f156730a180"/>
        <function-ref name="header" scoped="" ref="0x7f156730a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f1567313b60" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f1567313b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1567312020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f15673121b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1567312340"/>
        <function-ref name="done" scoped="" ref="0x7f15673124d0"/>
        <function-ref name="standby" scoped="" ref="0x7f1567312660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15673127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1567310400" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f1567310400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1567310780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567310910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567310aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567310c30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567310dc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f156730e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f156730c410" loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f156730c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f156730c890"/>
        <function-ref name="turnOn" scoped="" ref="0x7f156730ca20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f156730cbb0"/>
        <function-ref name="done" scoped="" ref="0x7f156730cd40"/>
        <function-ref name="standby" scoped="" ref="0x7f156730b020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f156730b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f156730e2b0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f156730e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f156730e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1567311400" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f1567311400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567311780"/>
        <function-ref name="header" scoped="" ref="0x7f1567311910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f156730dd70" loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f156730dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f156730c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f156730e920" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f156730e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f156730eca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f156730ee30"/>
        <function-ref name="start" scoped="" ref="0x7f156730d020"/>
        <function-ref name="stop" scoped="" ref="0x7f156730d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f156730ad40" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f156730ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15673090e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1567309270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1567309400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1567309590"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1567309720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15673098b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1567313590" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f1567313590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1567313910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1567309b40" loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f1567309b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f1567308020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f156730d440" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f156730d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f156730d7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f156730d950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f156730dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1567312a40" loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f1567312a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567312dc0"/>
        <function-ref name="ready" scoped="" ref="0x7f1567311020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15673111b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f156730a5a0" loc="61:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f156730a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f156730a920"/>
        <function-ref name="request" scoped="" ref="0x7f156730aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1567314b60" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f1567314b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1567313020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15673131b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567313340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f15672ff5c0" loc="45:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f15672ff5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f15672ff940"/>
        <function-ref name="request" scoped="" ref="0x7f15672ffad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f15672fa3b0" loc="49:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f15672fa3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672f9ac0"/>
        <function-ref name="get" scoped="" ref="0x7f15672f9570"/>
        <function-ref name="isSet" scoped="" ref="0x7f15672f9020"/>
        <function-ref name="set" scoped="" ref="0x7f15672f8090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f15672e5ca0" loc="64:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f15672e5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672e40a0"/>
        <function-ref name="get" scoped="" ref="0x7f15672e4230"/>
        <function-ref name="setValue" scoped="" ref="0x7f15672e43c0"/>
        <function-ref name="set" scoped="" ref="0x7f15672e4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f15672e92e0" loc="61:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15672e92e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f15672e8840"/>
        <function-ref name="clear" scoped="" ref="0x7f15672e7020"/>
        <function-ref name="isValid" scoped="" ref="0x7f15672e8110"/>
        <function-ref name="set" scoped="" ref="0x7f15672e7750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f1567304610" loc="42:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f1567304610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1567304990"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1567304b20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1567304cb0"/>
        <function-ref name="done" scoped="" ref="0x7f1567304e40"/>
        <function-ref name="standby" scoped="" ref="0x7f1567301020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15673011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f15672e3470" loc="66:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f15672e3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15672e37f0"/>
        <function-ref name="wait" scoped="" ref="0x7f15672e3980"/>
        <function-ref name="cancel" scoped="" ref="0x7f15672e3b10"/>
        <function-ref name="isFree" scoped="" ref="0x7f15672e3ca0"/>
        <function-ref name="getNow" scoped="" ref="0x7f15672e3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f15672fee80" loc="48:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f15672fee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672fc5e0"/>
        <function-ref name="get" scoped="" ref="0x7f15672fc090"/>
        <function-ref name="isSet" scoped="" ref="0x7f15672fdad0"/>
        <function-ref name="set" scoped="" ref="0x7f15672fcb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f15672ffd90" loc="46:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f15672ffd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672fe180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15672fe310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15672fe4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15672fe630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15672fe7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15672fe950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f15672ea1f0" loc="60:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f15672ea1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15672ea670"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15672ea800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15672ea990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f15672eab20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f15672eacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1567301dd0" loc="44:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f1567301dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15672ff180"/>
        <function-ref name="header" scoped="" ref="0x7f15672ff310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15672f0dd0" loc="55:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f15672f0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f1567b53180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15672ec6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f15672ed6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15672ec090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15672edb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15672ecba0"/>
        <function-ref name="start" scoped="" ref="0x7f15672eeca0"/>
        <function-ref name="stop" scoped="" ref="0x7f15672ed1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f15672f8940" loc="50:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f15672f8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672f5090"/>
        <function-ref name="get" scoped="" ref="0x7f15672f6af0"/>
        <function-ref name="isSet" scoped="" ref="0x7f15672f65a0"/>
        <function-ref name="set" scoped="" ref="0x7f15672f55e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f15672f1a40" loc="54:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f15672f1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15672f06b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1567301460" loc="43:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f1567301460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15673017e0"/>
        <function-ref name="ready" scoped="" ref="0x7f1567301970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1567301b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f15672f5e70" loc="51:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f15672f5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672f25e0"/>
        <function-ref name="get" scoped="" ref="0x7f15672f2090"/>
        <function-ref name="isSet" scoped="" ref="0x7f15672f4ad0"/>
        <function-ref name="set" scoped="" ref="0x7f15672f2b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f15672e48d0" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f15672e48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672e4c50"/>
        <function-ref name="get" scoped="" ref="0x7f15672e4de0"/>
        <function-ref name="setValue" scoped="" ref="0x7f15672e3020"/>
        <function-ref name="set" scoped="" ref="0x7f15672e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f15672e5110" loc="63:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f15672e5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672e5490"/>
        <function-ref name="get" scoped="" ref="0x7f15672e5620"/>
        <function-ref name="setValue" scoped="" ref="0x7f15672e57b0"/>
        <function-ref name="set" scoped="" ref="0x7f15672e5940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f15672f11e0" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f15672f11e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f15672f1560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f15672e2110" loc="67:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f15672e2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f15672e2490"/>
        <function-ref name="suspend" scoped="" ref="0x7f15672e2620"/>
        <function-ref name="resume" scoped="" ref="0x7f15672e27b0"/>
        <function-ref name="run" scoped="" ref="0x7f15672e2940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f15672d9c40" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f15672d9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f15672d8020"/>
        <function-ref name="request" scoped="" ref="0x7f15672d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f15672b84d0" loc="74:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f15672b84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f15672bf3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f15672d5a40" loc="56:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f15672d5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672d21b0"/>
        <function-ref name="get" scoped="" ref="0x7f15672d3c00"/>
        <function-ref name="isSet" scoped="" ref="0x7f15672d36b0"/>
        <function-ref name="set" scoped="" ref="0x7f15672d2700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f15672b56a0" loc="80:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f15672b56a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672b5a20"/>
        <function-ref name="get" scoped="" ref="0x7f15672b5bb0"/>
        <function-ref name="setValue" scoped="" ref="0x7f15672b5d40"/>
        <function-ref name="set" scoped="" ref="0x7f15672b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f15672db600" loc="47:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f15672db600"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f1567f013a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f1567f013a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15672db980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f15672b3200" loc="83:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15672b3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f15672b2970"/>
        <function-ref name="clear" scoped="" ref="0x7f15672b00d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f15672b2240"/>
        <function-ref name="set" scoped="" ref="0x7f15672b0800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f15672c5020" loc="70:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f15672c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15672c53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15672c5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f15672c56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15672c5850"/>
        <function-ref name="get" scoped="" ref="0x7f15672c59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15672c5b70"/>
        <function-ref name="set" scoped="" ref="0x7f15672c5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f15672c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f15672afb70" loc="86:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f15672afb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15672ae020"/>
        <function-ref name="wait" scoped="" ref="0x7f15672ae1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15672ae340"/>
        <function-ref name="isFree" scoped="" ref="0x7f15672ae4d0"/>
        <function-ref name="getNow" scoped="" ref="0x7f15672ae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f15672dbc40" loc="49:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f15672dbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f15672da020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f15672da1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f15672da340"/>
        <function-ref name="done" scoped="" ref="0x7f15672da4d0"/>
        <function-ref name="standby" scoped="" ref="0x7f15672da660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15672da7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f15672bf9d0" loc="75:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f15672bf9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15672b7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f15672d7550" loc="55:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f15672d7550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672d6c50"/>
        <function-ref name="get" scoped="" ref="0x7f15672d6700"/>
        <function-ref name="isSet" scoped="" ref="0x7f15672d61b0"/>
        <function-ref name="set" scoped="" ref="0x7f15672d51f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f15672d8470" loc="53:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f15672d8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672d87f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15672d8980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15672d8b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15672d8ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15672d8e30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15672d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f15672c2dd0" loc="69:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f15672c2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15672c6180"/>
        <function-ref name="isInput" scoped="" ref="0x7f15672c6310"/>
        <function-ref name="toggle" scoped="" ref="0x7f15672c64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15672c6630"/>
        <function-ref name="get" scoped="" ref="0x7f15672c67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15672c6950"/>
        <function-ref name="set" scoped="" ref="0x7f15672c6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f15672c6c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f15672b7b50" loc="77:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f15672b7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15672b6020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f15672b61b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f15672b6340"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f15672b64d0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f15672b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f15672d9480" loc="51:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f15672d9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15672d9800"/>
        <function-ref name="header" scoped="" ref="0x7f15672d9990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f156721ee40" loc="856:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f156721ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f156721d1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f156721d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f15672d0020" loc="57:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f15672d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672cf740"/>
        <function-ref name="get" scoped="" ref="0x7f15672cf1f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f15672d0c50"/>
        <function-ref name="set" scoped="" ref="0x7f15672cfc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f15672dda60" loc="46:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f15672dda60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f1567f013a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f1567f013a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15672ddde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f15672c8380" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f15672c8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15672c8700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15672c8890"/>
        <function-ref name="request" scoped="" ref="0x7f15672c8a20"/>
        <function-ref name="granted" scoped="" ref="0x7f15672c8bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15672c8d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f15672c9020" loc="64:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f15672c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15672c94a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15672c9630"/>
        <function-ref name="toggle" scoped="" ref="0x7f15672c97c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15672c9950"/>
        <function-ref name="get" scoped="" ref="0x7f15672c9ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15672c9c70"/>
        <function-ref name="set" scoped="" ref="0x7f15672c9e00"/>
        <function-ref name="clr" scoped="" ref="0x7f15672c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f15672cd560" loc="58:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f15672cd560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672ccc90"/>
        <function-ref name="get" scoped="" ref="0x7f15672cc740"/>
        <function-ref name="isSet" scoped="" ref="0x7f15672cc1f0"/>
        <function-ref name="set" scoped="" ref="0x7f15672cb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f15672daaa0" loc="50:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f15672daaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15672dae20"/>
        <function-ref name="ready" scoped="" ref="0x7f15672d9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15672d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f15672bcb30" loc="72:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f15672bcb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f15672c0020"/>
        <function-ref name="disable" scoped="" ref="0x7f15672c01b0"/>
        <function-ref name="captured" scoped="" ref="0x7f15672c0340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f15672c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f15672c2270" loc="67:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f15672c2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f15672c25f0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f15672c2780"/>
        <function-ref name="splitRead" scoped="" ref="0x7f15672c2910"/>
        <function-ref name="write" scoped="" ref="0x7f15672c2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f15672b43a0" loc="81:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f15672b43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672b4720"/>
        <function-ref name="get" scoped="" ref="0x7f15672b48b0"/>
        <function-ref name="setValue" scoped="" ref="0x7f15672b4a40"/>
        <function-ref name="set" scoped="" ref="0x7f15672b4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f15672b6a10" loc="79:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f15672b6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15672b6d90"/>
        <function-ref name="get" scoped="" ref="0x7f15672b5020"/>
        <function-ref name="setValue" scoped="" ref="0x7f15672b51b0"/>
        <function-ref name="set" scoped="" ref="0x7f15672b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f15672cb8b0" loc="59:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f15672cb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f15672cbc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f15672af080" loc="85:/opt/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f15672af080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f15672af400"/>
        <function-ref name="suspend" scoped="" ref="0x7f15672af590"/>
        <function-ref name="resume" scoped="" ref="0x7f15672af720"/>
        <function-ref name="run" scoped="" ref="0x7f15672af8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f15671d87f0" loc="46:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f15671d87f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15671d8b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f15671d8d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f15671d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15671d71b0"/>
        <function-ref name="get" scoped="" ref="0x7f15671d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15671d74d0"/>
        <function-ref name="set" scoped="" ref="0x7f15671d7660"/>
        <function-ref name="clr" scoped="" ref="0x7f15671d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f15671d94e0" loc="45:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f15671d94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15671d9860"/>
        <function-ref name="isInput" scoped="" ref="0x7f15671d99f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15671d9b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15671d9d10"/>
        <function-ref name="get" scoped="" ref="0x7f15671d8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15671d81b0"/>
        <function-ref name="set" scoped="" ref="0x7f15671d8340"/>
        <function-ref name="clr" scoped="" ref="0x7f15671d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15671d6ac0" loc="49:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f15671d6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15671d3390"/>
        <function-ref name="fired" scoped="" ref="0x7f15671d4360"/>
        <function-ref name="startAt" scoped="" ref="0x7f15671d4ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15671d4820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15671d3850"/>
        <function-ref name="start" scoped="" ref="0x7f15671d5970"/>
        <function-ref name="stop" scoped="" ref="0x7f15671d5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f15671dcb50" loc="42:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f15671dcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15671da020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15671da1b0"/>
        <function-ref name="request" scoped="" ref="0x7f15671da340"/>
        <function-ref name="granted" scoped="" ref="0x7f15671da4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15671da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f15671df940" loc="41:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f15671df940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15671dfcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15671dfe50"/>
        <function-ref name="toggle" scoped="" ref="0x7f15671dc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15671dc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f15671dc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15671dc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f15671dc660"/>
        <function-ref name="clr" scoped="" ref="0x7f15671dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f15671d7b10" loc="48:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f15671d7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f15671d6020"/>
        <function-ref name="disable" scoped="" ref="0x7f15671d61b0"/>
        <function-ref name="captured" scoped="" ref="0x7f15671d6340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f15671d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f15671da920" loc="43:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f15671da920"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f15671daca0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f15671dae30"/>
        <function-ref name="splitRead" scoped="" ref="0x7f15671d9020"/>
        <function-ref name="write" scoped="" ref="0x7f15671d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f15671d1020" loc="50:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f15671d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1567b54d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15671d1c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f15671c13d0" loc="46:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f15671c13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15671c1750"/>
        <function-ref name="isInput" scoped="" ref="0x7f15671c18e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15671c1a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15671c1c00"/>
        <function-ref name="get" scoped="" ref="0x7f15671c1d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15671c0020"/>
        <function-ref name="set" scoped="" ref="0x7f15671c01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15671c0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f15671c47f0" loc="45:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f15671c47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f15671c2e60"/>
        <function-ref name="test" scoped="" ref="0x7f15671c24e0"/>
        <function-ref name="get" scoped="" ref="0x7f15671cb4c0"/>
        <function-ref name="captured" scoped="" ref="0x7f15671c3020"/>
        <function-ref name="reset" scoped="" ref="0x7f15671c3530"/>
        <function-ref name="isOn" scoped="" ref="0x7f15671c29a0"/>
        <function-ref name="set" scoped="" ref="0x7f15671cb980"/>
        <function-ref name="start" scoped="" ref="0x7f15671c39f0"/>
        <function-ref name="stop" scoped="" ref="0x7f15671c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f15671c0680" loc="47:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f15671c0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15671c0a00"/>
        <function-ref name="isInput" scoped="" ref="0x7f15671c0b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f15671c0d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15671be020"/>
        <function-ref name="get" scoped="" ref="0x7f15671be1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15671be340"/>
        <function-ref name="set" scoped="" ref="0x7f15671be4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f15671be660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f15671cd680" loc="40:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f15671cd680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15671cda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f15671d09c0" loc="39:/opt/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f15671d09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f15671d0d40"/>
        <function-ref name="disable" scoped="" ref="0x7f15671cd020"/>
        <function-ref name="captured" scoped="" ref="0x7f15671cd1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f15671cd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f15671a5c80" loc="84:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f15671a5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15671ae0a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15671ae230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f15671ad840" loc="82:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f15671ad840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f15671adbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15671b01f0" loc="81:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15671b01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15671b0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f15671af020" loc="83:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f15671af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f15671af3a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f15671af530"/>
        <function-ref name="splitRead" scoped="" ref="0x7f15671af6c0"/>
        <function-ref name="write" scoped="" ref="0x7f15671af850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15671aea60" loc="85:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15671aea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15671aede0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15671ac020"/>
        <function-ref name="request" scoped="" ref="0x7f15671ac1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f15671ac340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15671ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f15671a0d70" loc="95:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15671a0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f156719f180"/>
        <function-ref name="configure" scoped="" ref="0x7f156719f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f1567162de0" loc="294:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f1567162de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1567161180"/>
        <function-ref name="runTask" scoped="" ref="0x7f1567161310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f15671a0020" loc="94:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f15671a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15671a03a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15671a0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f15671a2e00" loc="92:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f15671a2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f15671a11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15671a27e0" loc="91:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f15671a27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15671a2b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f1567184800" loc="98:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f1567184800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f1567184b80"/>
        <function-ref name="sleep" scoped="" ref="0x7f15671821b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f156719d020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1567182340"/>
        <function-ref name="initMaster" scoped="" ref="0x7f156719d340"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f156719d4d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f156719d660"/>
        <function-ref name="read" scoped="" ref="0x7f156719d7f0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f156719d980"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f156719db10"/>
        <function-ref name="setClock" scoped="" ref="0x7f156719dca0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f156719de30"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f156719c020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f156719c2b0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f156719c440"/>
        <function-ref name="write" scoped="" ref="0x7f156719c5d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f156719c760"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f156719c8f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f156719ca80"/>
        <function-ref name="getClock" scoped="" ref="0x7f156719cc10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f156719cda0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f1567184d10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f156719d1b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f1567182020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f15671a1480" loc="93:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f15671a1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f15671a1800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f15671a1990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f15671a1b20"/>
        <function-ref name="write" scoped="" ref="0x7f15671a1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f1567182620" loc="99:/opt/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f1567182620"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f15671829a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f1567143710" loc="76:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f1567143710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f1567143a90"/>
        <function-ref name="sleep" scoped="" ref="0x7f156713e020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f1567143db0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f156713e1b0"/>
        <function-ref name="initMaster" scoped="" ref="0x7f15671401b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f1567140340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f15671404d0"/>
        <function-ref name="read" scoped="" ref="0x7f1567140660"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f15671407f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f1567140980"/>
        <function-ref name="setClock" scoped="" ref="0x7f1567140b10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1567140ca0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f1567140e30"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f156713f120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f156713f2b0"/>
        <function-ref name="write" scoped="" ref="0x7f156713f440"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f156713f5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f156713f760"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f156713f8f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f156713fa80"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f156713fc10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f1567143c20"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f1567140020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f156713fda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f1567133e30" loc="81:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f1567133e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15671321e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567132370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567132500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567132690"/>
        <function-ref name="get" scoped="" ref="0x7f1567132820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15671329b0"/>
        <function-ref name="set" scoped="" ref="0x7f1567132b40"/>
        <function-ref name="clr" scoped="" ref="0x7f1567132cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f1567136970" loc="79:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f1567136970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567136cf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567136e80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567134030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15671341c0"/>
        <function-ref name="get" scoped="" ref="0x7f1567134350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15671344e0"/>
        <function-ref name="set" scoped="" ref="0x7f1567134670"/>
        <function-ref name="clr" scoped="" ref="0x7f1567134800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f15671376c0" loc="78:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f15671376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567137a40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1567137bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567137d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1567136020"/>
        <function-ref name="get" scoped="" ref="0x7f15671361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1567136340"/>
        <function-ref name="set" scoped="" ref="0x7f15671364d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1567136660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1567135e00" loc="75:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1567135e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15671371c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1567137350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f1567131060" loc="82:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f1567131060"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f15671313e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f156713b6b0" loc="74:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f156713b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f156713ba30"/>
        <function-ref name="sleep" scoped="" ref="0x7f1567138020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f156713bd50"/>
        <function-ref name="dataReady" scoped="" ref="0x7f15671381b0"/>
        <function-ref name="initMaster" scoped="" ref="0x7f156713a1b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f156713a340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f156713a4d0"/>
        <function-ref name="read" scoped="" ref="0x7f156713a660"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f156713a7f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f156713a980"/>
        <function-ref name="setClock" scoped="" ref="0x7f156713ab10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f156713aca0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f156713ae30"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f1567139120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f15671392b0"/>
        <function-ref name="write" scoped="" ref="0x7f1567139440"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f15671395d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f1567139760"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f15671398f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f1567139a80"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f1567139c10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f156713bbc0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f156713a020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f1567139da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f1567134b20" loc="80:/opt/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f1567134b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1567133020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15671331b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1567133340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15671334d0"/>
        <function-ref name="get" scoped="" ref="0x7f1567133660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15671337f0"/>
        <function-ref name="set" scoped="" ref="0x7f1567133980"/>
        <function-ref name="clr" scoped="" ref="0x7f1567133b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15670e66c0" loc="86:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15670e66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15670e6a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15670e6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15670e4730" loc="89:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15670e4730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15670e4ad0"/>
        <function-ref name="configure" scoped="" ref="0x7f15670e4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15670e7900" loc="85:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f15670e7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15670e7ca0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15670e7e30"/>
        <function-ref name="request" scoped="" ref="0x7f15670e6020"/>
        <function-ref name="granted" scoped="" ref="0x7f15670e61b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15670e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15670e6e40" loc="87:/opt/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15670e6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15670e41e0"/>
        <function-ref name="userId" scoped="" ref="0x7f15670e4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f156666d850" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f156666d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f156666dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f156666de60" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f156666de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f156666c210"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f156666c3a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f156666c530"/>
        <function-ref name="dequeue" scoped="" ref="0x7f156666c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f156666ab40" loc="52:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f156666ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1566669020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15666691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1566669cf0" loc="56:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1566669cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15666680e0"/>
        <function-ref name="configure" scoped="" ref="0x7f1566668270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1566668500" loc="57:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1566668500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1566668880"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1566668a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1566668ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1566668d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f156666bd80" loc="51:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f156666bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f156666a180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f156666a310"/>
        <function-ref name="request" scoped="" ref="0x7f156666a4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f156666a630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f156666a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1566669400" loc="53:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1566669400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1566669780"/>
        <function-ref name="userId" scoped="" ref="0x7f1566669910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1566666060" loc="68:/opt/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1566666060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15666663e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1566666570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f15670d3020" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f15670d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f15670d33a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f15670d3530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f15670d36c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f15670d3850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f15670d39e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f15670d3b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f15670d3d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f15670d2020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f15670d21b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f15670d2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15670d2850" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f15670d2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f15670c8e60"/>
        <function-ref name="test" scoped="" ref="0x7f15670c84e0"/>
        <function-ref name="get" scoped="" ref="0x7f15670cb4c0"/>
        <function-ref name="captured" scoped="" ref="0x7f15670c9020"/>
        <function-ref name="reset" scoped="" ref="0x7f15670c9530"/>
        <function-ref name="isOn" scoped="" ref="0x7f15670c89a0"/>
        <function-ref name="set" scoped="" ref="0x7f15670cb980"/>
        <function-ref name="start" scoped="" ref="0x7f15670c99f0"/>
        <function-ref name="stop" scoped="" ref="0x7f15670c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15670c7ad0" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f15670c7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f15670c34e0"/>
        <function-ref name="fired" scoped="" ref="0x7f15670c41b0"/>
        <function-ref name="get" scoped="" ref="0x7f15670c6790"/>
        <function-ref name="reset" scoped="" ref="0x7f15670c4670"/>
        <function-ref name="isOn" scoped="" ref="0x7f15670c39a0"/>
        <function-ref name="set" scoped="" ref="0x7f15670c6c50"/>
        <function-ref name="start" scoped="" ref="0x7f15670c4b30"/>
        <function-ref name="stop" scoped="" ref="0x7f15670c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15670ddbf0" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15670ddbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f15670d6020"/>
        <function-ref name="test" scoped="" ref="0x7f15670d75d0"/>
        <function-ref name="get" scoped="" ref="0x7f15670da8a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f15670d64e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f15670d69f0"/>
        <function-ref name="reset" scoped="" ref="0x7f15670d8760"/>
        <function-ref name="overflow" scoped="" ref="0x7f15670d82a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f15670d7a90"/>
        <function-ref name="set" scoped="" ref="0x7f15670dad60"/>
        <function-ref name="start" scoped="" ref="0x7f15670d8c20"/>
        <function-ref name="stop" scoped="" ref="0x7f15670d7110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f15670b92c0" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f15670b92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f15670b9640"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f15670b97d0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f15670b9960"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f15670b9af0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f15670b9c80"/>
        <function-ref name="setControlB" scoped="" ref="0x7f15670b9e10"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f15670b8020"/>
        <function-ref name="getControlB" scoped="" ref="0x7f15670b81b0"/>
        <function-ref name="setControlC" scoped="" ref="0x7f15670b8340"/>
        <function-ref name="setControlA" scoped="" ref="0x7f15670b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f15670b35a0" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f15670b35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f15670af020"/>
        <function-ref name="fired" scoped="" ref="0x7f15670b2c10"/>
        <function-ref name="get" scoped="" ref="0x7f15670b2240"/>
        <function-ref name="reset" scoped="" ref="0x7f15670b1110"/>
        <function-ref name="isOn" scoped="" ref="0x7f15670af4e0"/>
        <function-ref name="set" scoped="" ref="0x7f15670b2700"/>
        <function-ref name="start" scoped="" ref="0x7f15670b15d0"/>
        <function-ref name="stop" scoped="" ref="0x7f15670b1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15670b89e0" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f15670b89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f15670b5e60"/>
        <function-ref name="test" scoped="" ref="0x7f15670b54e0"/>
        <function-ref name="get" scoped="" ref="0x7f15670b76b0"/>
        <function-ref name="captured" scoped="" ref="0x7f15670b60d0"/>
        <function-ref name="reset" scoped="" ref="0x7f15670b65e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f15670b59a0"/>
        <function-ref name="set" scoped="" ref="0x7f15670b7b70"/>
        <function-ref name="start" scoped="" ref="0x7f15670b6aa0"/>
        <function-ref name="stop" scoped="" ref="0x7f15670b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f15670afba0" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f15670afba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f15670ac550"/>
        <function-ref name="fired" scoped="" ref="0x7f15670ad1f0"/>
        <function-ref name="get" scoped="" ref="0x7f15670ae7f0"/>
        <function-ref name="reset" scoped="" ref="0x7f15670ad6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f15670aca10"/>
        <function-ref name="set" scoped="" ref="0x7f15670aecb0"/>
        <function-ref name="start" scoped="" ref="0x7f15670adb70"/>
        <function-ref name="stop" scoped="" ref="0x7f15670ac090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f15670aa120" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f15670aa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f15670a8a90"/>
        <function-ref name="fired" scoped="" ref="0x7f15670a9770"/>
        <function-ref name="get" scoped="" ref="0x7f15670aad50"/>
        <function-ref name="reset" scoped="" ref="0x7f15670a9c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f15670a7020"/>
        <function-ref name="set" scoped="" ref="0x7f15670a9260"/>
        <function-ref name="start" scoped="" ref="0x7f15670a8110"/>
        <function-ref name="stop" scoped="" ref="0x7f15670a85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15670be020" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f15670be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f15670bb350"/>
        <function-ref name="test" scoped="" ref="0x7f15670bc9a0"/>
        <function-ref name="get" scoped="" ref="0x7f15670bec50"/>
        <function-ref name="setScale" scoped="" ref="0x7f15670bb810"/>
        <function-ref name="getScale" scoped="" ref="0x7f15670bbd20"/>
        <function-ref name="reset" scoped="" ref="0x7f15670bdb20"/>
        <function-ref name="overflow" scoped="" ref="0x7f15670bd660"/>
        <function-ref name="isOn" scoped="" ref="0x7f15670bce60"/>
        <function-ref name="set" scoped="" ref="0x7f15670bd150"/>
        <function-ref name="start" scoped="" ref="0x7f15670bc020"/>
        <function-ref name="stop" scoped="" ref="0x7f15670bc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1566fda6e0" loc="30:/opt/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1566fda6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TOne" ref="0x7f1567e0f9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1566fd7020"/>
        <function-ref name="fired" scoped="" ref="0x7f1566fd8020"/>
        <function-ref name="startAt" scoped="" ref="0x7f1566fd89a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1566fd84e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1566fd74e0"/>
        <function-ref name="start" scoped="" ref="0x7f1566fd95b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1566fd9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1567024b50" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1567024b50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f1567f01020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f1567f01020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1567017020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1567017410" loc="47:/opt/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1567017410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1567013810"/>
        <function-ref name="test" scoped="" ref="0x7f1567015e60"/>
        <function-ref name="get" scoped="" ref="0x7f1567016090"/>
        <function-ref name="setScale" scoped="" ref="0x7f1567013cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f1567012260"/>
        <function-ref name="reset" scoped="" ref="0x7f1567015020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1567016a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f1567013350"/>
        <function-ref name="set" scoped="" ref="0x7f1567016550"/>
        <function-ref name="start" scoped="" ref="0x7f15670154e0"/>
        <function-ref name="stop" scoped="" ref="0x7f15670159a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f156663de10" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f156663de10"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f1567f02c00"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f1567f02c00"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TOne" ref="0x7f1567e0f9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f156663a6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f156663b6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f156663a090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f156663bb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f156663aba0"/>
        <function-ref name="start" scoped="" ref="0x7f156663cca0"/>
        <function-ref name="stop" scoped="" ref="0x7f156663b1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f1566633570" loc="58:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f1566633570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1566630020"/>
        <function-ref name="fired" scoped="" ref="0x7f1566632bc0"/>
        <function-ref name="get" scoped="" ref="0x7f15666321f0"/>
        <function-ref name="reset" scoped="" ref="0x7f15666310d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f15666304e0"/>
        <function-ref name="set" scoped="" ref="0x7f15666326b0"/>
        <function-ref name="start" scoped="" ref="0x7f1566631590"/>
        <function-ref name="stop" scoped="" ref="0x7f1566631a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f1566638140" loc="57:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f1566638140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f15666354e0"/>
        <function-ref name="test" scoped="" ref="0x7f1566636a90"/>
        <function-ref name="get" scoped="" ref="0x7f1566638d70"/>
        <function-ref name="setScale" scoped="" ref="0x7f15666359a0"/>
        <function-ref name="getScale" scoped="" ref="0x7f1566633020"/>
        <function-ref name="reset" scoped="" ref="0x7f1566637c30"/>
        <function-ref name="overflow" scoped="" ref="0x7f1566637770"/>
        <function-ref name="isOn" scoped="" ref="0x7f1566635020"/>
        <function-ref name="set" scoped="" ref="0x7f1566637260"/>
        <function-ref name="start" scoped="" ref="0x7f1566636110"/>
        <function-ref name="stop" scoped="" ref="0x7f15666365d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1566fd23a0" loc="39:/opt/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f1566fd23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1566fd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1566fcd200" loc="24:/opt/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1566fcd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TOne" ref="0x7f1567e0f9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1566fcc090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1566fcca10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1566fcc550"/>
        <function-ref name="overflow" scoped="" ref="0x7f1566fcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1566fc7020" loc="45:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1566fc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TOne" ref="0x7f1567e0f9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1566fc7e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1566fb5800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1566fb5340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1566fb5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1566fb4280" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1566fb4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1566fb0810"/>
        <function-ref name="test" scoped="" ref="0x7f1566fb1e60"/>
        <function-ref name="get" scoped="" ref="0x7f1566fb3020"/>
        <function-ref name="setScale" scoped="" ref="0x7f1566fb0cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f1566faf260"/>
        <function-ref name="reset" scoped="" ref="0x7f1566fb1020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1566fb39f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f1566fb0350"/>
        <function-ref name="set" scoped="" ref="0x7f1566fb34e0"/>
        <function-ref name="start" scoped="" ref="0x7f1566fb14e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1566fb19a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1566f8e0f0" loc="63:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f1566f8e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1566f8c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1566f8c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1566f8c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1566f8ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1566fabcf0" loc="62:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1566fabcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1566f90b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1566f8f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1566f8f090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1566f8fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1566f8ab60" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f1566f8ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1566f897d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1566f89e40" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1566f89e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1566f87ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1566f86670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1566f861b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1566f86b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1566f7f9a0" loc="36:/opt/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f1566f7f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e531a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1567e53510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1566f7c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1566e94020" loc="49:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1566e94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566e943a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e94530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e946c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566e94850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566e949e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1566e94c30" loc="50:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1566e94c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566e93020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566e931b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e93340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e934d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566e93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1566e938b0" loc="51:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1566e938b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1566e93c30"/>
        <function-ref name="source" scoped="" ref="0x7f1566e93dc0"/>
        <function-ref name="address" scoped="" ref="0x7f1566e92020"/>
        <function-ref name="destination" scoped="" ref="0x7f1566e921b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1566e92340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1566e924d0"/>
        <function-ref name="type" scoped="" ref="0x7f1566e92660"/>
        <function-ref name="setType" scoped="" ref="0x7f1566e927f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1566e92980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1566e92b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1566e92ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1566e91020" loc="52:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f1566e91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1566e913a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1566e91530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1566e916c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1566601540" loc="49:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1566601540"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15666018c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566601a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566601be0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566601d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566600020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1566600270" loc="50:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1566600270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15666005f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566600780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566600910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566600aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566600c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1566600e80" loc="51:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1566600e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15665ff220"/>
        <function-ref name="source" scoped="" ref="0x7f15665ff3b0"/>
        <function-ref name="address" scoped="" ref="0x7f15665ff540"/>
        <function-ref name="destination" scoped="" ref="0x7f15665ff6d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f15665ff860"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15665ff9f0"/>
        <function-ref name="type" scoped="" ref="0x7f15665ffb80"/>
        <function-ref name="setType" scoped="" ref="0x7f15665ffd10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15665fe020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15665fe1b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15665fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f15665fe5d0" loc="52:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f15665fe5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f15665fe950"/>
        <function-ref name="noAck" scoped="" ref="0x7f15665feae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15665fec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f15665f4690" loc="44:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f15665f4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15665f4a10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15665f4ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15665f4d30"/>
        <function-ref name="cancel" scoped="" ref="0x7f15665f3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15665f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f15665f3460" loc="46:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f15665f3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15665f37e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15665f3970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15665f3b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f15665f3c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15665f3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f15665f20e0" loc="47:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.CSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f15665f20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15665f2460"/>
        <function-ref name="source" scoped="" ref="0x7f15665f25f0"/>
        <function-ref name="address" scoped="" ref="0x7f15665f2780"/>
        <function-ref name="destination" scoped="" ref="0x7f15665f2910"/>
        <function-ref name="setSource" scoped="" ref="0x7f15665f2aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15665f2c30"/>
        <function-ref name="type" scoped="" ref="0x7f15665f2dc0"/>
        <function-ref name="setType" scoped="" ref="0x7f15665f1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15665f11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15665f1340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15665f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1566ef7c20" loc="43:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f1566ef7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566ef4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566ef41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566ef4340"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566ef44d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566ef4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1566ea9400" loc="48:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1566ea9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566ea97a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566ea9930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566ea9ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566ea9c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566ea9de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1566eaa580" loc="46:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f1566eaa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566eaa920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566eaaab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566eaac40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566eaadd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566ea9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1566ea7720" loc="50:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1566ea7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566ea7aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566ea7c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566ea7dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566ea6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566ea61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f1566ea6480" loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f1566ea6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1566ea6800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1566ea6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f1566ea6c60" loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f1566ea6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1566ea5020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1566ea51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1566ea8060" loc="49:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1566ea8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1566ea83e0"/>
        <function-ref name="source" scoped="" ref="0x7f1566ea8570"/>
        <function-ref name="address" scoped="" ref="0x7f1566ea8700"/>
        <function-ref name="destination" scoped="" ref="0x7f1566ea8890"/>
        <function-ref name="setSource" scoped="" ref="0x7f1566ea8a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1566ea8bb0"/>
        <function-ref name="type" scoped="" ref="0x7f1566ea8d40"/>
        <function-ref name="setType" scoped="" ref="0x7f1566ea7020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1566ea71b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1566ea7340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1566ea74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1566e87020" loc="46:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.CReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1566e87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566e873a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566e87530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e876c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e87850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566e879e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1566e88910" loc="45:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.CReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1566e88910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1566e88c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1566e87c30" loc="47:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.CReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1566e87c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1566e86020"/>
        <function-ref name="source" scoped="" ref="0x7f1566e861b0"/>
        <function-ref name="address" scoped="" ref="0x7f1566e86340"/>
        <function-ref name="destination" scoped="" ref="0x7f1566e864d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1566e86660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1566e867f0"/>
        <function-ref name="type" scoped="" ref="0x7f1566e86980"/>
        <function-ref name="setType" scoped="" ref="0x7f1566e86b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1566e86ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1566e86e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1566e85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1566e84730" loc="6:CraneCommunicationP.nc">
      <component-ref qname="CraneCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1566e84730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566e84ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566e84c40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e84dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e80020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566e801b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1566e80480" loc="7:CraneCommunicationP.nc">
      <component-ref qname="CraneCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1566e80480"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566e80800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e80990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e80b20"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566e80cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566e80e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f1566e7f170" loc="8:CraneCommunicationP.nc">
      <component-ref qname="CraneCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1566e7f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1566e7f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CraneLink" ref="0x7f1566e793c0" loc="9:CraneCommunicationP.nc">
      <component-ref qname="CraneCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CraneLink" scoped="" ref="0x7f1566e793c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CraneLink"/>
      </instance>
      <interface-functions>
        <function-ref name="send_command" scoped="" ref="0x7f1566e79740"/>
        <function-ref name="craneCommandFrom" scoped="" ref="0x7f1566e798d0"/>
        <function-ref name="craneLocation" scoped="" ref="0x7f1566e79a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1566e613a0" loc="49:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1566e613a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566e61720"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e618b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e61a40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566e61bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566e61d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1566e60020" loc="50:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1566e60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566e603a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566e60530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e606c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e60850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566e609e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1566e60c30" loc="51:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1566e60c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1566e5f020"/>
        <function-ref name="source" scoped="" ref="0x7f1566e5f1b0"/>
        <function-ref name="address" scoped="" ref="0x7f1566e5f340"/>
        <function-ref name="destination" scoped="" ref="0x7f1566e5f4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1566e5f660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1566e5f7f0"/>
        <function-ref name="type" scoped="" ref="0x7f1566e5f980"/>
        <function-ref name="setType" scoped="" ref="0x7f1566e5fb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1566e5fca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1566e5fe30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1566e5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1566e5e2b0" loc="52:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f1566e5e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1566e5e630"/>
        <function-ref name="noAck" scoped="" ref="0x7f1566e5e7c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1566e5e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f15665a3540" loc="49:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f15665a3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15665a38c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15665a3a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15665a3be0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15665a3d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15665a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f15665a2270" loc="50:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f15665a2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15665a25f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15665a2780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15665a2910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15665a2aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15665a2c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f15665a2e80" loc="51:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f15665a2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15665a1220"/>
        <function-ref name="source" scoped="" ref="0x7f15665a13b0"/>
        <function-ref name="address" scoped="" ref="0x7f15665a1540"/>
        <function-ref name="destination" scoped="" ref="0x7f15665a16d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f15665a1860"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15665a19f0"/>
        <function-ref name="type" scoped="" ref="0x7f15665a1b80"/>
        <function-ref name="setType" scoped="" ref="0x7f15665a1d10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15665a0020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15665a01b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15665a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f15665a05d0" loc="52:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f15665a05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f15665a0950"/>
        <function-ref name="noAck" scoped="" ref="0x7f15665a0ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15665a0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1566596690" loc="44:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1566596690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566596a10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566596ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566596d30"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566595020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15665951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f1566595460" loc="46:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f1566595460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15665957e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566595970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566595b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566595c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566595e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f15665930e0" loc="47:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="shipmainC.SSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f15665930e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1566593460"/>
        <function-ref name="source" scoped="" ref="0x7f15665935f0"/>
        <function-ref name="address" scoped="" ref="0x7f1566593780"/>
        <function-ref name="destination" scoped="" ref="0x7f1566593910"/>
        <function-ref name="setSource" scoped="" ref="0x7f1566593aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1566593c30"/>
        <function-ref name="type" scoped="" ref="0x7f1566593dc0"/>
        <function-ref name="setType" scoped="" ref="0x7f1566592020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15665921b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1566592340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15665924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1566e5b410" loc="46:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.SReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1566e5b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566e5b790"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566e5b920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e5bab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e5bc40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566e5bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1566e5ce10" loc="45:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.SReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1566e5ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1566e5b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1566e5a060" loc="47:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="shipmainC.SReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f1566e5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1566e5a3e0"/>
        <function-ref name="source" scoped="" ref="0x7f1566e5a570"/>
        <function-ref name="address" scoped="" ref="0x7f1566e5a700"/>
        <function-ref name="destination" scoped="" ref="0x7f1566e5a890"/>
        <function-ref name="setSource" scoped="" ref="0x7f1566e5aa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1566e5abb0"/>
        <function-ref name="type" scoped="" ref="0x7f1566e5ad40"/>
        <function-ref name="setType" scoped="" ref="0x7f1566e59020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1566e591b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1566e59340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1566e594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SysLink" ref="0x7f1566e4b970" loc="10:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SysLink" scoped="" ref="0x7f1566e4b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SysLink"/>
      </instance>
      <interface-functions>
        <function-ref name="makeAllShipCargoQuiery" scoped="" ref="0x7f1566e4bcf0"/>
        <function-ref name="responseMsg" scoped="" ref="0x7f1566e4be80"/>
        <function-ref name="makeShipQuiery" scoped="" ref="0x7f1566e52030"/>
        <function-ref name="makeAllShipIDQuiery" scoped="" ref="0x7f1566e521c0"/>
        <function-ref name="makeGlobalTimeQuiery" scoped="" ref="0x7f1566e52350"/>
        <function-ref name="ships" scoped="" ref="0x7f1566e524e0"/>
        <function-ref name="cargoLoaded" scoped="" ref="0x7f1566e52670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1566e58b50" loc="6:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f1566e58b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1566e55020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1566e551b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e55340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e554d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1566e55660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1566e55930" loc="7:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f1566e55930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1566e55cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1566e55e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1566e54020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1566e541b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1566e54340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f1566e54620" loc="8:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f1566e54620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1566e549a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CraneLink" ref="0x7f1566e52960" loc="11:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CraneLink" scoped="" ref="0x7f1566e52960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CraneLink"/>
      </instance>
      <interface-functions>
        <function-ref name="send_command" scoped="" ref="0x7f1566e52ce0"/>
        <function-ref name="craneCommandFrom" scoped="" ref="0x7f1566e52e70"/>
        <function-ref name="craneLocation" scoped="" ref="0x7f1566e51030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendWelcomeMsg" ref="0x7f1566e51400" loc="12:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendWelcomeMsg" scoped="" ref="0x7f1566e51400"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1566e51780"/>
        <function-ref name="stop" scoped="" ref="0x7f1566e51910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="simulateSendWelcome" ref="0x7f1566e42710" loc="48:SystemCommunicationP.nc">
      <component-ref qname="SystemCommunicationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="simulateSendWelcome" scoped="" ref="0x7f1566e42710"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1566e42a90"/>
        <function-ref name="runTask" scoped="" ref="0x7f1566e42c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SysLink" ref="0x7f1566e0a020" loc="18:KnowledgeCenterP.nc">
      <component-ref qname="KnowledgeCenterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SysLink" scoped="" ref="0x7f1566e0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SysLink"/>
      </instance>
      <interface-functions>
        <function-ref name="makeAllShipCargoQuiery" scoped="" ref="0x7f1566e0a3a0"/>
        <function-ref name="responseMsg" scoped="" ref="0x7f1566e0a530"/>
        <function-ref name="makeShipQuiery" scoped="" ref="0x7f1566e0a6c0"/>
        <function-ref name="makeAllShipIDQuiery" scoped="" ref="0x7f1566e0a850"/>
        <function-ref name="makeGlobalTimeQuiery" scoped="" ref="0x7f1566e0a9e0"/>
        <function-ref name="ships" scoped="" ref="0x7f1566e0ab70"/>
        <function-ref name="cargoLoaded" scoped="" ref="0x7f1566e0ad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendShipMessages" ref="0x7f1566dedba0" loc="55:KnowledgeCenterP.nc">
      <component-ref qname="KnowledgeCenterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendShipMessages" scoped="" ref="0x7f1566dedba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1566dec020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1566dec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KnowledgeLink" ref="0x7f1566df6d40" loc="23:KnowledgeCenterP.nc">
      <component-ref qname="KnowledgeCenterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566df6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="KnowledgeLink"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="isCargoLoadedShip" scoped="" ref="0x7f1566e010e0"/>
        <function-ref name="getGlobalTimeLeft" scoped="" ref="0x7f1566e01270"/>
        <function-ref name="cargoWasPlaced" scoped="" ref="0x7f1566e01400"/>
        <function-ref name="isCargoLoaded" scoped="" ref="0x7f1566e01590"/>
        <function-ref name="getShipLocation" scoped="" ref="0x7f1566e01720"/>
        <function-ref name="getID" scoped="" ref="0x7f1566e018b0"/>
        <function-ref name="updateDone" scoped="" ref="0x7f1566e01a40"/>
        <function-ref name="getShipsInGame" scoped="" ref="0x7f1566e01bd0"/>
        <function-ref name="updateDatabase" scoped="" ref="0x7f1566e01d60"/>
        <function-ref name="getMyLocation" scoped="" ref="0x7f1566e00020"/>
        <function-ref name="cargoWasPlacedHere" scoped="" ref="0x7f1566e001b0"/>
        <function-ref name="getShipTimeLeft" scoped="" ref="0x7f1566e00340"/>
        <function-ref name="getMyTimeLeft" scoped="" ref="0x7f1566e004d0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1566e00760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getShipInfo" ref="0x7f1566decb50" loc="56:KnowledgeCenterP.nc">
      <component-ref qname="KnowledgeCenterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="getShipInfo" scoped="" ref="0x7f1566decb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1566deb020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1566deb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f1566e091e0" loc="19:KnowledgeCenterP.nc">
      <component-ref qname="KnowledgeCenterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x7f1566e091e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1566e06630"/>
        <function-ref name="fired" scoped="" ref="0x7f1566e08c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1566e079d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1566e07550"/>
        <function-ref name="getdt" scoped="" ref="0x7f1566e04020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1566e06ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1566e070d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1566e09dd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1566e06020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1566e082e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1566e087b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1566e03ab0" loc="22:KnowledgeCenterP.nc">
      <component-ref qname="KnowledgeCenterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1566e03ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1566e03e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendCargoStatusCheck" ref="0x7f1566deec70" loc="54:KnowledgeCenterP.nc">
      <component-ref qname="KnowledgeCenterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendCargoStatusCheck" scoped="" ref="0x7f1566deec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1566ded020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1566ded1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1566e04480" loc="20:KnowledgeCenterP.nc">
      <component-ref qname="KnowledgeCenterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1566e04480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1566e04800"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1566e04990"/>
        <function-ref name="led1On" scoped="" ref="0x7f1566e04b20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1566e04cb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1566e04e40"/>
        <function-ref name="get" scoped="" ref="0x7f1566e03020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1566e031b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1566e037f0"/>
        <function-ref name="set" scoped="" ref="0x7f1566e03340"/>
        <function-ref name="led0On" scoped="" ref="0x7f1566e034d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1566e03660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1566d6a140" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="shipmainC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1566d6a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1566d66630"/>
        <function-ref name="fired" scoped="" ref="0x7f1566d69b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1566d68920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1566d684a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1566d65020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1566d66ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1566d68020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1566d6ad30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1566d66020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1566d69220"/>
        <function-ref name="stop" scoped="" ref="0x7f1566d696f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KnowledgeLink" ref="0x7f1566d60020" loc="12:CraneControlP.nc">
      <component-ref qname="CraneControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566d60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="KnowledgeLink"/>
      </instance>
      <interface-functions>
        <function-ref name="isCargoLoadedShip" scoped="" ref="0x7f1566d603a0"/>
        <function-ref name="getGlobalTimeLeft" scoped="" ref="0x7f1566d60530"/>
        <function-ref name="cargoWasPlaced" scoped="" ref="0x7f1566d606c0"/>
        <function-ref name="isCargoLoaded" scoped="" ref="0x7f1566d60850"/>
        <function-ref name="getShipLocation" scoped="" ref="0x7f1566d609e0"/>
        <function-ref name="getID" scoped="" ref="0x7f1566d60b70"/>
        <function-ref name="updateDone" scoped="" ref="0x7f1566d60d00"/>
        <function-ref name="getShipsInGame" scoped="" ref="0x7f1566d5f020"/>
        <function-ref name="updateDatabase" scoped="" ref="0x7f1566d5f1b0"/>
        <function-ref name="getMyLocation" scoped="" ref="0x7f1566d5f340"/>
        <function-ref name="cargoWasPlacedHere" scoped="" ref="0x7f1566d5f4d0"/>
        <function-ref name="getShipTimeLeft" scoped="" ref="0x7f1566d5f660"/>
        <function-ref name="getMyTimeLeft" scoped="" ref="0x7f1566d5f7f0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1566d5fa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CraneLink" ref="0x7f1566d63560" loc="11:CraneControlP.nc">
      <component-ref qname="CraneControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CraneLink" scoped="" ref="0x7f1566d63560"/></type-interface>
      <instance>
        <interfacedef-ref qname="CraneLink"/>
      </instance>
      <interface-functions>
        <function-ref name="send_command" scoped="" ref="0x7f1566d638e0"/>
        <function-ref name="craneCommandFrom" scoped="" ref="0x7f1566d63a70"/>
        <function-ref name="craneLocation" scoped="" ref="0x7f1566d63c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1566d5fd40" loc="13:CraneControlP.nc">
      <component-ref qname="CraneControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1566d5fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1566d5e0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1566d5e270"/>
        <function-ref name="led1On" scoped="" ref="0x7f1566d5e400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1566d5e590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1566d5e720"/>
        <function-ref name="get" scoped="" ref="0x7f1566d5e8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1566d5ea40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1566d5d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1566d5ebd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1566d5ed60"/>
        <function-ref name="led2On" scoped="" ref="0x7f1566d5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7f1566d58af0" loc="15:CraneControlP.nc">
      <component-ref qname="CraneControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x7f1566d58af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1566d53110"/>
        <function-ref name="fired" scoped="" ref="0x7f1566d555b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1566d544a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1566d54020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1566d53a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1566d53590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1566d55a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1566d57750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1566d54ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1566d57c20"/>
        <function-ref name="stop" scoped="" ref="0x7f1566d55130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1566d5d5e0" loc="14:CraneControlP.nc">
      <component-ref qname="CraneControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1566d5d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1566d59a80"/>
        <function-ref name="fired" scoped="" ref="0x7f1566d5a090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1566d5ae10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1566d5a990"/>
        <function-ref name="getdt" scoped="" ref="0x7f1566d584a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1566d58020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1566d5a510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1566d5c200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1566d59470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1566d5c6d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1566d5cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1566cfeb00" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="shipmainC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1566cfeb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1566cf9110"/>
        <function-ref name="fired" scoped="" ref="0x7f1566cfb5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1566cfa4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1566cfa020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1566cf9a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1566cf9590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1566cfba30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1566cfd750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1566cfaab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1566cfdc20"/>
        <function-ref name="stop" scoped="" ref="0x7f1566cfb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1566cf7490" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="shipmainC.Timer3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1566cf7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1567e56d60"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1567e54180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1566cf3a20"/>
        <function-ref name="fired" scoped="" ref="0x7f1566cf4020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1566cf4da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1566cf4920"/>
        <function-ref name="getdt" scoped="" ref="0x7f1566cf24a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1566cf2020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1566cf44a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1566cf60d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1566cf3410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1566cf65a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1566cf6a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KnowledgeLink" ref="0x7f1566cea840" loc="3:KDBUserC.nc">
      <component-ref qname="shipmainC.KDB_CraneControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566cea840"/></type-interface>
      <instance>
        <interfacedef-ref qname="KnowledgeLink"/>
      </instance>
      <interface-functions>
        <function-ref name="isCargoLoadedShip" scoped="" ref="0x7f1566ceabc0"/>
        <function-ref name="getGlobalTimeLeft" scoped="" ref="0x7f1566cead50"/>
        <function-ref name="cargoWasPlaced" scoped="" ref="0x7f1566ce9020"/>
        <function-ref name="isCargoLoaded" scoped="" ref="0x7f1566ce91b0"/>
        <function-ref name="getShipLocation" scoped="" ref="0x7f1566ce9340"/>
        <function-ref name="getID" scoped="" ref="0x7f1566ce94d0"/>
        <function-ref name="updateDone" scoped="" ref="0x7f1566ce9660"/>
        <function-ref name="getShipsInGame" scoped="" ref="0x7f1566ce97f0"/>
        <function-ref name="updateDatabase" scoped="" ref="0x7f1566ce9980"/>
        <function-ref name="getMyLocation" scoped="" ref="0x7f1566ce9b10"/>
        <function-ref name="cargoWasPlacedHere" scoped="" ref="0x7f1566ce9ca0"/>
        <function-ref name="getShipTimeLeft" scoped="" ref="0x7f1566ce9e30"/>
        <function-ref name="getMyTimeLeft" scoped="" ref="0x7f1566ce8020"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1566ce82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KnowledgeLink" ref="0x7f1566ce6950" loc="3:ShipControlP.nc">
      <component-ref qname="ShipControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566ce6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="KnowledgeLink"/>
      </instance>
      <interface-functions>
        <function-ref name="isCargoLoadedShip" scoped="" ref="0x7f1566ce6cd0"/>
        <function-ref name="getGlobalTimeLeft" scoped="" ref="0x7f1566ce6e60"/>
        <function-ref name="cargoWasPlaced" scoped="" ref="0x7f1566ce3020"/>
        <function-ref name="isCargoLoaded" scoped="" ref="0x7f1566ce31b0"/>
        <function-ref name="getShipLocation" scoped="" ref="0x7f1566ce3340"/>
        <function-ref name="getID" scoped="" ref="0x7f1566ce34d0"/>
        <function-ref name="updateDone" scoped="" ref="0x7f1566ce3660"/>
        <function-ref name="getShipsInGame" scoped="" ref="0x7f1566ce37f0"/>
        <function-ref name="updateDatabase" scoped="" ref="0x7f1566ce3980"/>
        <function-ref name="getMyLocation" scoped="" ref="0x7f1566ce3b10"/>
        <function-ref name="cargoWasPlacedHere" scoped="" ref="0x7f1566ce3ca0"/>
        <function-ref name="getShipTimeLeft" scoped="" ref="0x7f1566ce3e30"/>
        <function-ref name="getMyTimeLeft" scoped="" ref="0x7f1566ce2020"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1566ce22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1566ce2570" loc="4:ShipControlP.nc">
      <component-ref qname="ShipControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1566ce2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1566ce28f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1566ce2a80"/>
        <function-ref name="led1On" scoped="" ref="0x7f1566ce2c10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1566ce2da0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1566ce1020"/>
        <function-ref name="get" scoped="" ref="0x7f1566ce11b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1566ce1340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1566ce1980"/>
        <function-ref name="set" scoped="" ref="0x7f1566ce14d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1566ce1660"/>
        <function-ref name="led2On" scoped="" ref="0x7f1566ce17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1566ce1c80" loc="5:ShipControlP.nc">
      <component-ref qname="ShipControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f1566ce1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1566ce00a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1566ce0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KnowledgeLink" ref="0x7f1566cdb380" loc="3:KDBUserC.nc">
      <component-ref qname="shipmainC.KDB_ShipControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KnowledgeLink" scoped="" ref="0x7f1566cdb380"/></type-interface>
      <instance>
        <interfacedef-ref qname="KnowledgeLink"/>
      </instance>
      <interface-functions>
        <function-ref name="isCargoLoadedShip" scoped="" ref="0x7f1566cdb700"/>
        <function-ref name="getGlobalTimeLeft" scoped="" ref="0x7f1566cdb890"/>
        <function-ref name="cargoWasPlaced" scoped="" ref="0x7f1566cdba20"/>
        <function-ref name="isCargoLoaded" scoped="" ref="0x7f1566cdbbb0"/>
        <function-ref name="getShipLocation" scoped="" ref="0x7f1566cdbd40"/>
        <function-ref name="getID" scoped="" ref="0x7f1566cd9020"/>
        <function-ref name="updateDone" scoped="" ref="0x7f1566cd91b0"/>
        <function-ref name="getShipsInGame" scoped="" ref="0x7f1566cd9340"/>
        <function-ref name="updateDatabase" scoped="" ref="0x7f1566cd94d0"/>
        <function-ref name="getMyLocation" scoped="" ref="0x7f1566cd9660"/>
        <function-ref name="cargoWasPlacedHere" scoped="" ref="0x7f1566cd97f0"/>
        <function-ref name="getShipTimeLeft" scoped="" ref="0x7f1566cd9980"/>
        <function-ref name="getMyTimeLeft" scoped="" ref="0x7f1566cd9b10"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1566cd9da0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1567db8c70" loc="62:/opt/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1567db9840" loc="60:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f1567dad810" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f1567dad590" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f1567db2e00" loc="31:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f1567daf8a0" loc="39:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f1567daf620" loc="39:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f1567dae3e0" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f1567dae160" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f1567daeca0" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1567d9aca0" loc="44:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1567d99420" loc="45:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1567d9be30" loc="42:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1567d972b0" loc="47:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1567d9a590" loc="43:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1567d99b40" loc="46:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1567d9b070" loc="40:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1567d9b740" loc="41:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1567edb190" loc="57:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1567ed8190" loc="72:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1567edb900" loc="65:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1567ed0670" loc="67:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1567ecf020" loc="75:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f1567e057f0" loc="85:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f1567e04020" loc="86:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f1567e05020" loc="79:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f1567deae30" loc="62:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1567e7fac0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f1567de8830" loc="52:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1567bdba60" loc="61:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1567bda270" loc="67:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f1567bdaa50" loc="72:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f1567bd9a20" loc="83:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1567bd61f0" loc="100:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1567bd6a00" loc="117:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1567bd9270" loc="77:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1567bd55a0" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1567bd5320" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f1567bdb2d0" loc="56:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f1567bd8270" loc="89:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1567bd8a00" loc="94:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f1567ba0730" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1567ba04b0" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f1567b9fc80" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1567b9fa00" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1567ba4a80" loc="104:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1567b9f020" loc="130:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1567b9d870" loc="95:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1567b9c0e0" loc="105:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f1567b187f0" loc="59:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1567b181e0" loc="59:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1567b18560" loc="59:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1567b17950" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567b176d0" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1567b13a10" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567b13790" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1567b0f020" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567b10910" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1567b10c40" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1567b10020" loc="106:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1567b11020" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567b128f0" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1567b12c20" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f1567b27970" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1567b27020" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1567b273a0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1567b276d0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1567b20160" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567b22ae0" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1567b22e10" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1567b22270" loc="123:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1567b24cd0" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567b24a50" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1567b233a0" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567b25d70" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1567b23110" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1567b1d670" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
              <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567b51cc0" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1567b1d060" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1567b1d390" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f1567af23a0" loc="65:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567af3d30" loc="65:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f1567af2110" loc="65:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f1567af1550" loc="71:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567af12d0" loc="71:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f1567af3540" loc="57:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f1567afcb50" loc="52:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f1567afc8d0" loc="52:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1567af9770" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567af94f0" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1567af7940" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567af76c0" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1567af6ab0" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567af6830" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f1567aea790" loc="65:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567aea510" loc="65:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f1567aee8b0" loc="46:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567aee290" loc="46:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f1567aee620" loc="46:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f1567aeb770" loc="59:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567aeb4f0" loc="59:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f1567aecca0" loc="53:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567aec680" loc="53:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f1567aeca10" loc="53:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f1567ae9780" loc="71:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567ae9500" loc="71:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f1567b009f0" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1567b00770" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1567b0a600" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1567b0a380" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1567b199e0" loc="68:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1567b0b520" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1567b0b2a0" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1567b07020" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1567b06950" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1567b06ca0" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1567b09a30" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1567b09450" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1567b097a0" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f1567b034a0" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1567b03220" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1567b02850" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1567b022a0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f1567b025c0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1567b419e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1567b052a0" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1567b05020" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1567b01020" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1567afe8c0" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1567afec10" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f1567b01e40" loc="195:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="setChannelDone" ref="0x7f1567ae51f0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f1567ae69a0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1567ae6720" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1567ae5a40" loc="55:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f1567aefb80" loc="35:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1567aefb80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1567aefdc0" loc="35:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1567aefdc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f1567ae0c00" loc="63:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1567aefdc0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567ae0980" loc="63:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f1567adfd80" loc="70:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567adfb00" loc="70:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f1567ae39c0" loc="49:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567ae3740" loc="49:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1567ae10c0" loc="78:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1567aefdc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567adea80" loc="78:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1567adede0" loc="78:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1567aefdc0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f1567acaac0" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f1567acaac0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f1567ac6d10" loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567ac6a90" loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1567ac62a0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f1567acaac0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567ac6020" loc="48:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f1567ac76c0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567ac7440" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1567ac4aa0" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f1567acaac0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567ac44a0" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1567ac4810" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f1567acaac0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1567aba5f0" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1567aba5f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1567ab6020" loc="61:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f1567abbd00" loc="47:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567abba80" loc="47:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1567a97120" loc="120:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f1567a98120" loc="97:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f1567a99770" loc="88:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1567a98910" loc="102:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1567a97b80" loc="128:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f1567a92110" loc="41:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a93e30" loc="41:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1567a9ac70" loc="37:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1567a936c0" loc="39:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a93440" loc="39:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1567a91ba0" loc="45:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a91580" loc="45:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1567a91910" loc="45:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1567a92e50" loc="43:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a92830" loc="43:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1567a92bc0" loc="43:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f1567a8e020" loc="49:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1567b4d440"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a8fca0" loc="49:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f1567a8ed00" loc="51:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1567b4d440"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a8e6f0" loc="51:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1567a8ea70" loc="51:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1567b4d440"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1567a8f550" loc="47:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a8f2d0" loc="47:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f1567a8d4c0" loc="53:/opt/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1567b4d440"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1567aa2cd0" loc="67:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1567aa2380" loc="67:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1567aa2700" loc="67:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1567aa2a30" loc="67:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1567a9d660" loc="122:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a9d060" loc="122:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1567a9d390" loc="122:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1567a9e790" loc="110:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1567aa0c00" loc="83:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567aa0980" loc="83:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1567a9fde0" loc="97:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a9f800" loc="97:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1567a9fb50" loc="97:/opt/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f1567a6f190" loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f1567a6faa0" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f1567a6e460" loc="79:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f1567a729c0" loc="48:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1567a562a0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1567a56020" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f1567a56a80" loc="62:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1567a5fe50" loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1567a5fbd0" loc="46:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1567a57810" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1567a57590" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="43:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f1567a5dd60" loc="58:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1567a5dae0" loc="58:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f1567a5b3f0" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="65:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1567a5b170" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f1567a5c970" loc="63:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="60:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1567a5c6f0" loc="63:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f1567a59020" loc="81:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="74:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1567a5bc60" loc="81:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f1567a5d2a0" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1567a5d020" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f15679f6270" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f1567a0a350" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a0a0d0" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f15679fbcb0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679fba30" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f15679f9490" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679f9210" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f15679fd490" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679fd210" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1567a0bcc0" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a0ba40" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f15679fb2b0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679fdbc0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f15679fb020" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f15679fea20" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679fe440" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f15679fe790" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f15679faa20" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679fa440" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f15679fa790" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f1567a042d0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f1567a04c30" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f1567a00020" loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a02c30" loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f1567a03760" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a034e0" loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f1567a022a0" loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a02020" loc="60:/opt/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f15679d7850" loc="60:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f15679d8910" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f1567b53180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f15679d8690" loc="50:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f1567b53180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f15679d70e0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f15679dce30" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f15679d60e0" loc="65:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f1567b53180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f15679d0550" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="69:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679d02d0" loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f15679d4860" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679d45e0" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f15679d1020" loc="61:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="58:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f15679d26b0" loc="56:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679d20d0" loc="56:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15679d2420" loc="56:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f15679dbcd0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679dba50" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f15679d1ab0" loc="67:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="63:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679d1830" loc="67:/opt/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1567a1fbb0" loc="46:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f1567a1f390" loc="40:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a1f110" loc="40:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f1567a1e750" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a1e4d0" loc="52:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f1567a1c020" loc="59:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f1567a1cba0" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a1c920" loc="65:/opt/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f1567a11bd0" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a11950" loc="41:/opt/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f1567a14e00" loc="86:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f1567a14630" loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1567a14020" loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1567a143a0" loc="80:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f1567a180b0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a19df0" loc="55:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f1567a18bc0" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a18940" loc="62:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f1567a16b00" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1567a164f0" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1567a16870" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f1567a1a720" loc="43:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f1567a195c0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a19020" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1567a19330" loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f1567a156c0" loc="75:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a15440" loc="75:/opt/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f15679e7d60" loc="131:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679e7ae0" loc="131:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f15679e8490" loc="120:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679e8210" loc="120:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f15679f4940" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679f4370" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f15679f46b0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f15679f1b10" loc="75:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679f1890" loc="75:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f15679e2bd0" loc="156:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679e25f0" loc="156:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f15679e2940" loc="156:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f15679f1020" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679f3ca0" loc="69:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f15679e72f0" loc="125:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679e8cf0" loc="125:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f15679e7060" loc="125:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f15679ef630" loc="88:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15679ef020" loc="88:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f15679ef3a0" loc="88:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f15679e3e20" loc="151:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679e3ba0" loc="151:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f15679f3430" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679f31b0" loc="63:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f15679ec2a0" loc="99:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679ec020" loc="99:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f15679ee630" loc="94:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15679ee020" loc="94:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f15679ee3a0" loc="94:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f15679de390" loc="178:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1567b4d860"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f15679e0680" loc="162:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679e0400" loc="162:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f15679dfb70" loc="173:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1567b4d440"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f15679e33a0" loc="146:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679e4d90" loc="146:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f15679e3110" loc="146:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f15679f0630" loc="81:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679f03b0" loc="81:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f15679ea9d0" loc="115:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679ea400" loc="115:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f15679ea740" loc="115:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f15679e6b40" loc="136:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679e6570" loc="136:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f15679e68b0" loc="136:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f15679dedc0" loc="185:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679deb40" loc="185:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f15679eb0c0" loc="105:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679ecaa0" loc="105:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f15679ecdb0" loc="105:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f15679f5b60" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679f58e0" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f15679df2a0" loc="168:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679df020" loc="168:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f15679e45f0" loc="141:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679e4370" loc="141:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f15679ebbc0" loc="110:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15679eb940" loc="110:/opt/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f1567a0f8b0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a0f2d0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f1567a0f620" loc="52:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f1567a0e0e0" loc="58:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f1567a10020" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a20cf0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f1567a10ab0" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a10830" loc="47:/opt/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f1567a085f0" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a08370" loc="46:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f1567a09a10" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a09790" loc="40:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f1567a08e40" loc="51:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f1567a06960" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567a066e0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f156796e8b0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f156796e8b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f156796eaf0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f156796eaf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1567967800" loc="109:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f156796eaf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f156796a7e0" loc="78:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1567969e10" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f156796eaf0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f156796eaf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1567969840" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f156796eaf0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1567969b80" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f156796eaf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1567969020" loc="88:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1567966020" loc="116:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f156796eaf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f156796b680" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f156796eaf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f156796b400" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f156796eaf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f156796a020" loc="73:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f156792e2a0" loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f156792e020" loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f156792cdd0" loc="67:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f156792cb50" loc="67:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f156792c2b0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f156792ebc0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f156792c020" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f156792a8d0" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
              <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f156792a610" loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f15679186a0" loc="50:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f1567917600" loc="60:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f1567918e80" loc="55:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f156791ce00" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f156791c820" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1567b41dc0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f156791cb70" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1567b401d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f15678708e0" loc="53:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f156786f270" loc="61:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f156786ba90" loc="65:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f156786b270" loc="59:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f156786d0e0" loc="90:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f156786d940" loc="98:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1567861b50" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f156786cb10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f15678618d0" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f156786cb10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1567866a90" loc="53:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f1567863620" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f156786cb10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f15678633a0" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f156786cb10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1567861020" loc="70:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f156786cb10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f15676f4020" loc="54:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
              <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15676f5d30" loc="54:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f15676f5390" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15676f5110" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="turnOff" ref="0x7f1567688ac0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f1567685bf0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f15676846a0" loc="64:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1567684420" loc="64:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f1567684e60" loc="70:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f1567685390" loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1567682740" loc="75:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="72:/opt/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f1567680510" loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1567680290" loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f156767f980" loc="64:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f156767f110" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1567680e50" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f1567609020" loc="52:/opt/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f156760a690" loc="46:/opt/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f15675dee40" loc="53:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f15675dee40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f15675da9a0" loc="64:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f15675dee40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f15675da720" loc="64:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f15675dee40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="37:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f15675b30b0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15675b4db0" loc="57:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15675b8e70" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="39:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15675b8bf0" loc="42:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f15675b5c20" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="44:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15675b5660" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f15675b5990" loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15675b4650" loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="49:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15675b43d0" loc="52:/opt/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="38:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="done" ref="0x7f15675814e0" loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1567581260" loc="53:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f15675849d0" loc="45:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="40:/opt/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f156750fa60" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f156750fa60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f15675057c0" loc="136:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1567509070" loc="83:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1567508df0" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1567508820" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1567508b60" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1567508070" loc="98:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f15675048a0" loc="151:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1567504020" loc="144:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1567509850" loc="92:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f156750c5f0" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f156750c370" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1567507dc0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f15675077f0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1567507b30" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f156750b110" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f156750ce30" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f156883b170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f156750b910" loc="78:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15674f3460" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15674f3460"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f15674f36a0" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15674f36a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f15674f2020" loc="64:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15674f36a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f15674f1120" loc="76:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f15674f28a0" loc="71:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f15674f1880" loc="82:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f15674c2b20" loc="89:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f15674c48e0" loc="85:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f15674c65a0" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f15674c2350" loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f15674c20d0" loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f15674c4110" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15674c5e30" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f15674c15c0" loc="90:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f15674c1340" loc="90:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f15674c6d40" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f15674c5710" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15674c5490" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f15674b1910" loc="92:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f15674b4880" loc="68:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f15674b2030" loc="74:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f15674b2860" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f15674b0190" loc="98:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f15674b10e0" loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f15674b55e0" loc="57:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1567e381d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f1567e385f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f15674b4040" loc="63:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1567e381d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f1567e385f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f15674b5da0" loc="63:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1567e381d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f1567e385f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f15674bf0d0" loc="41:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15674bf0d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f15674bb9f0" loc="74:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f15674bebf0" loc="58:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15674bfa10" loc="48:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15674bf0d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f15674bc390" loc="62:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f15674ba1f0" loc="80:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15674be440" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15674bf0d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f15674be1c0" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15674bf0d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15674bcb00" loc="65:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15674bb270" loc="68:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f15674d5430" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15674d5430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f15674cf020" loc="98:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f15674d0020" loc="87:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15674d5d60" loc="61:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15674d5430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f15674cfa00" loc="104:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f15674cf780" loc="104:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f15674ce270" loc="110:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f15674d27b0" loc="75:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f15674d2020" loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f15674d07e0" loc="93:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15674d4760" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15674d5430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f15674d44e0" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f15674d5430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15674d1020" loc="78:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15674d1770" loc="81:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15672b9070" loc="59:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15672b9070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f15672b92b0" loc="59:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15672b92b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f15672b9de0" loc="66:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15672b92b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f15672b9b60" loc="66:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15672b92b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f15672bd610" loc="54:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f15672bc7d0" loc="66:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f15672bc020" loc="61:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f15672bdd30" loc="61:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f15672c1d70" loc="53:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f15672c4020" loc="62:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15672c7ca0" loc="62:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f15672c33c0" loc="74:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15672c3140" loc="74:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f15672c4890" loc="68:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f15672c3e50" loc="81:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15672c3bd0" loc="81:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f15671cc350" loc="40:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15671cc350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f15671c42a0" loc="88:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f15671c4020" loc="88:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f15671c5020" loc="76:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15671ccc90" loc="47:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15671cc350"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f15671c8110" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15671cc350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f15671c9e10" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15671cc350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f15671c88c0" loc="64:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f15671c57e0" loc="82:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15671c9670" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15671cc350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f15671c93f0" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15671cc350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15671c6070" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15671c67c0" loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f15671a93b0" loc="76:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f15671aba00" loc="76:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f15671abd90" loc="76:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15671a9110" loc="76:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f15671a8980" loc="88:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f15671a7bd0" loc="88:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f15671a8020" loc="88:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15671a8360" loc="88:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f156883c610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f15671a86d0" loc="89:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f15671ad4c0" loc="45:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f15671ad240" loc="45:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f15671931f0" loc="86:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f1567189070" loc="126:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f156718ea00" loc="117:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f1567189a90" loc="128:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f1567189810" loc="128:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f1567194a10" loc="83:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f156718b5c0" loc="122:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f156718b340" loc="122:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f156718f0b0" loc="113:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f1567190dd0" loc="113:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f1567192190" loc="97:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f15671844e0" loc="141:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f1567184260" loc="141:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f156718f850" loc="114:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f1567187c10" loc="131:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f1567187990" loc="131:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1567186b70" loc="136:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f156718a8a0" loc="125:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f156718a620" loc="125:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f1567185b10" loc="140:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f156718d3f0" loc="119:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f156718d170" loc="119:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1567192b70" loc="103:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15671928f0" loc="103:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f156718e2a0" loc="116:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f156718e020" loc="116:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f156718be30" loc="123:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f1567187270" loc="129:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f1567186390" loc="132:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f1567185350" loc="138:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f156718db70" loc="120:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f1567193980" loc="89:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f15671905b0" loc="109:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1567190330" loc="109:/opt/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1567135190" loc="95:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15671359e0" loc="105:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f15670d1a20" loc="81:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f15670cd020" loc="87:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f15670d4ad0" loc="79:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f15670cc270" loc="91:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f15670cda10" loc="88:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f15670cd790" loc="88:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f15670d0d80" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15670d0b00" loc="83:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f15670ccc70" loc="92:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f15670cc9f0" loc="92:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f15670d12b0" loc="80:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f15670cf750" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15670cf4d0" loc="84:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f15670d03e0" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15670d0160" loc="82:/opt/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1566f0e5e0" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1566f0e020" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1566f0e350" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1566f09bb0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1566f095b0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1566f098e0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1566f0dd20" loc="112:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1566f0c900" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1566f0c680" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1566f0be00" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1566f0b820" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1567b2a160"/>
                <typename><typedef-ref name="message_t" ref="0x7f1567b287f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1566f0bb70" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CraneLink" loc="1:CraneLink.nc">
      <function command="" provided="0" name="send_command" ref="0x7f1566e7c350" loc="3:CraneLink.nc">
        <interfacedef-ref qname="CraneLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f1566e7c0d0" loc="3:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="craneCommandFrom" ref="0x7f1566e79120" loc="5:CraneLink.nc">
        <interfacedef-ref qname="CraneLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shipID" ref="0x7f1566e7bb30" loc="5:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
          <variable name="cmd" ref="0x7f1566e7be60" loc="5:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="craneLocation" ref="0x7f1566e7b420" loc="4:CraneLink.nc">
        <interfacedef-ref qname="CraneLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="location_x" ref="0x7f1566e7ca70" loc="4:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
          <variable name="location_y" ref="0x7f1566e7cdf0" loc="4:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
          <variable name="cargoPlaced" ref="0x7f1566e7b180" loc="4:CraneLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SysLink" loc="2:SysLink.nc">
      <function command="" provided="0" name="makeAllShipCargoQuiery" ref="0x7f1566e4fa40" loc="6:SysLink.nc">
        <interfacedef-ref qname="SysLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="responseMsg" ref="0x7f1566e4ec50" loc="9:SysLink.nc">
        <interfacedef-ref qname="SysLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="queryResponseMsg" ref="0x7f1567dc43a0"/>
                <typename><typedef-ref name="queryResponseMsg" ref="0x7f1567dc3af0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rmsg" ref="0x7f1566e4e9d0" loc="9:SysLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="queryResponseMsg" ref="0x7f1567dc43a0"/>
                <typename><typedef-ref name="queryResponseMsg" ref="0x7f1567dc3af0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeShipQuiery" ref="0x7f1566e507f0" loc="4:SysLink.nc">
        <interfacedef-ref qname="SysLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shipID" ref="0x7f1566e50570" loc="4:SysLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeAllShipIDQuiery" ref="0x7f1566e4f2a0" loc="5:SysLink.nc">
        <interfacedef-ref qname="SysLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="len" ref="0x7f1566e4f020" loc="5:SysLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeGlobalTimeQuiery" ref="0x7f1566e4e270" loc="7:SysLink.nc">
        <interfacedef-ref qname="SysLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="ships" ref="0x7f1566e4d960" loc="10:SysLink.nc">
        <interfacedef-ref qname="SysLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="num_ships" ref="0x7f1566e4d360" loc="10:SysLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
          <variable name="sID" ref="0x7f1566e4d6d0" loc="10:SysLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="cargoLoaded" ref="0x7f1566e4b6d0" loc="11:SysLink.nc">
        <interfacedef-ref qname="SysLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="num_ships" ref="0x7f1566e4b0d0" loc="11:SysLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
          <variable name="sID" ref="0x7f1566e4b440" loc="11:SysLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="KnowledgeLink" loc="3:KnowledgeLink.nc">
      <function command="" provided="0" name="isCargoLoadedShip" ref="0x7f1566df8020" loc="19:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ship_id" ref="0x7f1566dfac40" loc="19:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalTimeLeft" ref="0x7f1566e02af0" loc="6:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x7f156883c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cargoWasPlaced" ref="0x7f1566dfb070" loc="14:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isCargoLoaded" ref="0x7f1566dfc920" loc="13:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1567f03500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShipLocation" ref="0x7f1566dfa4f0" loc="18:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="locBundle" ref="0x7f1567dbd0c0"/>
            <typename><typedef-ref name="locBundle" ref="0x7f1567dbd980"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ship_id" ref="0x7f1566dfa270" loc="18:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getID" ref="0x7f1566df7390" loc="23:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f1566df7110" loc="23:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="updateDone" ref="0x7f1566df65a0" loc="27:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="err" ref="0x7f1566df6320" loc="27:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShipsInGame" ref="0x7f1566dff880" loc="7:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1566dff280" loc="7:KnowledgeLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1566dff5f0" loc="7:KnowledgeLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateDatabase" ref="0x7f1566df7b00" loc="26:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1567ed3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMyLocation" ref="0x7f1566dfc1f0" loc="12:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="locBundle" ref="0x7f1567dbd0c0"/>
            <typename><typedef-ref name="locBundle" ref="0x7f1567dbd980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cargoWasPlacedHere" ref="0x7f1566dfe2a0" loc="8:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="locBundle" ref="0x7f1567dbd0c0"/>
              <typename><typedef-ref name="locBundle" ref="0x7f1567dbd980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="loc" ref="0x7f1566dfe020" loc="8:KnowledgeLink.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="locBundle" ref="0x7f1567dbd0c0"/>
              <typename><typedef-ref name="locBundle" ref="0x7f1567dbd980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShipTimeLeft" ref="0x7f1566dfba70" loc="17:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x7f156883c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ship_id" ref="0x7f1566dfb7f0" loc="17:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMyTimeLeft" ref="0x7f1566dfea10" loc="11:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x7f156883c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f1566df89f0" loc="22:KnowledgeLink.nc">
        <interfacedef-ref qname="KnowledgeLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="senderID" ref="0x7f1566df8770" loc="22:KnowledgeLink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f156883dad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
